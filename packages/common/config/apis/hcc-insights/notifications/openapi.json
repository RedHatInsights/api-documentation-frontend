{
  "components": {
    "schemas": {
      "AddAccessRequest": {
        "properties": {
          "application_id": {
            "$ref": "#/components/schemas/UUID"
          },
          "role": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AddApplicationRequest": {
        "properties": {
          "bundle_id": {
            "$ref": "#/components/schemas/UUID"
          },
          "display_name": {
            "type": "string"
          },
          "name": {
            "maxLength": 255,
            "pattern": "[a-z][a-z_0-9-]*",
            "type": "string"
          },
          "owner_role": {
            "maxLength": 200,
            "type": "string"
          }
        },
        "required": [
          "name",
          "display_name",
          "bundle_id"
        ],
        "type": "object"
      },
      "AggregationEmailTemplate": {
        "properties": {
          "application": {
            "$ref": "#/components/schemas/Application"
          },
          "application_id": {
            "$ref": "#/components/schemas/UUID"
          },
          "body_template": {
            "$ref": "#/components/schemas/Template"
          },
          "body_template_id": {
            "$ref": "#/components/schemas/UUID"
          },
          "created": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "id": {
            "$ref": "#/components/schemas/UUID"
          },
          "subject_template": {
            "$ref": "#/components/schemas/Template"
          },
          "subject_template_id": {
            "$ref": "#/components/schemas/UUID"
          },
          "subscription_type": {
            "$ref": "#/components/schemas/EmailSubscriptionType"
          },
          "updated": {
            "$ref": "#/components/schemas/LocalDateTime"
          }
        },
        "required": [
          "subscription_type",
          "subject_template_id",
          "body_template_id"
        ],
        "type": "object"
      },
      "Application": {
        "properties": {
          "bundle_id": {
            "$ref": "#/components/schemas/UUID"
          },
          "created": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "display_name": {
            "type": "string"
          },
          "id": {
            "$ref": "#/components/schemas/UUID"
          },
          "name": {
            "maxLength": 255,
            "pattern": "[a-z][a-z_0-9-]*",
            "type": "string"
          },
          "updated": {
            "$ref": "#/components/schemas/LocalDateTime"
          }
        },
        "required": [
          "name",
          "display_name",
          "bundle_id"
        ],
        "type": "object"
      },
      "Application1": {
        "properties": {
          "display_name": {
            "type": "string"
          },
          "id": {
            "$ref": "#/components/schemas/UUID"
          }
        },
        "required": [
          "id",
          "display_name"
        ],
        "type": "object"
      },
      "ApplicationSettingsValue": {
        "properties": {
          "hasForcedEmail": {
            "type": "boolean"
          },
          "notifications": {
            "additionalProperties": {
              "type": "boolean"
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "BasicAuthentication": {
        "properties": {
          "password": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "BehaviorGroup": {
        "properties": {
          "actions": {
            "items": {
              "$ref": "#/components/schemas/BehaviorGroupAction"
            },
            "type": "array"
          },
          "behaviors": {
            "items": {
              "$ref": "#/components/schemas/EventTypeBehavior"
            },
            "type": "array",
            "uniqueItems": true
          },
          "bundle": {
            "$ref": "#/components/schemas/Bundle"
          },
          "bundle_id": {
            "$ref": "#/components/schemas/UUID"
          },
          "created": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "default_behavior": {
            "type": "boolean"
          },
          "display_name": {
            "pattern": "\\S",
            "type": "string"
          },
          "id": {
            "$ref": "#/components/schemas/UUID"
          },
          "updated": {
            "$ref": "#/components/schemas/LocalDateTime"
          }
        },
        "required": [
          "display_name",
          "bundle_id"
        ],
        "type": "object"
      },
      "BehaviorGroupAction": {
        "properties": {
          "created": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "endpoint": {
            "$ref": "#/components/schemas/Endpoint"
          },
          "id": {
            "$ref": "#/components/schemas/BehaviorGroupActionId"
          }
        },
        "type": "object"
      },
      "BehaviorGroupActionId": {
        "properties": {
          "behaviorGroupId": {
            "$ref": "#/components/schemas/UUID"
          },
          "endpointId": {
            "$ref": "#/components/schemas/UUID"
          }
        },
        "required": [
          "behaviorGroupId",
          "endpointId"
        ],
        "type": "object"
      },
      "Bundle": {
        "properties": {
          "created": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "display_name": {
            "type": "string"
          },
          "id": {
            "$ref": "#/components/schemas/UUID"
          },
          "name": {
            "maxLength": 255,
            "pattern": "[a-z][a-z_0-9-]*",
            "type": "string"
          },
          "updated": {
            "$ref": "#/components/schemas/LocalDateTime"
          }
        },
        "required": [
          "name",
          "display_name"
        ],
        "type": "object"
      },
      "BundleSettingsValue": {
        "properties": {
          "applications": {
            "additionalProperties": {
              "$ref": "#/components/schemas/ApplicationSettingsValue"
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "CamelProperties": {
        "properties": {
          "basic_authentication": {
            "$ref": "#/components/schemas/BasicAuthentication"
          },
          "disable_ssl_verification": {
            "type": "boolean"
          },
          "extras": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "secret_token": {
            "maxLength": 255,
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "required": [
          "url",
          "disable_ssl_verification"
        ],
        "type": "object"
      },
      "CreateBehaviorGroupRequest": {
        "properties": {
          "bundle_id": {
            "$ref": "#/components/schemas/UUID"
          },
          "bundle_name": {
            "type": "string"
          },
          "bundle_uuid_or_bundle_name_valid": {
            "type": "boolean"
          },
          "display_name": {
            "maxLength": 150,
            "pattern": "\\S",
            "type": "string"
          },
          "endpoint_ids": {
            "items": {
              "format": "uuid",
              "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
              "type": "string"
            },
            "type": "array"
          },
          "event_type_ids": {
            "items": {
              "format": "uuid",
              "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          }
        },
        "required": [
          "display_name"
        ],
        "type": "object"
      },
      "CreateBehaviorGroupResponse": {
        "properties": {
          "bundle_id": {
            "$ref": "#/components/schemas/UUID"
          },
          "created": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "display_name": {
            "type": "string"
          },
          "endpoints": {
            "items": {
              "format": "uuid",
              "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
              "type": "string"
            },
            "type": "array"
          },
          "event_types": {
            "items": {
              "format": "uuid",
              "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "id": {
            "$ref": "#/components/schemas/UUID"
          }
        },
        "required": [
          "id",
          "bundle_id",
          "display_name",
          "endpoints",
          "event_types",
          "created"
        ],
        "type": "object"
      },
      "CurrentStatus": {
        "properties": {
          "end_time": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "start_time": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          }
        },
        "required": [
          "status"
        ],
        "type": "object"
      },
      "DuplicateNameMigrationReport": {
        "properties": {
          "updatedBehaviorGroups": {
            "format": "int32",
            "type": "integer"
          },
          "updatedIntegrations": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "EmailSubscriptionType": {
        "enum": [
          "INSTANT",
          "DAILY",
          "DRAWER"
        ],
        "type": "string"
      },
      "Endpoint": {
        "properties": {
          "created": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "description": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "id": {
            "$ref": "#/components/schemas/UUID"
          },
          "name": {
            "maxLength": 255,
            "type": "string"
          },
          "properties": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EndpointProperties"
              }
            ],
            "oneOf": [
              {
                "$ref": "#/components/schemas/WebhookProperties"
              },
              {
                "$ref": "#/components/schemas/SystemSubscriptionProperties"
              },
              {
                "$ref": "#/components/schemas/CamelProperties"
              }
            ],
            "type": "object"
          },
          "server_errors": {
            "format": "int32",
            "minimum": 0,
            "type": "integer"
          },
          "status": {
            "$ref": "#/components/schemas/EndpointStatus"
          },
          "sub_type": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/EndpointType"
          },
          "updated": {
            "$ref": "#/components/schemas/LocalDateTime"
          }
        },
        "required": [
          "name",
          "description",
          "type"
        ],
        "type": "object"
      },
      "EndpointPage": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/Endpoint"
            },
            "type": "array"
          },
          "links": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "meta": {
            "$ref": "#/components/schemas/Meta"
          }
        },
        "required": [
          "data",
          "links",
          "meta"
        ],
        "type": "object"
      },
      "EndpointProperties": {
        "type": "object"
      },
      "EndpointStatus": {
        "enum": [
          "READY",
          "UNKNOWN",
          "NEW",
          "PROVISIONING",
          "DELETING",
          "FAILED"
        ],
        "type": "string"
      },
      "EndpointType": {
        "enum": [
          "webhook",
          "email_subscription",
          "camel",
          "ansible",
          "drawer"
        ],
        "type": "string"
      },
      "Environment": {
        "enum": [
          "PROD",
          "STAGE",
          "EPHEMERAL",
          "LOCAL_SERVER"
        ],
        "type": "string"
      },
      "EventLogEntry": {
        "properties": {
          "actions": {
            "items": {
              "$ref": "#/components/schemas/EventLogEntryAction"
            },
            "type": "array"
          },
          "application": {
            "type": "string"
          },
          "bundle": {
            "type": "string"
          },
          "created": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "event_type": {
            "type": "string"
          },
          "id": {
            "$ref": "#/components/schemas/UUID"
          },
          "payload": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "created",
          "bundle",
          "application",
          "event_type",
          "actions"
        ],
        "type": "object"
      },
      "EventLogEntryAction": {
        "properties": {
          "details": {
            "additionalProperties": {
              "type": "object"
            },
            "type": "object"
          },
          "endpoint_id": {
            "$ref": "#/components/schemas/UUID"
          },
          "endpoint_sub_type": {
            "type": "string"
          },
          "endpoint_type": {
            "$ref": "#/components/schemas/EndpointType"
          },
          "id": {
            "$ref": "#/components/schemas/UUID"
          },
          "invocation_result": {
            "deprecated": true,
            "type": "boolean"
          },
          "status": {
            "$ref": "#/components/schemas/EventLogEntryActionStatus"
          }
        },
        "required": [
          "id",
          "endpoint_type",
          "invocation_result",
          "status"
        ],
        "type": "object"
      },
      "EventLogEntryActionStatus": {
        "enum": [
          "SENT",
          "SUCCESS",
          "PROCESSING",
          "FAILED",
          "UNKNOWN"
        ],
        "type": "string"
      },
      "EventType": {
        "properties": {
          "application": {
            "$ref": "#/components/schemas/Application"
          },
          "application_id": {
            "$ref": "#/components/schemas/UUID"
          },
          "description": {
            "type": "string"
          },
          "display_name": {
            "type": "string"
          },
          "fully_qualified_name": {
            "type": "string"
          },
          "id": {
            "$ref": "#/components/schemas/UUID"
          },
          "name": {
            "maxLength": 255,
            "pattern": "[a-z][a-z_0-9-]*",
            "type": "string"
          }
        },
        "required": [
          "name",
          "display_name",
          "application_id"
        ],
        "type": "object"
      },
      "EventTypeBehavior": {
        "properties": {
          "created": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "event_type": {
            "$ref": "#/components/schemas/EventType"
          },
          "id": {
            "$ref": "#/components/schemas/EventTypeBehaviorId"
          }
        },
        "type": "object"
      },
      "EventTypeBehaviorId": {
        "properties": {
          "behaviorGroupId": {
            "$ref": "#/components/schemas/UUID"
          },
          "eventTypeId": {
            "$ref": "#/components/schemas/UUID"
          }
        },
        "required": [
          "eventTypeId",
          "behaviorGroupId"
        ],
        "type": "object"
      },
      "Facet": {
        "properties": {
          "children": {
            "items": {
              "$ref": "#/components/schemas/Facet"
            },
            "type": "array"
          },
          "displayName": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "displayName"
        ],
        "type": "object"
      },
      "HttpType": {
        "enum": [
          "GET",
          "POST",
          "PUT"
        ],
        "type": "string"
      },
      "InstantEmailTemplate": {
        "properties": {
          "body_template": {
            "$ref": "#/components/schemas/Template"
          },
          "body_template_id": {
            "$ref": "#/components/schemas/UUID"
          },
          "created": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "event_type": {
            "$ref": "#/components/schemas/EventType"
          },
          "event_type_id": {
            "$ref": "#/components/schemas/UUID"
          },
          "id": {
            "$ref": "#/components/schemas/UUID"
          },
          "subject_template": {
            "$ref": "#/components/schemas/Template"
          },
          "subject_template_id": {
            "$ref": "#/components/schemas/UUID"
          },
          "updated": {
            "$ref": "#/components/schemas/LocalDateTime"
          }
        },
        "required": [
          "subject_template_id",
          "body_template_id"
        ],
        "type": "object"
      },
      "InternalApplicationUserPermission": {
        "properties": {
          "application_display_name": {
            "type": "string"
          },
          "application_id": {
            "$ref": "#/components/schemas/UUID"
          },
          "role": {
            "type": "string"
          }
        },
        "required": [
          "application_id",
          "application_display_name",
          "role"
        ],
        "type": "object"
      },
      "InternalRoleAccess": {
        "properties": {
          "application_id": {
            "$ref": "#/components/schemas/UUID"
          },
          "id": {
            "$ref": "#/components/schemas/UUID"
          },
          "role": {
            "maxLength": 200,
            "type": "string"
          }
        },
        "required": [
          "role",
          "application_id"
        ],
        "type": "object"
      },
      "InternalUserPermissions": {
        "properties": {
          "applications": {
            "items": {
              "$ref": "#/components/schemas/Application1"
            },
            "type": "array"
          },
          "is_admin": {
            "type": "boolean"
          },
          "roles": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "is_admin",
          "applications",
          "roles"
        ],
        "type": "object"
      },
      "LocalDate": {
        "example": "2022-03-10",
        "format": "date",
        "type": "string"
      },
      "LocalDateTime": {
        "example": "2022-03-10T12:15:50",
        "format": "date-time",
        "type": "string"
      },
      "LocalTime": {
        "example": "13:45.30.123456789",
        "externalDocs": {
          "description": "As defined by 'partial-time' in RFC3339",
          "url": "https://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14"
        },
        "format": "local-time",
        "type": "string"
      },
      "MessageValidationResponse": {
        "properties": {
          "errors": {
            "additionalProperties": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "type": "object"
          }
        },
        "required": [
          "errors"
        ],
        "type": "object"
      },
      "Meta": {
        "properties": {
          "count": {
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "count"
        ],
        "type": "object"
      },
      "NotificationHistory": {
        "properties": {
          "created": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "details": {
            "additionalProperties": {
              "type": "object"
            },
            "type": "object"
          },
          "endpointId": {
            "$ref": "#/components/schemas/UUID"
          },
          "endpointSubType": {
            "type": "string"
          },
          "endpointType": {
            "$ref": "#/components/schemas/EndpointType"
          },
          "id": {
            "$ref": "#/components/schemas/UUID"
          },
          "invocationResult": {
            "deprecated": true,
            "type": "boolean"
          },
          "invocationTime": {
            "format": "int64",
            "type": "integer"
          },
          "status": {
            "$ref": "#/components/schemas/NotificationStatus"
          }
        },
        "required": [
          "invocationTime",
          "invocationResult",
          "status"
        ],
        "type": "object"
      },
      "NotificationStatus": {
        "enum": [
          "FAILED_INTERNAL",
          "FAILED_EXTERNAL",
          "PROCESSING",
          "SENT",
          "SUCCESS"
        ],
        "type": "string"
      },
      "PageEventLogEntry": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/EventLogEntry"
            },
            "type": "array"
          },
          "links": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "meta": {
            "$ref": "#/components/schemas/Meta"
          }
        },
        "required": [
          "data",
          "links",
          "meta"
        ],
        "type": "object"
      },
      "PageEventType": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/EventType"
            },
            "type": "array"
          },
          "links": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "meta": {
            "$ref": "#/components/schemas/Meta"
          }
        },
        "required": [
          "data",
          "links",
          "meta"
        ],
        "type": "object"
      },
      "RenderEmailTemplateRequest": {
        "properties": {
          "payload": {
            "minLength": 1,
            "type": "string"
          },
          "template": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "template",
          "payload"
        ],
        "type": "object"
      },
      "RequestDefaultBehaviorGroupPropertyList": {
        "properties": {
          "ignore_preferences": {
            "type": "boolean"
          },
          "only_admins": {
            "type": "boolean"
          }
        },
        "required": [
          "only_admins",
          "ignore_preferences"
        ],
        "type": "object"
      },
      "RequestSystemSubscriptionProperties": {
        "properties": {
          "group_id": {
            "$ref": "#/components/schemas/UUID"
          },
          "only_admins": {
            "type": "boolean"
          }
        },
        "required": [
          "only_admins"
        ],
        "type": "object"
      },
      "ServerInfo": {
        "properties": {
          "environment": {
            "$ref": "#/components/schemas/Environment"
          }
        },
        "type": "object"
      },
      "SettingsValues": {
        "properties": {
          "bundles": {
            "additionalProperties": {
              "$ref": "#/components/schemas/BundleSettingsValue"
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Status": {
        "enum": [
          "UP",
          "MAINTENANCE"
        ],
        "type": "string"
      },
      "SystemSubscriptionProperties": {
        "properties": {
          "group_id": {
            "$ref": "#/components/schemas/UUID"
          },
          "ignore_preferences": {
            "type": "boolean"
          },
          "only_admins": {
            "type": "boolean"
          }
        },
        "required": [
          "only_admins",
          "ignore_preferences"
        ],
        "type": "object"
      },
      "Template": {
        "properties": {
          "created": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "data": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "$ref": "#/components/schemas/UUID"
          },
          "name": {
            "maxLength": 100,
            "type": "string"
          },
          "updated": {
            "$ref": "#/components/schemas/LocalDateTime"
          }
        },
        "required": [
          "name",
          "description",
          "data"
        ],
        "type": "object"
      },
      "TriggerDailyDigestRequest": {
        "properties": {
          "application_name": {
            "pattern": "\\S",
            "type": "string"
          },
          "bundle_name": {
            "pattern": "\\S",
            "type": "string"
          },
          "end": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "org_id": {
            "pattern": "\\S",
            "type": "string"
          },
          "start": {
            "$ref": "#/components/schemas/LocalDateTime"
          }
        },
        "required": [
          "application_name",
          "bundle_name",
          "org_id"
        ],
        "type": "object"
      },
      "UUID": {
        "format": "uuid",
        "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
        "type": "string"
      },
      "UpdateBehaviorGroupRequest": {
        "properties": {
          "display_name": {
            "maxLength": 150,
            "type": "string"
          },
          "display_name_not_null_and_blank": {
            "type": "boolean"
          },
          "endpoint_ids": {
            "items": {
              "format": "uuid",
              "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
              "type": "string"
            },
            "type": "array"
          },
          "event_type_ids": {
            "items": {
              "format": "uuid",
              "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          }
        },
        "type": "object"
      },
      "UserConfigPreferences": {
        "properties": {
          "daily_email": {
            "type": "boolean"
          },
          "instant_email": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "WebhookProperties": {
        "properties": {
          "basic_authentication": {
            "$ref": "#/components/schemas/BasicAuthentication"
          },
          "disable_ssl_verification": {
            "type": "boolean"
          },
          "method": {
            "$ref": "#/components/schemas/HttpType"
          },
          "secret_token": {
            "maxLength": 255,
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "required": [
          "url",
          "method",
          "disable_ssl_verification"
        ],
        "type": "object"
      }
    },
    "securitySchemes": {
      "SecurityScheme": {
        "description": "Authentication",
        "scheme": "basic",
        "type": "http"
      }
    }
  },
  "info": {
    "description": "The API for Notifications",
    "title": "Notifications",
    "version": "v1.0"
  },
  "openapi": "3.0.3",
  "paths": {
    "/notifications/behaviorGroups": {
      "post": {
        "operationId": "NotificationResource$V1_createBehaviorGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBehaviorGroupRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateBehaviorGroupResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Bad or no content passed."
          }
        },
        "summary": "Create a behavior group - assigning actions and linking to event types as requested"
      }
    },
    "/notifications/behaviorGroups/affectedByRemovalOfEndpoint/{endpointId}": {
      "get": {
        "operationId": "NotificationResource$V1_getBehaviorGroupsAffectedByRemovalOfEndpoint",
        "parameters": [
          {
            "in": "path",
            "name": "endpointId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/BehaviorGroup"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Retrieve the behavior groups affected by the removal of an endpoint."
      }
    },
    "/notifications/behaviorGroups/{behaviorGroupId}/actions": {
      "put": {
        "operationId": "NotificationResource$V1_updateBehaviorGroupActions",
        "parameters": [
          {
            "description": "The UUID of the behavior group to update",
            "in": "path",
            "name": "behaviorGroupId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "format": "uuid",
                  "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
                  "type": "string"
                },
                "type": "array"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Update the list of actions of a behavior group."
      }
    },
    "/notifications/behaviorGroups/{id}": {
      "delete": {
        "operationId": "NotificationResource$V1_deleteBehaviorGroup",
        "parameters": [
          {
            "description": "The UUID of the behavior group to delete",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Delete a behavior group."
      },
      "put": {
        "operationId": "NotificationResource$V1_updateBehaviorGroup",
        "parameters": [
          {
            "description": "The UUID of the behavior group to update",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBehaviorGroupRequest"
              }
            }
          },
          "description": "New parameters",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Bad or no content passed."
          },
          "404": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "No behavior group found with the passed id."
          }
        },
        "summary": "Update a behavior group."
      }
    },
    "/notifications/bundles/{bundleId}/behaviorGroups": {
      "get": {
        "operationId": "NotificationResource$V1_findBehaviorGroupsByBundleId",
        "parameters": [
          {
            "description": "UUID of the bundle to retrieve the behavior groups for.",
            "in": "path",
            "name": "bundleId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/BehaviorGroup"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Retrieve the behavior groups of a bundle."
      }
    },
    "/notifications/bundles/{bundleName}": {
      "get": {
        "operationId": "NotificationResource$V1_getBundleByName",
        "parameters": [
          {
            "in": "path",
            "name": "bundleName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bundle"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Retrieve the bundle by name"
      }
    },
    "/notifications/bundles/{bundleName}/applications/{applicationName}": {
      "get": {
        "operationId": "NotificationResource$V1_getApplicationByNameAndBundleName",
        "parameters": [
          {
            "in": "path",
            "name": "applicationName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "bundleName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Retrieve the application by name of a given bundle name"
      }
    },
    "/notifications/bundles/{bundleName}/applications/{applicationName}/eventTypes/{eventTypeName}": {
      "get": {
        "operationId": "NotificationResource$V1_getEventTypesByNameAndBundleAndApplicationName",
        "parameters": [
          {
            "in": "path",
            "name": "applicationName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "bundleName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "eventTypeName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventType"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Retrieve the event type by name of a given bundle name and application name"
      }
    },
    "/notifications/eventTypes": {
      "get": {
        "operationId": "NotificationResource$V1_getEventTypes",
        "parameters": [
          {
            "in": "query",
            "name": "applicationIds",
            "schema": {
              "items": {
                "format": "uuid",
                "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
                "type": "string"
              },
              "type": "array",
              "uniqueItems": true
            }
          },
          {
            "in": "query",
            "name": "bundleId",
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          },
          {
            "in": "query",
            "name": "eventTypeName",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "default": "20",
              "format": "int32",
              "maximum": 200,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "format": "int32",
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "pageNumber",
            "schema": {
              "format": "int32",
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "deprecated": true,
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort_by",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageEventType"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Retrieve all event types. The returned list can be filtered by bundle or application."
      }
    },
    "/notifications/eventTypes/affectedByRemovalOfBehaviorGroup/{behaviorGroupId}": {
      "get": {
        "operationId": "NotificationResource$V1_getEventTypesAffectedByRemovalOfBehaviorGroup",
        "parameters": [
          {
            "description": "The UUID of the behavior group to check",
            "in": "path",
            "name": "behaviorGroupId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EventType"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Retrieve the event types affected by the removal of a behavior group."
      }
    },
    "/notifications/eventTypes/{eventTypeId}/behaviorGroups": {
      "get": {
        "operationId": "NotificationResource$V1_getLinkedBehaviorGroups",
        "parameters": [
          {
            "in": "path",
            "name": "eventTypeId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "default": "20",
              "format": "int32",
              "maximum": 200,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "format": "int32",
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "pageNumber",
            "schema": {
              "format": "int32",
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "deprecated": true,
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort_by",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/BehaviorGroup"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Retrieve the behavior groups linked to an event type."
      },
      "put": {
        "operationId": "NotificationResource$V1_updateEventTypeBehaviors",
        "parameters": [
          {
            "description": "UUID of the eventType to associate with the behavior group(s)",
            "in": "path",
            "name": "eventTypeId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "format": "uuid",
                  "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
                  "type": "string"
                },
                "type": "array",
                "uniqueItems": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Update the list of behavior groups of an event type."
      }
    },
    "/notifications/eventTypes/{eventTypeId}/behaviorGroups/{behaviorGroupId}": {
      "delete": {
        "operationId": "NotificationResource$V1_deleteBehaviorGroupFromEventType",
        "parameters": [
          {
            "in": "path",
            "name": "behaviorGroupId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          },
          {
            "in": "path",
            "name": "eventTypeId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Delete a behavior group from the given event type."
      }
    },
    "/notifications/eventTypes/{eventTypeUuid}/behaviorGroups/{behaviorGroupUuid}": {
      "put": {
        "operationId": "NotificationResource$V1_appendBehaviorGroupToEventType",
        "parameters": [
          {
            "in": "path",
            "name": "behaviorGroupUuid",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          },
          {
            "in": "path",
            "name": "eventTypeUuid",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Add a behavior group to the given event type."
      }
    },
    "/notifications/events": {
      "get": {
        "description": "Allowed `sort_by` fields are `bundle`, `application`, `event` and `created`. The ordering can be optionally specified by appending `:asc` or `:desc` to the field, e.g. `bundle:desc`. Defaults to `desc` for the `created` field and to `asc` for all other fields.",
        "operationId": "EventResource$V1_getEvents",
        "parameters": [
          {
            "in": "query",
            "name": "appIds",
            "schema": {
              "items": {
                "format": "uuid",
                "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
                "type": "string"
              },
              "type": "array",
              "uniqueItems": true
            }
          },
          {
            "in": "query",
            "name": "bundleIds",
            "schema": {
              "items": {
                "format": "uuid",
                "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
                "type": "string"
              },
              "type": "array",
              "uniqueItems": true
            }
          },
          {
            "in": "query",
            "name": "endDate",
            "schema": {
              "$ref": "#/components/schemas/LocalDate"
            }
          },
          {
            "in": "query",
            "name": "endpointTypes",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "uniqueItems": true
            }
          },
          {
            "in": "query",
            "name": "eventTypeDisplayName",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "includeActions",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "includeDetails",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "includePayload",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "invocationResults",
            "schema": {
              "items": {
                "type": "boolean"
              },
              "type": "array",
              "uniqueItems": true
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "default": "20",
              "format": "int32",
              "maximum": 200,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "format": "int32",
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "pageNumber",
            "schema": {
              "format": "int32",
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "deprecated": true,
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort_by",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "startDate",
            "schema": {
              "$ref": "#/components/schemas/LocalDate"
            }
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "items": {
                "$ref": "#/components/schemas/EventLogEntryActionStatus"
              },
              "type": "array",
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageEventLogEntry"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Retrieve the event log entries."
      }
    },
    "/notifications/facets/applications": {
      "get": {
        "operationId": "NotificationResource$V1_getApplicationsFacets",
        "parameters": [
          {
            "in": "query",
            "name": "bundleName",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Facet"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Return a thin list of configured applications. This can be used to configure a filter in the UI"
      }
    },
    "/notifications/facets/bundles": {
      "get": {
        "operationId": "NotificationResource$V1_getBundleFacets",
        "parameters": [
          {
            "in": "query",
            "name": "includeApplications",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Facet"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Return a thin list of configured bundles. This can be used to configure a filter in the UI"
      }
    },
    "/org-config/daily-digest/time-preference": {
      "get": {
        "operationId": "OrgConfigResource$V1_getDailyDigestTimePreference",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "operationId": "OrgConfigResource$V1_saveDailyDigestTimePreference",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocalTime"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "summary": "Save the daily digest UTC time preference. To cover all time zones conversion to UTC, the accepted minute values are 00, 15, 30 and 45."
      }
    },
    "/user-config/notification-preference": {
      "get": {
        "operationId": "UserConfigResource$V1_getSettingsSchema",
        "parameters": [
          {
            "in": "query",
            "name": "bundleName",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "operationId": "UserConfigResource$V1_saveSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SettingsValues"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/user-config/notification-preference/{bundleName}/{applicationName}": {
      "get": {
        "operationId": "UserConfigResource$V1_getPreferences",
        "parameters": [
          {
            "in": "path",
            "name": "applicationName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "bundleName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserConfigPreferences"
                }
              }
            },
            "description": "OK"
          }
        }
      }
    }
  },
  "servers": [
    {
      "description": "Production Server",
      "url": "https://console.redhat.com/{basePath}",
      "variables": {
        "basePath": {
          "default": "/api/notifications/v1.0"
        }
      }
    },
    {
      "description": "Development Server",
      "url": "http://localhost:{port}/{basePath}",
      "variables": {
        "basePath": {
          "default": "/api/notifications/v1.0"
        },
        "port": {
          "default": "8080"
        }
      }
    }
  ]
}