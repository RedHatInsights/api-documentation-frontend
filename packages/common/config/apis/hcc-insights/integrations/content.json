{
  "extras": {},
  "openapi": {
    "components": {
      "schemas": {
        "AddAccessRequest": {
          "properties": {
            "application_id": {
              "$ref": "#/components/schemas/UUID"
            },
            "role": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "AddApplicationRequest": {
          "properties": {
            "bundle_id": {
              "$ref": "#/components/schemas/UUID"
            },
            "display_name": {
              "type": "string"
            },
            "name": {
              "maxLength": 255,
              "pattern": "[a-z][a-z_0-9-]*",
              "type": "string"
            },
            "owner_role": {
              "maxLength": 200,
              "type": "string"
            }
          },
          "required": [
            "name",
            "display_name",
            "bundle_id"
          ],
          "type": "object"
        },
        "AggregationEmailTemplate": {
          "properties": {
            "application": {
              "$ref": "#/components/schemas/Application"
            },
            "application_id": {
              "$ref": "#/components/schemas/UUID"
            },
            "body_template": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Template"
                }
              ],
              "readOnly": true,
              "type": "object"
            },
            "body_template_id": {
              "$ref": "#/components/schemas/UUID"
            },
            "created": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/LocalDateTime"
                }
              ],
              "readOnly": true,
              "type": "string"
            },
            "id": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/UUID"
                }
              ],
              "readOnly": true,
              "type": "string"
            },
            "subject_template": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Template"
                }
              ],
              "readOnly": true,
              "type": "object"
            },
            "subject_template_id": {
              "$ref": "#/components/schemas/UUID"
            },
            "subscription_type": {
              "$ref": "#/components/schemas/SubscriptionType"
            },
            "updated": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/LocalDateTime"
                }
              ],
              "readOnly": true,
              "type": "string"
            }
          },
          "required": [
            "subscription_type",
            "subject_template_id",
            "body_template_id"
          ],
          "type": "object"
        },
        "Application": {
          "properties": {
            "bundle_id": {
              "$ref": "#/components/schemas/UUID"
            },
            "created": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/LocalDateTime"
                }
              ],
              "readOnly": true,
              "type": "string"
            },
            "display_name": {
              "type": "string"
            },
            "id": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/UUID"
                }
              ],
              "readOnly": true,
              "type": "string"
            },
            "name": {
              "maxLength": 255,
              "pattern": "[a-z][a-z_0-9-]*",
              "type": "string"
            },
            "updated": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/LocalDateTime"
                }
              ],
              "readOnly": true,
              "type": "string"
            }
          },
          "required": [
            "name",
            "display_name",
            "bundle_id"
          ],
          "type": "object"
        },
        "Application1": {
          "properties": {
            "display_name": {
              "type": "string"
            },
            "id": {
              "$ref": "#/components/schemas/UUID"
            }
          },
          "required": [
            "id",
            "display_name"
          ],
          "type": "object"
        },
        "ApplicationDTO": {
          "properties": {
            "bundle_id": {
              "$ref": "#/components/schemas/UUID"
            },
            "created": {
              "type": "string"
            },
            "display_name": {
              "type": "string"
            },
            "id": {
              "$ref": "#/components/schemas/UUID"
            },
            "name": {
              "pattern": "[a-z][a-z_0-9-]*",
              "type": "string"
            },
            "owner_role": {
              "type": "string"
            }
          },
          "required": [
            "name",
            "display_name",
            "bundle_id"
          ],
          "type": "object"
        },
        "ApplicationSettingsValue": {
          "properties": {
            "eventTypes": {
              "additionalProperties": {
                "$ref": "#/components/schemas/EventTypeSettingsValue"
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "BasicAuthenticationDTO": {
          "properties": {
            "password": {
              "type": "string"
            },
            "username": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "BehaviorGroup": {
          "properties": {
            "actions": {
              "items": {
                "$ref": "#/components/schemas/BehaviorGroupAction"
              },
              "type": "array"
            },
            "behaviors": {
              "items": {
                "$ref": "#/components/schemas/EventTypeBehavior"
              },
              "type": "array",
              "uniqueItems": true
            },
            "bundle": {
              "$ref": "#/components/schemas/Bundle"
            },
            "bundle_id": {
              "$ref": "#/components/schemas/UUID"
            },
            "created": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/LocalDateTime"
                }
              ],
              "readOnly": true,
              "type": "string"
            },
            "default_behavior": {
              "readOnly": true,
              "type": "boolean"
            },
            "display_name": {
              "pattern": "\\S",
              "type": "string"
            },
            "id": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/UUID"
                }
              ],
              "readOnly": true,
              "type": "string"
            },
            "updated": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/LocalDateTime"
                }
              ],
              "readOnly": true,
              "type": "string"
            }
          },
          "required": [
            "display_name",
            "bundle_id"
          ],
          "type": "object"
        },
        "BehaviorGroupAction": {
          "properties": {
            "created": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/LocalDateTime"
                }
              ],
              "readOnly": true,
              "type": "string"
            },
            "endpoint": {
              "$ref": "#/components/schemas/Endpoint"
            },
            "id": {
              "$ref": "#/components/schemas/BehaviorGroupActionId"
            }
          },
          "type": "object"
        },
        "BehaviorGroupActionId": {
          "properties": {
            "behaviorGroupId": {
              "$ref": "#/components/schemas/UUID"
            },
            "endpointId": {
              "$ref": "#/components/schemas/UUID"
            }
          },
          "required": [
            "behaviorGroupId",
            "endpointId"
          ],
          "type": "object"
        },
        "Bundle": {
          "properties": {
            "created": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/LocalDateTime"
                }
              ],
              "readOnly": true,
              "type": "string"
            },
            "display_name": {
              "type": "string"
            },
            "id": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/UUID"
                }
              ],
              "readOnly": true,
              "type": "string"
            },
            "name": {
              "maxLength": 255,
              "pattern": "[a-z][a-z_0-9-]*",
              "type": "string"
            },
            "updated": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/LocalDateTime"
                }
              ],
              "readOnly": true,
              "type": "string"
            }
          },
          "required": [
            "name",
            "display_name"
          ],
          "type": "object"
        },
        "BundleSettingsValue": {
          "properties": {
            "applications": {
              "additionalProperties": {
                "$ref": "#/components/schemas/ApplicationSettingsValue"
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "CamelPropertiesDTO": {
          "properties": {
            "basicAuthentication": {
              "$ref": "#/components/schemas/BasicAuthenticationDTO"
            },
            "disableSslVerification": {
              "type": "boolean"
            },
            "extras": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            "secretToken": {
              "maxLength": 255,
              "type": "string"
            },
            "url": {
              "type": "string"
            }
          },
          "required": [
            "disableSslVerification",
            "url"
          ],
          "type": "object"
        },
        "CreateBehaviorGroupRequest": {
          "properties": {
            "bundle_id": {
              "$ref": "#/components/schemas/UUID"
            },
            "bundle_name": {
              "type": "string"
            },
            "bundle_uuid_or_bundle_name_valid": {
              "type": "boolean"
            },
            "display_name": {
              "maxLength": 150,
              "pattern": "\\S",
              "type": "string"
            },
            "endpoint_ids": {
              "items": {
                "format": "uuid",
                "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
                "type": "string"
              },
              "type": "array"
            },
            "event_type_ids": {
              "items": {
                "format": "uuid",
                "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
                "type": "string"
              },
              "type": "array",
              "uniqueItems": true
            }
          },
          "required": [
            "display_name"
          ],
          "type": "object"
        },
        "CreateBehaviorGroupResponse": {
          "properties": {
            "bundle_id": {
              "$ref": "#/components/schemas/UUID"
            },
            "created": {
              "$ref": "#/components/schemas/LocalDateTime"
            },
            "display_name": {
              "type": "string"
            },
            "endpoints": {
              "items": {
                "format": "uuid",
                "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
                "type": "string"
              },
              "type": "array"
            },
            "event_types": {
              "items": {
                "format": "uuid",
                "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
                "type": "string"
              },
              "type": "array",
              "uniqueItems": true
            },
            "id": {
              "$ref": "#/components/schemas/UUID"
            }
          },
          "required": [
            "id",
            "bundle_id",
            "display_name",
            "endpoints",
            "event_types",
            "created"
          ],
          "type": "object"
        },
        "CurrentStatus": {
          "properties": {
            "end_time": {
              "$ref": "#/components/schemas/LocalDateTime"
            },
            "start_time": {
              "$ref": "#/components/schemas/LocalDateTime"
            },
            "status": {
              "$ref": "#/components/schemas/Status"
            }
          },
          "required": [
            "status"
          ],
          "type": "object"
        },
        "DrawerEntryPayload": {
          "properties": {
            "bundle": {
              "type": "string"
            },
            "created": {
              "$ref": "#/components/schemas/LocalDateTime"
            },
            "description": {
              "type": "string"
            },
            "id": {
              "$ref": "#/components/schemas/UUID"
            },
            "read": {
              "type": "boolean"
            },
            "source": {
              "type": "string"
            },
            "title": {
              "type": "string"
            }
          },
          "required": [
            "read"
          ],
          "type": "object"
        },
        "Endpoint": {
          "properties": {
            "created": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/LocalDateTime"
                }
              ],
              "readOnly": true,
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "enabled": {
              "type": "boolean"
            },
            "id": {
              "$ref": "#/components/schemas/UUID"
            },
            "name": {
              "maxLength": 255,
              "type": "string"
            },
            "properties": {
              "$ref": "#/components/schemas/EndpointProperties"
            },
            "server_errors": {
              "format": "int32",
              "minimum": 0,
              "type": "integer"
            },
            "status": {
              "$ref": "#/components/schemas/EndpointStatus"
            },
            "sub_type": {
              "type": "string"
            },
            "type": {
              "$ref": "#/components/schemas/EndpointType"
            },
            "updated": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/LocalDateTime"
                }
              ],
              "readOnly": true,
              "type": "string"
            }
          },
          "required": [
            "name",
            "description"
          ],
          "type": "object"
        },
        "EndpointDTO": {
          "properties": {
            "created": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/LocalDateTime"
                }
              ],
              "readOnly": true,
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "enabled": {
              "type": "boolean"
            },
            "id": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/UUID"
                }
              ],
              "readOnly": true,
              "type": "string"
            },
            "name": {
              "maxLength": 255,
              "type": "string"
            },
            "properties": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/EndpointPropertiesDTO"
                }
              ],
              "oneOf": [
                {
                  "$ref": "#/components/schemas/CamelPropertiesDTO"
                },
                {
                  "$ref": "#/components/schemas/SystemSubscriptionPropertiesDTO"
                },
                {
                  "$ref": "#/components/schemas/WebhookPropertiesDTO"
                }
              ],
              "type": "object"
            },
            "server_errors": {
              "format": "int32",
              "minimum": 0,
              "type": "integer"
            },
            "status": {
              "$ref": "#/components/schemas/EndpointStatusDTO"
            },
            "sub_type": {
              "maxLength": 20,
              "type": "string"
            },
            "type": {
              "$ref": "#/components/schemas/EndpointTypeDTO"
            },
            "updated": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/LocalDateTime"
                }
              ],
              "readOnly": true,
              "type": "string"
            }
          },
          "required": [
            "name",
            "description",
            "type"
          ],
          "type": "object"
        },
        "EndpointPage": {
          "properties": {
            "data": {
              "items": {
                "$ref": "#/components/schemas/EndpointDTO"
              },
              "type": "array"
            },
            "links": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            "meta": {
              "$ref": "#/components/schemas/Meta"
            }
          },
          "required": [
            "data",
            "links",
            "meta"
          ],
          "type": "object"
        },
        "EndpointProperties": {
          "type": "object"
        },
        "EndpointPropertiesDTO": {
          "type": "object"
        },
        "EndpointStatus": {
          "enum": [
            "READY",
            "UNKNOWN",
            "NEW",
            "PROVISIONING",
            "DELETING",
            "FAILED"
          ],
          "type": "string"
        },
        "EndpointStatusDTO": {
          "enum": [
            "DELETING",
            "FAILED",
            "NEW",
            "PROVISIONING",
            "READY",
            "UNKNOWN"
          ],
          "type": "string"
        },
        "EndpointTestRequest": {
          "properties": {
            "message": {
              "pattern": "\\S",
              "type": "string"
            }
          },
          "required": [
            "message"
          ],
          "type": "object"
        },
        "EndpointType": {
          "enum": [
            "ansible",
            "camel",
            "drawer",
            "email_subscription",
            "webhook"
          ],
          "type": "string"
        },
        "EndpointTypeDTO": {
          "enum": [
            "ansible",
            "camel",
            "drawer",
            "email_subscription",
            "webhook"
          ],
          "type": "string"
        },
        "Environment": {
          "enum": [
            "PROD",
            "STAGE",
            "EPHEMERAL",
            "LOCAL_SERVER"
          ],
          "type": "string"
        },
        "EventLogEntry": {
          "properties": {
            "actions": {
              "items": {
                "$ref": "#/components/schemas/EventLogEntryAction"
              },
              "type": "array"
            },
            "application": {
              "type": "string"
            },
            "bundle": {
              "type": "string"
            },
            "created": {
              "$ref": "#/components/schemas/LocalDateTime"
            },
            "event_type": {
              "type": "string"
            },
            "id": {
              "$ref": "#/components/schemas/UUID"
            },
            "payload": {
              "type": "string"
            }
          },
          "required": [
            "id",
            "created",
            "bundle",
            "application",
            "event_type",
            "actions"
          ],
          "type": "object"
        },
        "EventLogEntryAction": {
          "properties": {
            "details": {
              "additionalProperties": {},
              "type": "object"
            },
            "endpoint_id": {
              "$ref": "#/components/schemas/UUID"
            },
            "endpoint_sub_type": {
              "type": "string"
            },
            "endpoint_type": {
              "$ref": "#/components/schemas/EndpointType"
            },
            "id": {
              "$ref": "#/components/schemas/UUID"
            },
            "invocation_result": {
              "deprecated": true,
              "type": "boolean"
            },
            "status": {
              "$ref": "#/components/schemas/EventLogEntryActionStatus"
            }
          },
          "required": [
            "id",
            "endpoint_type",
            "invocation_result",
            "status"
          ],
          "type": "object"
        },
        "EventLogEntryActionStatus": {
          "enum": [
            "SENT",
            "SUCCESS",
            "PROCESSING",
            "FAILED",
            "UNKNOWN"
          ],
          "type": "string"
        },
        "EventType": {
          "properties": {
            "application": {
              "$ref": "#/components/schemas/Application"
            },
            "application_id": {
              "$ref": "#/components/schemas/UUID"
            },
            "description": {
              "type": "string"
            },
            "display_name": {
              "type": "string"
            },
            "fully_qualified_name": {
              "type": "string"
            },
            "id": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/UUID"
                }
              ],
              "readOnly": true,
              "type": "string"
            },
            "name": {
              "maxLength": 255,
              "pattern": "[a-z][a-z_0-9-]*",
              "type": "string"
            },
            "not_subscription_locked_or_subscribed_by_default": {
              "type": "boolean"
            },
            "subscribed_by_default": {
              "type": "boolean"
            },
            "subscription_locked": {
              "type": "boolean"
            },
            "visible": {
              "type": "boolean"
            }
          },
          "required": [
            "name",
            "display_name",
            "application_id"
          ],
          "type": "object"
        },
        "EventTypeBehavior": {
          "properties": {
            "created": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/LocalDateTime"
                }
              ],
              "readOnly": true,
              "type": "string"
            },
            "event_type": {
              "$ref": "#/components/schemas/EventType"
            },
            "id": {
              "$ref": "#/components/schemas/EventTypeBehaviorId"
            }
          },
          "type": "object"
        },
        "EventTypeBehaviorId": {
          "properties": {
            "behaviorGroupId": {
              "$ref": "#/components/schemas/UUID"
            },
            "eventTypeId": {
              "$ref": "#/components/schemas/UUID"
            }
          },
          "required": [
            "eventTypeId",
            "behaviorGroupId"
          ],
          "type": "object"
        },
        "EventTypeSettingsValue": {
          "properties": {
            "emailSubscriptionTypes": {
              "additionalProperties": {
                "type": "boolean"
              },
              "type": "object"
            },
            "hasForcedEmail": {
              "type": "boolean"
            },
            "subscriptionLocked": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "Facet": {
          "properties": {
            "children": {
              "items": {
                "$ref": "#/components/schemas/Facet"
              },
              "type": "array"
            },
            "displayName": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          },
          "required": [
            "id",
            "name",
            "displayName"
          ],
          "type": "object"
        },
        "HttpType": {
          "enum": [
            "GET",
            "POST",
            "PUT"
          ],
          "type": "string"
        },
        "InstantEmailTemplate": {
          "properties": {
            "body_template": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Template"
                }
              ],
              "readOnly": true,
              "type": "object"
            },
            "body_template_id": {
              "$ref": "#/components/schemas/UUID"
            },
            "created": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/LocalDateTime"
                }
              ],
              "readOnly": true,
              "type": "string"
            },
            "event_type": {
              "$ref": "#/components/schemas/EventType"
            },
            "event_type_id": {
              "$ref": "#/components/schemas/UUID"
            },
            "id": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/UUID"
                }
              ],
              "readOnly": true,
              "type": "string"
            },
            "subject_template": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Template"
                }
              ],
              "readOnly": true,
              "type": "object"
            },
            "subject_template_id": {
              "$ref": "#/components/schemas/UUID"
            },
            "updated": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/LocalDateTime"
                }
              ],
              "readOnly": true,
              "type": "string"
            }
          },
          "required": [
            "subject_template_id",
            "body_template_id"
          ],
          "type": "object"
        },
        "InternalApplicationUserPermission": {
          "properties": {
            "application_display_name": {
              "type": "string"
            },
            "application_id": {
              "$ref": "#/components/schemas/UUID"
            },
            "role": {
              "type": "string"
            }
          },
          "required": [
            "application_id",
            "application_display_name",
            "role"
          ],
          "type": "object"
        },
        "InternalRoleAccess": {
          "properties": {
            "application_id": {
              "$ref": "#/components/schemas/UUID"
            },
            "id": {
              "$ref": "#/components/schemas/UUID"
            },
            "role": {
              "maxLength": 200,
              "type": "string"
            }
          },
          "required": [
            "role",
            "application_id"
          ],
          "type": "object"
        },
        "InternalUserPermissions": {
          "properties": {
            "applications": {
              "items": {
                "$ref": "#/components/schemas/Application1"
              },
              "type": "array"
            },
            "is_admin": {
              "type": "boolean"
            },
            "roles": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "required": [
            "is_admin",
            "applications",
            "roles"
          ],
          "type": "object"
        },
        "LocalDate": {
          "example": "2022-03-10",
          "format": "date",
          "type": "string"
        },
        "LocalDateTime": {
          "example": "2022-03-10T12:15:50",
          "format": "date-time",
          "type": "string"
        },
        "LocalTime": {
          "example": "13:45:30.123456789",
          "externalDocs": {
            "description": "As defined by 'partial-time' in RFC3339",
            "url": "https://www.rfc-editor.org/rfc/rfc3339.html#section-5.6"
          },
          "format": "local-time",
          "type": "string"
        },
        "MessageValidationResponse": {
          "properties": {
            "errors": {
              "additionalProperties": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "type": "object"
            }
          },
          "required": [
            "errors"
          ],
          "type": "object"
        },
        "Meta": {
          "properties": {
            "count": {
              "format": "int64",
              "type": "integer"
            }
          },
          "required": [
            "count"
          ],
          "type": "object"
        },
        "NotificationHistory": {
          "properties": {
            "created": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/LocalDateTime"
                }
              ],
              "readOnly": true,
              "type": "string"
            },
            "details": {
              "additionalProperties": {},
              "type": "object"
            },
            "endpointId": {
              "$ref": "#/components/schemas/UUID"
            },
            "endpointSubType": {
              "type": "string"
            },
            "endpointType": {
              "$ref": "#/components/schemas/EndpointType"
            },
            "id": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/UUID"
                }
              ],
              "readOnly": true,
              "type": "string"
            },
            "invocationResult": {
              "deprecated": true,
              "type": "boolean"
            },
            "invocationTime": {
              "format": "int64",
              "type": "integer"
            },
            "status": {
              "$ref": "#/components/schemas/NotificationStatus"
            }
          },
          "required": [
            "invocationTime",
            "invocationResult",
            "status"
          ],
          "type": "object"
        },
        "NotificationStatus": {
          "enum": [
            "FAILED_INTERNAL",
            "FAILED_EXTERNAL",
            "PROCESSING",
            "SENT",
            "SUCCESS"
          ],
          "type": "string"
        },
        "PageBehaviorGroup": {
          "properties": {
            "data": {
              "items": {
                "$ref": "#/components/schemas/BehaviorGroup"
              },
              "type": "array"
            },
            "links": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            "meta": {
              "$ref": "#/components/schemas/Meta"
            }
          },
          "required": [
            "data",
            "links",
            "meta"
          ],
          "type": "object"
        },
        "PageDrawerEntryPayload": {
          "properties": {
            "data": {
              "items": {
                "$ref": "#/components/schemas/DrawerEntryPayload"
              },
              "type": "array"
            },
            "links": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            "meta": {
              "$ref": "#/components/schemas/Meta"
            }
          },
          "required": [
            "data",
            "links",
            "meta"
          ],
          "type": "object"
        },
        "PageEventLogEntry": {
          "properties": {
            "data": {
              "items": {
                "$ref": "#/components/schemas/EventLogEntry"
              },
              "type": "array"
            },
            "links": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            "meta": {
              "$ref": "#/components/schemas/Meta"
            }
          },
          "required": [
            "data",
            "links",
            "meta"
          ],
          "type": "object"
        },
        "PageEventType": {
          "properties": {
            "data": {
              "items": {
                "$ref": "#/components/schemas/EventType"
              },
              "type": "array"
            },
            "links": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            "meta": {
              "$ref": "#/components/schemas/Meta"
            }
          },
          "required": [
            "data",
            "links",
            "meta"
          ],
          "type": "object"
        },
        "PageNotificationHistory": {
          "properties": {
            "data": {
              "items": {
                "$ref": "#/components/schemas/NotificationHistory"
              },
              "type": "array"
            },
            "links": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            "meta": {
              "$ref": "#/components/schemas/Meta"
            }
          },
          "required": [
            "data",
            "links",
            "meta"
          ],
          "type": "object"
        },
        "RenderEmailTemplateRequest": {
          "properties": {
            "payload": {
              "minLength": 1,
              "type": "string"
            },
            "template": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "required": [
            "template",
            "payload"
          ],
          "type": "object"
        },
        "RequestDefaultBehaviorGroupPropertyList": {
          "properties": {
            "ignore_preferences": {
              "type": "boolean"
            },
            "only_admins": {
              "type": "boolean"
            }
          },
          "required": [
            "only_admins",
            "ignore_preferences"
          ],
          "type": "object"
        },
        "RequestSystemSubscriptionProperties": {
          "properties": {
            "group_id": {
              "$ref": "#/components/schemas/UUID"
            },
            "only_admins": {
              "type": "boolean"
            }
          },
          "required": [
            "only_admins"
          ],
          "type": "object"
        },
        "ServerInfo": {
          "properties": {
            "environment": {
              "$ref": "#/components/schemas/Environment"
            }
          },
          "type": "object"
        },
        "SettingsValuesByEventType": {
          "properties": {
            "bundles": {
              "additionalProperties": {
                "$ref": "#/components/schemas/BundleSettingsValue"
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "Status": {
          "enum": [
            "UP",
            "MAINTENANCE"
          ],
          "type": "string"
        },
        "SubscriptionType": {
          "enum": [
            "INSTANT",
            "DAILY",
            "DRAWER"
          ],
          "type": "string"
        },
        "SystemSubscriptionPropertiesDTO": {
          "properties": {
            "groupId": {
              "$ref": "#/components/schemas/UUID"
            },
            "ignorePreferences": {
              "type": "boolean"
            },
            "onlyAdmins": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "Template": {
          "properties": {
            "created": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/LocalDateTime"
                }
              ],
              "readOnly": true,
              "type": "string"
            },
            "data": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "id": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/UUID"
                }
              ],
              "readOnly": true,
              "type": "string"
            },
            "name": {
              "maxLength": 100,
              "type": "string"
            },
            "updated": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/LocalDateTime"
                }
              ],
              "readOnly": true,
              "type": "string"
            }
          },
          "required": [
            "name",
            "description",
            "data"
          ],
          "type": "object"
        },
        "TriggerDailyDigestRequest": {
          "properties": {
            "application_name": {
              "pattern": "\\S",
              "type": "string"
            },
            "bundle_name": {
              "pattern": "\\S",
              "type": "string"
            },
            "end": {
              "$ref": "#/components/schemas/LocalDateTime"
            },
            "org_id": {
              "pattern": "\\S",
              "type": "string"
            },
            "start": {
              "$ref": "#/components/schemas/LocalDateTime"
            }
          },
          "required": [
            "application_name",
            "bundle_name",
            "org_id"
          ],
          "type": "object"
        },
        "UUID": {
          "format": "uuid",
          "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
          "type": "string"
        },
        "UpdateApplicationRequest": {
          "properties": {
            "display_name": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "owner_role": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "UpdateBehaviorGroupRequest": {
          "properties": {
            "display_name": {
              "maxLength": 150,
              "type": "string"
            },
            "display_name_not_null_and_blank": {
              "type": "boolean"
            },
            "endpoint_ids": {
              "items": {
                "format": "uuid",
                "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
                "type": "string"
              },
              "type": "array"
            },
            "event_type_ids": {
              "items": {
                "format": "uuid",
                "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
                "type": "string"
              },
              "type": "array",
              "uniqueItems": true
            }
          },
          "type": "object"
        },
        "UpdateNotificationDrawerStatus": {
          "properties": {
            "notification_ids": {
              "items": {
                "format": "uuid",
                "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
                "type": "string"
              },
              "type": "array",
              "uniqueItems": true
            },
            "read_status": {
              "type": "boolean"
            }
          },
          "required": [
            "notification_ids",
            "read_status"
          ],
          "type": "object"
        },
        "WebhookPropertiesDTO": {
          "properties": {
            "basicAuthentication": {
              "$ref": "#/components/schemas/BasicAuthenticationDTO"
            },
            "bearerAuthentication": {
              "type": "string"
            },
            "disableSslVerification": {
              "type": "boolean"
            },
            "method": {
              "$ref": "#/components/schemas/HttpType"
            },
            "secretToken": {
              "maxLength": 255,
              "type": "string"
            },
            "url": {
              "type": "string"
            }
          },
          "required": [
            "disableSslVerification",
            "method",
            "url"
          ],
          "type": "object"
        },
        "X509Certificate": {
          "properties": {
            "application": {
              "type": "string"
            },
            "bundle": {
              "type": "string"
            },
            "id": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/UUID"
                }
              ],
              "readOnly": true,
              "type": "string"
            },
            "source_environment": {
              "type": "string"
            },
            "subject_dn": {
              "type": "string"
            }
          },
          "required": [
            "subject_dn",
            "source_environment",
            "bundle",
            "application"
          ],
          "type": "object"
        }
      }
    },
    "info": {
      "description": "The API for Integrations provides endpoints that you can use to create and manage integrations between third-party applications and the Red Hat Hybrid Cloud Console.",
      "title": "Integrations",
      "version": "v1.0"
    },
    "openapi": "3.0.3",
    "paths": {
      "/endpoints": {
        "get": {
          "description": "Provides a list of endpoints. Use this endpoint to find specific endpoints.",
          "operationId": "EndpointResource$V1_getEndpoints",
          "parameters": [
            {
              "description": "Number of items per page. If the value is 0, it will return all elements",
              "in": "query",
              "name": "limit",
              "schema": {
                "default": "20",
                "maximum": 200,
                "minimum": 1,
                "type": "integer"
              }
            },
            {
              "description": "Page number. Starts at first page (0), if not specified starts at first page.",
              "in": "query",
              "name": "pageNumber",
              "schema": {
                "minimum": 1,
                "type": "integer"
              }
            },
            {
              "in": "query",
              "name": "active",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "in": "query",
              "name": "name",
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "query",
              "name": "offset",
              "schema": {
                "format": "int32",
                "minimum": 0,
                "type": "integer"
              }
            },
            {
              "deprecated": true,
              "in": "query",
              "name": "sortBy",
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "query",
              "name": "sort_by",
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "query",
              "name": "type",
              "schema": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/EndpointPage"
                  }
                }
              },
              "description": "OK"
            }
          },
          "summary": "List endpoints"
        },
        "post": {
          "description": "Creates a new endpoint by providing data such as a description, a name, and the endpoint properties. Use this endpoint to create endpoints for integration with third-party services such as webhooks, Slack, or Google Chat.",
          "operationId": "EndpointResource$V1_createEndpoint",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EndpointDTO"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Endpoint"
                  }
                }
              },
              "description": "OK"
            },
            "400": {
              "description": "Bad data passed, that does not correspond to the definition or Endpoint.properties are empty"
            }
          },
          "summary": "Create a new endpoint"
        }
      },
      "/endpoints/system/drawer_subscription": {
        "post": {
          "description": "Adds the drawer system endpoint into the system and specifies the role-based access control (RBAC) group that will receive notifications. Use this endpoint to add an animation as a notification in the UI.",
          "operationId": "EndpointResource$V1_getOrCreateDrawerSubscriptionEndpoint",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestSystemSubscriptionProperties"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/EndpointDTO"
                  }
                }
              },
              "description": "OK"
            }
          },
          "summary": "Add a drawer endpoint"
        }
      },
      "/endpoints/system/email_subscription": {
        "post": {
          "description": "Adds the email subscription endpoint into the system and specifies the role-based access control (RBAC) group that will receive email notifications. Use this endpoint in behavior groups to send emails when an action linked to the behavior group is triggered.",
          "operationId": "EndpointResource$V1_getOrCreateEmailSubscriptionEndpoint",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestSystemSubscriptionProperties"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/EndpointDTO"
                  }
                }
              },
              "description": "OK"
            }
          },
          "summary": "Create an email subscription endpoint"
        }
      },
      "/endpoints/{id}": {
        "delete": {
          "description": "Deletes an endpoint. Use this endpoint to delete an endpoint that is no longer needed. Deleting an endpoint that is already linked to a behavior group will unlink it from the behavior group. You cannot delete system endpoints.",
          "operationId": "EndpointResource$V1_deleteEndpoint",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/UUID"
              }
            }
          ],
          "responses": {
            "204": {
              "content": {},
              "description": "The integration has been deleted"
            }
          },
          "summary": "Delete an endpoint"
        },
        "get": {
          "description": "Retrieves the public information associated with an endpoint such as its description, name, and properties.",
          "operationId": "EndpointResource$V1_getEndpoint",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/UUID"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/EndpointDTO"
                  }
                }
              },
              "description": "OK"
            }
          },
          "summary": "Retrieve an endpoint"
        },
        "put": {
          "description": "Updates the endpoint configuration. Use this to update an existing endpoint. Any changes to the endpoint take place immediately.",
          "operationId": "EndpointResource$V1_updateEndpoint",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/UUID"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EndpointDTO"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "description": "OK"
            }
          },
          "summary": "Update an endpoint"
        }
      },
      "/endpoints/{id}/enable": {
        "delete": {
          "description": "Disables an endpoint so that the endpoint will not be executed after an operation that uses the endpoint is started. An operation that is already running can still execute the endpoint. Disable an endpoint when you want to stop it from running and might want to re-enable it in the future.",
          "operationId": "EndpointResource$V1_disableEndpoint",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/UUID"
              }
            }
          ],
          "responses": {
            "204": {
              "content": {},
              "description": "The integration has been disabled"
            }
          },
          "summary": "Disable an endpoint"
        },
        "put": {
          "description": "Enables an endpoint that is disabled so that the endpoint will be executed on the following operations that use the endpoint. An operation must be restarted to use the enabled endpoint.",
          "operationId": "EndpointResource$V1_enableEndpoint",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/UUID"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "description": "OK"
            }
          },
          "summary": "Enable an endpoint"
        }
      },
      "/endpoints/{id}/history": {
        "get": {
          "operationId": "EndpointResource$V1_getEndpointHistory",
          "parameters": [
            {
              "description": "Number of items per page, if not specified or 0 is used, returns a maximum of 500 elements.",
              "in": "query",
              "name": "limit",
              "schema": {
                "default": "20",
                "maximum": 200,
                "minimum": 1,
                "type": "integer"
              }
            },
            {
              "description": "Page number. Starts at first page (0), if not specified starts at first page.",
              "in": "query",
              "name": "pageNumber",
              "schema": {
                "minimum": 1,
                "type": "integer"
              }
            },
            {
              "description": "Include the detail in the reply",
              "in": "query",
              "name": "includeDetail",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/UUID"
              }
            },
            {
              "in": "query",
              "name": "offset",
              "schema": {
                "format": "int32",
                "minimum": 0,
                "type": "integer"
              }
            },
            {
              "deprecated": true,
              "in": "query",
              "name": "sortBy",
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "query",
              "name": "sort_by",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "items": {
                      "$ref": "#/components/schemas/NotificationHistory"
                    },
                    "type": "array"
                  }
                }
              },
              "description": "OK"
            }
          },
          "tags": [
            "V 1"
          ]
        }
      },
      "/endpoints/{id}/history/{history_id}/details": {
        "get": {
          "description": "Retrieves extended information about the outcome of an event notification related to the specified endpoint. Use this endpoint to learn why an event delivery failed.",
          "operationId": "EndpointResource$V1_getDetailedEndpointHistory",
          "parameters": [
            {
              "in": "path",
              "name": "history_id",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/UUID"
              }
            },
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/UUID"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "description": "OK"
            }
          },
          "summary": "Retrieve event notification details"
        }
      },
      "/endpoints/{uuid}/test": {
        "post": {
          "description": "Generates a test notification for a particular endpoint. Use this endpoint to test that an integration that you created works as expected. This endpoint triggers a test notification that should be received by the target recipient. For example, if you set up a webhook as the action to take upon receiving a notification, you should receive a test notification when using this endpoint.",
          "operationId": "EndpointResource$V1_testEndpoint",
          "parameters": [
            {
              "description": "The UUID of the endpoint to test",
              "in": "path",
              "name": "uuid",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EndpointTestRequest"
                }
              }
            }
          },
          "responses": {
            "204": {
              "description": "No Content"
            }
          },
          "summary": "Generate a test notification"
        }
      }
    },
    "servers": [
      {
        "description": "Production Server",
        "url": "https://console.redhat.com/{basePath}",
        "variables": {
          "basePath": {
            "default": "/api/integrations/v1.0"
          }
        }
      },
      {
        "description": "Development Server",
        "url": "http://localhost:{port}/{basePath}",
        "variables": {
          "basePath": {
            "default": "/api/integrations/v1.0"
          },
          "port": {
            "default": "8080"
          }
        }
      }
    ]
  }
}