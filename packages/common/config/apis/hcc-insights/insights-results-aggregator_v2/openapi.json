{
  "components": {
    "parameters": {
      "ruleId": {
        "description": "ID of the rule for which content is required.",
        "example": "some.python.module|ERROR_KEY_NAME",
        "in": "path",
        "name": "ruleId",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "schemas": {
      "clusterId": {
        "description": "ID of the cluster in valid UUID format",
        "format": "uuid",
        "maxLength": 36,
        "minLength": 36,
        "type": "string"
      },
      "clusterList": {
        "items": {
          "example": [
            {
              "cluster_id": "1234ecc5-624a-49a5-bab8-4fdc5e51a266",
              "cluster_name": "Production cluster 1",
              "hits_by_total_risk": {
                "1": 1,
                "2": 4,
                "3": 2,
                "4": 0
              },
              "publish_date": "2021-12-06 13:46:28.156726 +0000 UTC",
              "total_hit_count": 7
            },
            {
              "cluster_id": "5678ecc5-624a-49a5-bab8-4fdc5e51a266",
              "cluster_name": "My cluster",
              "hits_by_total_risk": {
                "1": 0,
                "2": 0,
                "3": 8,
                "4": 0
              },
              "publish_date": "2021-01-01 13:46:28.156726 +0000 UTC",
              "total_hit_count": 8
            }
          ],
          "properties": {
            "cluster_id": {
              "format": "uuid",
              "maxLength": 36,
              "minLength": 36,
              "type": "string"
            },
            "cluster_name": {
              "description": "An human-readable name for the cluster",
              "example": "Production cluster 1",
              "type": "string"
            },
            "cluster_version": {
              "description": "[Optional] Cluster version",
              "example": "4.7",
              "type": "string"
            },
            "hits_by_total_risk": {
              "description": "Dictionary with numeric representation of total risk as keys, the number of rule hits by each total risk as values.",
              "example": {
                "1": 1,
                "2": 4,
                "3": 0,
                "4": 0
              }
            },
            "last_checked_at": {
              "description": "[Optional] Last time of analysis for given cluster.",
              "format": "date-time",
              "type": "string"
            },
            "total_hit_count": {
              "description": "Total number of rules hitting for given cluster. 0 combined with an empty last_checked_at means we haven't received any archive from that cluster. 0 hits with a valid timestamp means we have an archive, but there are no rule hits.",
              "type": "integer"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "clusterListResponse": {
        "description": "Response data type for GET /clusters endpoint",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/clusterList"
          },
          "meta": {
            "properties": {
              "count": {
                "format": "int32",
                "type": "integer"
              }
            },
            "type": "object"
          },
          "status": {
            "description": "Request response status",
            "type": "string"
          }
        },
        "type": "object"
      },
      "gatheringRequests": {
        "description": "List of stored requests for given orgId + clusterId",
        "items": {
          "properties": {
            "processed": {
              "format": "RFC339Nano",
              "type": "string"
            },
            "received": {
              "format": "RFC339Nano",
              "type": "string"
            },
            "requestID": {
              "$ref": "#/components/schemas/requestId"
            },
            "valid": {
              "type": "boolean"
            }
          },
          "required": [
            "requestID",
            "valid",
            "received",
            "processed"
          ],
          "type": "object"
        },
        "type": "array"
      },
      "ratingSchema": {
        "properties": {
          "rating": {
            "type": "integer"
          },
          "rule": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "recommendationList": {
        "items": {
          "example": {
            "description": "Introducing Insights for Red Hat OpenShift Container Platform",
            "disabled": false,
            "impact": 2,
            "impacted_clusters_count": 42,
            "likelihood": 4,
            "publish_date": "2020-04-08T00:42:00Z",
            "rule_id": "ccx_rules_ocp.external.bug_rules.bug_1821905|BUGZILLA_BUG_1821905",
            "tags": [
              "openshift",
              "service_availability"
            ],
            "total_risk": 3
          },
          "properties": {
            "description": {
              "description": "The title of the rule, a short description.",
              "type": "string"
            },
            "disabled": {
              "description": "Whether the rule has been disabled/acked for all clusters or not.",
              "example": true,
              "type": "boolean"
            },
            "generic": {
              "description": "More specific, cluster-independent description of the rule",
              "type": "string"
            },
            "impact": {
              "description": "How much of an impact this rule has on a cluster.",
              "enum": [
                0,
                1,
                2,
                3,
                4
              ],
              "type": "integer"
            },
            "impacted_clusters_count": {
              "description": "The number of clusters impacted by this rule. Disabled clusters are excluded from the count. If the rule is acked, it is just marked as disabled:true and the count is still returned.",
              "example": 42,
              "type": "integer"
            },
            "likelihood": {
              "description": "How likely is this rule to hit.",
              "enum": [
                0,
                1,
                2,
                3,
                4
              ],
              "type": "integer"
            },
            "publish_date": {
              "description": "The date the rule was published. 'Added at' field in UI",
              "format": "date-time",
              "type": "string"
            },
            "resolution_risk": {
              "description": "Indicates the impact of the resolution steps on the cluster and other associated risks. Behaves in the same way as total_risk, 0 is returned when the rule doesn't have a resolution_risk defined.",
              "enum": [
                0,
                1,
                2,
                3,
                4
              ],
              "type": "integer"
            },
            "rule_id": {
              "description": "The rule ID in the | format.",
              "example": "rule.module|ERROR_KEY",
              "type": "string"
            },
            "tags": {
              "description": "List of tags that the rule contains",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "total_risk": {
              "description": "Total risk - calculated from rule impact and likelihood.",
              "enum": [
                0,
                1,
                2,
                3,
                4
              ],
              "type": "integer"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "recommendationListResponse": {
        "description": "Response data type for GET /rule endpoint",
        "properties": {
          "recommendations": {
            "$ref": "#/components/schemas/recommendationList"
          },
          "status": {
            "description": "Request response status",
            "type": "string"
          }
        },
        "type": "object"
      },
      "report": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/reportData"
            },
            "type": "array"
          },
          "meta": {
            "$ref": "#/components/schemas/reportMeta"
          }
        },
        "type": "object"
      },
      "reportData": {
        "description": "/clusters/{clusterId}/report returns an array of ruleHit instances",
        "example": {
          "created_at": "2020-04-08T00:42:00Z",
          "description": "Introducing Insights for Red Hat OpenShift Container Platform",
          "details": "Red Hat Insights for OpenShift is a proactive management solution. It provides ongoing infrastructure analyses of your Red Hat OpenShift Container Platform 4.2 and later installations. Red Hat Insights helps you identify, prioritize, and resolve risks to security, performance, availability, and stability before they become urgent issues.\nRed Hat Insights for OpenShift uses the Remote Health Monitoring feature of OpenShift 4. The health checks are created by Red Hat subject matter experts and assessed according to severity and impact.\nThis is an example  recommendation that you can safely ignore. To disable it, click  the triple-dot menu button next to the header, and select Disable.\n\n[Knowledgebase Article](https://access.redhat.com/search/#/knowledgebase)\n\n",
          "disable_feedback": "",
          "disabled": false,
          "disabled_at": "",
          "extra_data": {
            "error_key": "TUTORIAL_ERROR",
            "type": "rule"
          },
          "internal": false,
          "reason": "",
          "resolution": "",
          "rule_id": "ccx_rules_ocm.tutorial_rule.report",
          "tags": [
            "openshift",
            "service_availability"
          ],
          "total_risk": 1,
          "user_vote": 0
        },
        "properties": {
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "description": "The title of the rule, a short description.",
            "type": "string"
          },
          "details": {
            "description": "Details of the rule - templates rendered on frontend.",
            "type": "string"
          },
          "disable_feedback": {
            "type": "string"
          },
          "disabled": {
            "description": "If this rule result disabled or not. This field can be used in the UI to show only specific set of rules results.",
            "type": "boolean"
          },
          "disabled_at": {
            "type": "string"
          },
          "extra_data": {
            "description": "Used as templating data for other content (details, resolution, etc.), has varying structure depending on the rules in the report.",
            "type": "object"
          },
          "impacted": {
            "description": "[Optional] Timestamp when the rule first started hitting",
            "format": "date-time",
            "type": "string"
          },
          "internal": {
            "type": "boolean"
          },
          "more_info": {
            "description": "Non essential information.",
            "type": "string"
          },
          "reason": {
            "description": "Reason for the issue, giving the user more accurate description of the cause.",
            "type": "string"
          },
          "resolution": {
            "description": "Resolution steps of the issue, possibly linking to a resolution article in the knowledge base.",
            "type": "string"
          },
          "rule_id": {
            "description": "ID of a rule.",
            "type": "string"
          },
          "tags": {
            "description": "List of tags that the rule contains, forming rule groups.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "total_risk": {
            "description": "Total risk - calculated from rule impact and likelihood.",
            "enum": [
              0,
              1,
              2,
              3,
              4
            ],
            "type": "integer"
          },
          "user_vote": {
            "description": "User vote - value of user voting. -1 is dislike vote, 0 is no vote, 1 is like vote.",
            "enum": [
              "-1",
              "0",
              "1"
            ],
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "reportMeta": {
        "example": {
          "count": 9,
          "last_checked_at": "2020-12-08T09:45:23Z",
          "managed": false
        },
        "properties": {
          "cluster_name": {
            "description": "The display name of the cluster",
            "type": "string"
          },
          "count": {
            "format": "int32",
            "type": "integer"
          },
          "gathered_at": {
            "format": "date-time",
            "type": "string"
          },
          "last_checked_at": {
            "description": "[Optional] Timestamp of the last analysis",
            "format": "date-time",
            "type": "string"
          },
          "managed": {
            "description": "Flag indicating if the cluster is managed or not",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "reportResponse": {
        "description": "Response data type for GET /clusters/{clusterId}/report endpoint",
        "properties": {
          "report": {
            "$ref": "#/components/schemas/report"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "requestId": {
        "description": "request ID",
        "example": "6d2eede257644308a8949c4ec251c5c4",
        "format": "x-rh-insights-request-id",
        "type": "string"
      },
      "simplifiedReport": {
        "items": {
          "properties": {
            "description": {
              "type": "string"
            },
            "error_key": {
              "type": "string"
            },
            "rule_fqdn": {
              "type": "string"
            },
            "total_risk": {
              "type": "integer"
            }
          },
          "required": [
            "rule_fqdn",
            "error_key",
            "description",
            "total_risk"
          ],
          "type": "object"
        },
        "type": "array"
      },
      "statusResponse": {
        "description": "response status for the processed request",
        "example": "ok",
        "type": "string"
      },
      "systemWideRuleDisable": {
        "description": "An information about rule that has been disabled for whole account",
        "properties": {
          "created_at": {
            "description": "Timestamp when the rule has been acked/disabled",
            "example": "2021-09-05T16:29:33+02:00",
            "format": "date-time",
            "type": "string"
          },
          "created_by": {
            "description": "ID of user (account)",
            "example": "42",
            "type": "string"
          },
          "justification": {
            "description": "Justification (message) provided by user",
            "example": "I don't like this rule!",
            "type": "string"
          },
          "rule": {
            "description": "Rule selector: rule ID + error key",
            "example": "foo.bar|baz",
            "type": "string"
          },
          "updated_at": {
            "default": "",
            "description": "Timestamp when the rule justification has been changed (can be empty)",
            "example": "2021-09-05T16:29:33+02:00",
            "type": "string"
          }
        },
        "type": "object"
      },
      "systemWideRuleDisableList": {
        "description": "List of all system-wide disabled rules",
        "properties": {
          "data": {
            "items": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "created_by": {
                  "type": "string"
                },
                "justification": {
                  "type": "string"
                },
                "rule": {
                  "type": "string"
                },
                "updated_at": {
                  "anyOf": [
                    {
                      "format": "date-time"
                    },
                    {
                      "maxLength": 0
                    }
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "meta": {
            "properties": {
              "count": {
                "format": "int32",
                "type": "integer"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      }
    }
  },
  "info": {
    "contact": {},
    "description": "Aggregation service for the results of running Insights rules.",
    "title": "Insights Results Aggregator",
    "version": "2.0.0"
  },
  "openapi": "3.0.3",
  "paths": {
    "/ack": {
      "get": {
        "description": "Lists acks from this account where the rule is active. Will return empty list if this account has no acks",
        "operationId": "AckListEndpoint",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/systemWideRuleDisableList"
                }
              }
            },
            "description": "List of acked rules"
          }
        },
        "summary": "Lists acks from this account where the rule is active",
        "tags": [
          "prod"
        ]
      },
      "post": {
        "description": "Acknowledges (and therefore hides) a rule from view in an account. If there's already an acknowledgement of this rule by this account, then return that. Othervise, a new ack is created.",
        "operationId": "ackRuleSystemWide",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "justification": {
                    "type": "string"
                  },
                  "rule_id": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Specification of rule selector (ID+error key) and a justification why rule has been disabled.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/systemWideRuleDisable"
                }
              }
            },
            "description": "Rule has been disabled already"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/systemWideRuleDisable"
                }
              }
            },
            "description": "Rule has been acked (disabled)"
          }
        },
        "summary": "Acknowledges/hide the rule for given account",
        "tags": [
          "prod"
        ]
      }
    },
    "/ack/{rule_id}": {
      "delete": {
        "description": "Deletes an acknowledgement for a rule, by its rule ID. If the ack existed, it is deleted and a 204 is returned. Otherwise, a 404 is returned.",
        "operationId": "deleteAckRuleSystemWide",
        "parameters": [
          {
            "description": "Specification of rule selector (ID+error key) and a justification why rule has been disabled.",
            "in": "path",
            "name": "rule_id",
            "required": true,
            "schema": {
              "example": "some.python.module|error_key",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Rule ack has been deleted"
          },
          "404": {
            "description": "Rule has not been acked (disabled) previously"
          }
        },
        "summary": "Deletes an acknowledgement for a rule",
        "tags": [
          "prod"
        ]
      },
      "get": {
        "description": "AckGetEndpoint read the acknowledgement info about disabled rule",
        "operationId": "getAckRuleSystemWide",
        "parameters": [
          {
            "description": "Specification of rule selector (ID+error key) and a justification why rule has been disabled.",
            "in": "path",
            "name": "rule_id",
            "required": true,
            "schema": {
              "example": "some.python.module|error_key",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/systemWideRuleDisable"
                }
              }
            },
            "description": "Rule ack has been found, the metadata is returned in response body"
          },
          "404": {
            "description": "Rule has not been acked (disabled) previously"
          }
        },
        "summary": "AckGetEndpoint read the acknowledgement info about disabled rule",
        "tags": [
          "prod"
        ]
      },
      "put": {
        "description": "Updates an acknowledgement for a rule, by rule ID. A new justification can be supplied.",
        "operationId": "UpdateAckRuleSystemWide",
        "parameters": [
          {
            "description": "Specification of rule selector (ID+error key).",
            "in": "path",
            "name": "rule_id",
            "required": true,
            "schema": {
              "example": "some.python.module|error_key",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "justification": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Specification of justification why rule has been disabled.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/systemWideRuleDisable"
                }
              }
            },
            "description": "Rule ack has been found and updated, the metadata is returned in response body"
          },
          "404": {
            "description": "Rule has not been acked (disabled) previously"
          }
        },
        "summary": "Updates an acknowledgement for a rule, by rule ID.",
        "tags": [
          "prod"
        ]
      }
    },
    "/cluster/{clusterId}/info": {
      "get": {
        "description": "Cluster ID is given in URL. Organization ID in token must match the one under which the cluster is registered in AMS.",
        "operationId": "getInfoForCluster",
        "parameters": [
          {
            "example": "34c3ecc5-624a-49a5-bab8-4fdc5e51a266",
            "in": "path",
            "name": "clusterId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/clusterId"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Response data type for GET /clusters/{clusterId}/info endpoint",
                  "properties": {
                    "cluster": {
                      "properties": {
                        "cluster_id": {
                          "$ref": "#/components/schemas/clusterId"
                        },
                        "display_name": {
                          "description": "An human-readable name for the cluster",
                          "example": "Production cluster 1",
                          "type": "string"
                        },
                        "managed": {
                          "description": "Indicates whether cluster is managed or not (has 'managed' flag in AMS)",
                          "example": true,
                          "type": "boolean"
                        },
                        "status": {
                          "description": "Status of the cluster, such as Active, Deprovisioned, etc",
                          "example": "Active",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "$ref": "#/components/schemas/statusResponse"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Information about the given cluster retrieved from AMS API."
          },
          "400": {
            "description": "Invalid request, usually caused when some cluster belongs to different organization."
          },
          "404": {
            "description": "Cluster info was not returned from AMS API for given organization."
          }
        },
        "summary": "Returns relevant information about the cluster available in AMS API.",
        "tags": [
          "prod"
        ]
      }
    },
    "/cluster/{clusterId}/reports": {
      "get": {
        "description": "Report that is going to be returned is specified by its cluster IDs that is part of path.",
        "operationId": "getReportsForCluster",
        "parameters": [
          {
            "example": "34c3ecc5-624a-49a5-bab8-4fdc5e51a266",
            "in": "path",
            "name": "clusterId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/clusterId"
            }
          },
          {
            "description": "If true, disabled rules will be sent too.",
            "in": "query",
            "name": "get_disabled",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reportResponse"
                }
              }
            },
            "description": "Latest available report for the given organization and cluster combination. Returns rules and their descriptions that were hit by the cluster. Disabled rules are omitted by default unless the get_disabled query param is provided."
          },
          "400": {
            "description": "Invalid request, usually caused when some cluster belongs to different organization."
          },
          "404": {
            "description": "Cluster report is not available, probably not connected cluster."
          }
        },
        "summary": "Returns the latest report for the given cluster.",
        "tags": [
          "prod"
        ]
      }
    },
    "/cluster/{clusterId}/request/{requestId}/report": {
      "get": {
        "description": "For the given cluster and request IDs, return the simplified report, if any",
        "operationId": "getReportForRequest",
        "parameters": [
          {
            "in": "path",
            "name": "clusterId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/clusterId"
            }
          },
          {
            "in": "path",
            "name": "requestId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/requestId"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "cluster": {
                      "$ref": "#/components/schemas/clusterId"
                    },
                    "report": {
                      "$ref": "#/components/schemas/simplifiedReport"
                    },
                    "requestID": {
                      "$ref": "#/components/schemas/requestId"
                    },
                    "status": {
                      "$ref": "#/components/schemas/statusResponse"
                    }
                  },
                  "required": [
                    "cluster",
                    "requestID",
                    "status",
                    "report"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Simplified report for given cluster and request IDs"
          },
          "400": {
            "description": "Invalid request or invalid cluster ID"
          },
          "404": {
            "description": "Cluster or request ID not found"
          }
        },
        "summary": "Retrieve simplified reports for a given cluster and request IDs if available"
      }
    },
    "/cluster/{clusterId}/request/{requestId}/status": {
      "get": {
        "description": "The status of the request with given ID if found. The cluster ID is required so only requests for the given cluster are returned, if any",
        "operationId": "getRequestStatusForCluster",
        "parameters": [
          {
            "in": "path",
            "name": "clusterId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/clusterId"
            }
          },
          {
            "description": "Request ID",
            "in": "path",
            "name": "requestId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/requestId"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "cluster": {
                      "$ref": "#/components/schemas/clusterId"
                    },
                    "requestID": {
                      "$ref": "#/components/schemas/requestId"
                    },
                    "status": {
                      "$ref": "#/components/schemas/statusResponse"
                    }
                  },
                  "required": [
                    "cluster",
                    "requestID",
                    "status"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Stored status for the given cluster and request IDs"
          },
          "400": {
            "description": "Invalid request or invalid cluster ID"
          },
          "404": {
            "description": "Request ID or cluster ID not found"
          }
        },
        "summary": "Check status of a given cluster's request"
      }
    },
    "/cluster/{clusterId}/requests": {
      "get": {
        "description": "Provides a list of all the recorded requests for the cluster with given ID, if any.",
        "operationId": "getRequestsForCluster",
        "parameters": [
          {
            "example": "34c3ecc5-624a-49a5-bab8-4fdc5e51a266",
            "in": "path",
            "name": "clusterId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/clusterId"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "cluster": {
                      "$ref": "#/components/schemas/clusterId"
                    },
                    "requests": {
                      "$ref": "#/components/schemas/gatheringRequests"
                    },
                    "status": {
                      "$ref": "#/components/schemas/statusResponse"
                    }
                  },
                  "required": [
                    "cluster",
                    "requests",
                    "status"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "List of requests available (last 24 hours) for the given organization and cluster and their status."
          },
          "400": {
            "description": "Invalid request (e.g cluster ID with unexpected format)"
          },
          "404": {
            "description": "Cluster not found"
          }
        },
        "summary": "List of requests for given cluster"
      },
      "post": {
        "description": "A list of requests for given cluster, filtered by the provided request IDs, if any.",
        "operationId": "getRequestsForClusterPostVariant",
        "parameters": [
          {
            "in": "path",
            "name": "clusterId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/clusterId"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "requestIDs": {
                    "items": {
                      "$ref": "#/components/schemas/requestId"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "requestIDs"
                ],
                "type": "object"
              }
            }
          },
          "description": "List of request IDs",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "cluster": {
                      "$ref": "#/components/schemas/clusterId"
                    },
                    "requests": {
                      "$ref": "#/components/schemas/gatheringRequests"
                    },
                    "status": {
                      "$ref": "#/components/schemas/statusResponse"
                    }
                  },
                  "required": [
                    "cluster",
                    "requests",
                    "status"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "List of requests available (last 24 hours) for the given organization and cluster and their status."
          },
          "400": {
            "description": "Invalid request (e.g cluster ID with unexpected format) or payload (empty body or not a list of strings)"
          },
          "404": {
            "description": "Cluster ID not found or no requests found in storage for provided IDs"
          }
        },
        "summary": "Filtered list of stored requests for given cluster ID"
      }
    },
    "/cluster/{clusterId}/upgrade-risks-prediction": {
      "get": {
        "description": "The title of the rule, a short description.",
        "operationId": "getUpgradeRisksPrediction",
        "parameters": [
          {
            "in": "path",
            "name": "clusterId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/clusterId"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Response data type for GET /cluster/{clusterId}/upgrade-risks-prediction",
                  "properties": {
                    "meta": {
                      "properties": {
                        "last_checked_at": {
                          "description": "[Optional] Last time of analysis for given cluster.",
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "$ref": "#/components/schemas/statusResponse"
                    },
                    "upgrade_recommendation": {
                      "properties": {
                        "upgrade_recommended": {
                          "type": "boolean"
                        },
                        "upgrade_risks_predictors": {
                          "properties": {
                            "alerts": {
                              "items": {
                                "properties": {
                                  "name": {
                                    "example": "APIRemovedInNextEUSReleaseInUse",
                                    "type": "string"
                                  },
                                  "namespace": {
                                    "example": "openshift-kube-apiserver",
                                    "type": "string"
                                  },
                                  "severity": {
                                    "example": "info",
                                    "type": "string"
                                  },
                                  "url": {
                                    "example": "https://my-cluster.com/monitoring/alerts?orderBy=asc&sortBy=Severity&alert-name=APIRemovedInNextEUSReleaseInUse",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "operator_conditions": {
                              "items": {
                                "properties": {
                                  "condition": {
                                    "example": "Failing",
                                    "type": "string"
                                  },
                                  "name": {
                                    "example": "authentication",
                                    "type": "string"
                                  },
                                  "reason": {
                                    "example": "AsExpected",
                                    "type": "string"
                                  },
                                  "url": {
                                    "example": "https://my-cluster.com/k8s/cluster/config.openshift.io~v1~ClusterOperator/authentication",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Status ok"
          },
          "204": {
            "description": "Status NoContent: happens when the cluster is managed. The upgrade risks prediction is not available for this kind of clusters."
          },
          "404": {
            "description": "Status NotFound: happens when the cluster cannot be found in the Observatorium data"
          },
          "503": {
            "description": "Status NotAvailable: happens when the AMS API or the Upgrade Risks Prediction service is not available."
          }
        }
      }
    },
    "/clusters": {
      "get": {
        "description": "Retrieves all clusters for given organization, retrieves the impacting rules for each cluster and calculates the count of impacting rules by total risk (severity == critical, high, moderate, low)",
        "operationId": "getClusters",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/clusterListResponse"
                }
              }
            },
            "description": "If a cluster has 0 total_hit_count and empty last_checked_at timestamp, we have no Insights data for that archive. If total_hit_count = 0 and the timestamp is valid, there are no rule hits for the cluster."
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "A dependent service such as AMS API or results aggregator is unavailable. Specified in status message."
          }
        },
        "summary": "Returns a list of clusters, total number of hitting rules and a count of impacting rules by total risk.",
        "tags": [
          "prod"
        ]
      }
    },
    "/content": {
      "get": {
        "description": "The static content is taken from the cache periodically updated from the content service",
        "operationId": "getContent",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "content": {
                      "items": {
                        "properties": {
                          "HasReason": {
                            "type": "boolean"
                          },
                          "error_keys": {
                            "additionalProperties": {
                              "properties": {
                                "HasReason": {
                                  "type": "boolean"
                                },
                                "generic": {
                                  "type": "string"
                                },
                                "metadata": {
                                  "properties": {
                                    "description": {
                                      "type": "string"
                                    },
                                    "impact": {
                                      "type": "string"
                                    },
                                    "likelihood": {
                                      "enum": [
                                        0,
                                        1,
                                        2,
                                        3,
                                        4
                                      ],
                                      "type": "integer"
                                    },
                                    "publish_date": {
                                      "type": "string"
                                    },
                                    "status": {
                                      "type": "string"
                                    },
                                    "tags": {
                                      "items": {
                                        "type": "string"
                                      },
                                      "nullable": true,
                                      "type": "array"
                                    }
                                  },
                                  "type": "object"
                                },
                                "more_info": {
                                  "type": "string"
                                },
                                "reason": {
                                  "type": "string"
                                },
                                "resolution": {
                                  "type": "string"
                                },
                                "summary": {
                                  "type": "string"
                                },
                                "total_risk": {
                                  "enum": [
                                    0,
                                    1,
                                    2,
                                    3,
                                    4
                                  ],
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "type": "object"
                          },
                          "generic": {
                            "type": "string"
                          },
                          "more_info": {
                            "type": "string"
                          },
                          "plugin": {
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "node_id": {
                                "type": "string"
                              },
                              "product_code": {
                                "type": "string"
                              },
                              "python_module": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "reason": {
                            "type": "string"
                          },
                          "resolution": {
                            "type": "string"
                          },
                          "summary": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "groups": {
                      "items": {
                        "properties": {
                          "description": {
                            "type": "string"
                          },
                          "tags": {
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "status": {
                      "$ref": "#/components/schemas/statusResponse"
                    }
                  }
                }
              }
            },
            "description": "A JSON object with the content."
          }
        },
        "summary": "Get all static content",
        "tags": [
          "prod"
        ]
      }
    },
    "/info": {
      "get": {
        "description": "InfoEndpoint returns basic information about Smart Proxy, Insights Results Aggregator, and Content Service version, utils repository version, commit hash etc.",
        "operationId": "InfoEndpoint",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "info": {
                      "properties": {
                        "Aggregator": {
                          "additionalProperties": {
                            "type": "string"
                          },
                          "type": "object"
                        },
                        "ContentService": {
                          "additionalProperties": {
                            "type": "string"
                          },
                          "type": "object"
                        },
                        "SmartProxy": {
                          "additionalProperties": {
                            "type": "string"
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "$ref": "#/components/schemas/statusResponse"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "An object containing information about Smart Proxy, Insights Results Aggregator, and Content Service."
          }
        },
        "summary": "Returns basic information about Smart Proxy, Insights Results Aggregator, and Content Service."
      }
    },
    "/metrics": {
      "get": {
        "description": "Set of metrics provided by insights-operator-utils library providing total number of requests counter, API endpoints response times, and counter of HTTP status code responses. Additionally it is possible to consume all metrics provided by Go runtime. These metrics start with go_ and process_ prefixes.",
        "operationId": "getMetrics",
        "responses": {
          "200": {
            "content": {
              "text/plain": {}
            },
            "description": "Default response containing all metrics in semi-structured text format"
          }
        },
        "summary": "Read all metrics exposed by this service"
      }
    },
    "/openapi.json": {
      "get": {
        "description": "The OpenAPI specification of this REST API service that is represented in formatted and human-readable JSON is available under this endpoint.",
        "operationId": "getOpenApi",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "components": {
                      "type": "object"
                    },
                    "info": {
                      "properties": {
                        "description": {
                          "type": "string"
                        },
                        "title": {
                          "type": "string"
                        },
                        "version": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "openapi": {
                      "type": "string"
                    },
                    "paths": {
                      "description": "Available paths and their descriptions.",
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "A JSON containing the OpenAPI specification for this service."
          }
        },
        "summary": "Returns the OpenAPI specification JSON."
      }
    },
    "/rating": {
      "post": {
        "description": "Return the new rating. Any previous rating for this rule by this user is amended to the current value. This does not attempt to delete a rating by this user of thus rule if the rating is zero.",
        "operationId": "sendRating",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ratingSchema"
              }
            }
          },
          "description": "A JSON object with the current rule and its rating.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ratingSchema"
                }
              }
            },
            "description": "The current rating value for the rule"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ratingSchema"
                }
              }
            },
            "description": "The current rating value for the rule"
          },
          "400": {
            "description": "Invalid request, usually caused when some rule identifier doesn't exist"
          }
        },
        "summary": "Send the new rating for a given rule",
        "tags": [
          "prod"
        ]
      }
    },
    "/rule": {
      "get": {
        "description": "The affected clusters are based on the requester's organization. If the AMS API is available, the clusters are pulled from there, otherwise we retrieve the clusters from our database.",
        "operationId": "getRecommendations",
        "parameters": [
          {
            "description": "If param is missing, endpoint will return all available rules including those that don't hit any clusters at the moment. If set to true, only returns impacting rules. If false, only returns those that aren't impacting.",
            "in": "query",
            "name": "impacting",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/recommendationListResponse"
                }
              }
            },
            "description": "Returns a list recommendations and the number of clusters they're currently impacting. Default behaviour is to return only the rules that affect atleast one cluster. This can be changed by passing impacting parameter"
          }
        },
        "summary": "Returns a list recommendations and the number of clusters they're currently impacting.",
        "tags": [
          "prod"
        ]
      }
    },
    "/rule/{ruleId}": {
      "get": {
        "description": "The static content is taken from the cache periodically updated from the content service. The user specific parts need trips to the aggregator service.",
        "operationId": "getContentAndGroupsForRule",
        "parameters": [
          {
            "$ref": "#/components/parameters/ruleId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "content": {
                      "properties": {
                        "description": {
                          "description": "The title of the rule, a short description.",
                          "type": "string"
                        },
                        "disabled": {
                          "description": "Whether the rule has been disabled/acked for all clusters or not.",
                          "example": "false",
                          "type": "boolean"
                        },
                        "generic": {
                          "description": "More specific, cluster-independent description of the rule",
                          "type": "string"
                        },
                        "hosts_acked_count": {
                          "type": "integer"
                        },
                        "impact": {
                          "description": "How much of an impact this rule has on a cluster.",
                          "enum": [
                            0,
                            1,
                            2,
                            3,
                            4
                          ],
                          "type": "integer"
                        },
                        "likelihood": {
                          "description": "How likely is this rule to hit.",
                          "enum": [
                            0,
                            1,
                            2,
                            3,
                            4
                          ],
                          "type": "integer"
                        },
                        "more_info": {
                          "type": "string"
                        },
                        "publish_date": {
                          "description": "The date the rule was published. 'Added at' field in UI",
                          "format": "date-time",
                          "type": "string"
                        },
                        "rating": {
                          "description": "User vote - value of user voting. -1 is dislike vote, 0 is no vote, 1 is like vote.",
                          "enum": [
                            "-1",
                            "0",
                            "1"
                          ],
                          "type": "integer"
                        },
                        "reason": {
                          "description": "Reason for the issue, giving the user more accurate description of the cause.",
                          "type": "string"
                        },
                        "resolution": {
                          "description": "Resolution steps of the issue, possibly linking to a resolution article in the knowledge base.",
                          "type": "string"
                        },
                        "resolution_risk": {
                          "description": "Indicates the impact of the resolution steps on the cluster and other associated risks. Behaves in the same way as total_risk, 0 is returned when the rule doesn't have a resolution_risk defined.",
                          "enum": [
                            0,
                            1,
                            2,
                            3,
                            4
                          ],
                          "type": "integer"
                        },
                        "rule_id": {
                          "type": "string"
                        },
                        "tags": {
                          "description": "List of tags that the rule contains",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "total_risk": {
                          "description": "Total risk - calculated from rule impact and likelihood.",
                          "enum": [
                            0,
                            1,
                            2,
                            3,
                            4
                          ],
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "groups": {
                      "items": {
                        "properties": {
                          "description": {
                            "type": "string"
                          },
                          "tags": {
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "status": {
                      "$ref": "#/components/schemas/statusResponse"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "A JSON object with the content."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "example": "Item not found in the storage",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Rule ID is not available"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "example": "Item not found in the storage",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Content service or aggregator service is unavailable. Specified in the status field."
          }
        },
        "summary": "Get content for the given ruleId, along with user-specific data such as rule rating, disabling, etc.",
        "tags": [
          "prod"
        ]
      }
    },
    "/rule/{ruleId}/content": {
      "get": {
        "description": "The static content is taken from the cache periodically updated from the content service.",
        "operationId": "getContentForRule",
        "parameters": [
          {
            "$ref": "#/components/parameters/ruleId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "content": {
                      "properties": {
                        "description": {
                          "description": "The title of the rule, a short description.",
                          "type": "string"
                        },
                        "generic": {
                          "description": "More specific, cluster-independent description of the rule",
                          "type": "string"
                        },
                        "impact": {
                          "description": "How much of an impact this rule has on a cluster.",
                          "enum": [
                            0,
                            1,
                            2,
                            3,
                            4
                          ],
                          "type": "integer"
                        },
                        "likelihood": {
                          "description": "How likely is this rule to hit.",
                          "enum": [
                            0,
                            1,
                            2,
                            3,
                            4
                          ],
                          "type": "integer"
                        },
                        "more_info": {
                          "type": "string"
                        },
                        "publish_date": {
                          "description": "The date the rule was published. 'Added at' field in UI",
                          "format": "date-time",
                          "type": "string"
                        },
                        "reason": {
                          "description": "Reason for the issue, giving the user more accurate description of the cause.",
                          "type": "string"
                        },
                        "resolution": {
                          "description": "Resolution steps of the issue, possibly linking to a resolution article in the knowledge base.",
                          "type": "string"
                        },
                        "rule_id": {
                          "type": "string"
                        },
                        "tags": {
                          "description": "List of tags that the rule contains",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "total_risk": {
                          "description": "Total risk - calculated from rule impact and likelihood.",
                          "enum": [
                            0,
                            1,
                            2,
                            3,
                            4
                          ],
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "groups": {
                      "items": {
                        "properties": {
                          "description": {
                            "type": "string"
                          },
                          "tags": {
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "status": {
                      "$ref": "#/components/schemas/statusResponse"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "A JSON object with the content."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "example": "Item not found in the storage",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Rule ID is not available"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "example": "Item not found in the storage",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Content service is unavailable."
          }
        },
        "summary": "Get all static content for the given ruleId.",
        "tags": [
          "prod"
        ]
      }
    },
    "/rule/{rule_selector}/clusters_detail": {
      "get": {
        "description": "Provided a correct rule selector and a valid organization ID, this method will query the DB for all the organization's clusters being currently affected by the rule, if any.",
        "operationId": "getClustersForRecommendation",
        "parameters": [
          {
            "description": "Recommendation identifier, in the plugin_name|error_key format",
            "example": "existing.plugin.name|ERROR_KEY",
            "in": "path",
            "name": "rule_selector",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "disabled": {
                          "description": "A list of clusters for which the user has disabled this rule",
                          "items": {
                            "properties": {
                              "cluster_id": {
                                "format": "uuid",
                                "maxLength": 36,
                                "minLength": 36,
                                "type": "string"
                              },
                              "cluster_name": {
                                "description": "An human-readable name for the cluster",
                                "example": "Production cluster 1",
                                "type": "string"
                              },
                              "disabled_at": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "justification": {
                                "description": "User given justification why rule was disabled.",
                                "example": "Not useful for us.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "enabled": {
                          "description": "A list of clusters, which are hitting this rule and are enabled.",
                          "items": {
                            "properties": {
                              "cluster": {
                                "format": "uuid",
                                "maxLength": 36,
                                "minLength": 36,
                                "type": "string"
                              },
                              "cluster_name": {
                                "description": "An human-readable name for the cluster",
                                "example": "Production cluster 1",
                                "type": "string"
                              },
                              "impacted": {
                                "description": "[Optional] Timestamp of the rule first started hitting",
                                "format": "date-time",
                                "type": "string"
                              },
                              "last_checked_at": {
                                "description": "[Optional] Timestamp of the last analysis",
                                "format": "date-time",
                                "type": "string"
                              },
                              "meta": {
                                "properties": {
                                  "cluster_version": {
                                    "description": "Version of OpenShift in the cluster",
                                    "example": "4.7",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "$ref": "#/components/schemas/statusResponse"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "List of cluster data for provided rule"
          },
          "400": {
            "description": "Request body could not be parsed, so the query is not processed"
          },
          "404": {
            "description": "Resource not found, usually caused when some rule selector, organization or user doesn't exist"
          },
          "500": {
            "description": "Internal server error, should only be returned if unexpected error happened when querying from the DB"
          }
        },
        "summary": "Returns a list of cluster where the given rule is active. Also returns a list of clusters, for which the rule has been disabled.",
        "tags": [
          "rule",
          "prod"
        ]
      }
    }
  }
}