{
  "components": {
    "examples": {
      "RemediationLinks": {
        "value": {
          "first": "/api/remediations/v1/remediations?sort=-updated_at&limit=50&offset=0",
          "last": "/api/remediations/v1/remediations?sort=-updated_at&limit=50&offset=50",
          "next": "/api/remediations/v1/remediations?sort=-updated_at&limit=50&offset=50",
          "previous": null
        }
      }
    },
    "parameters": {
      "BranchId": {
        "description": "Branch ID passed by satellite",
        "in": "query",
        "name": "branch_id",
        "required": false,
        "schema": {
          "format": "uuid",
          "type": "string"
        }
      },
      "ExecutorId": {
        "description": "Playbook run executor identifier (UUID)",
        "in": "query",
        "name": "executor",
        "required": false,
        "schema": {
          "$ref": "#/components/schemas/ExecutorId"
        }
      },
      "Fields": {
        "description": "Add playbook run data to the response",
        "in": "query",
        "name": "fields[data]",
        "required": false,
        "schema": {
          "default": [
            "playbook_runs"
          ],
          "items": {
            "enum": [
              "playbook_runs"
            ],
            "type": "string"
          },
          "type": "array"
        }
      },
      "HideArchived": {
        "description": "Hide archived playbooks",
        "in": "query",
        "name": "hide_archived",
        "required": false,
        "schema": {
          "default": false,
          "type": "boolean"
        }
      },
      "IssueId": {
        "description": "Issue identifier (e.g. `advisor:CVE_2017_6074_kernel|KERNEL_CVE_2017_6074`)",
        "in": "path",
        "name": "issue",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/IssueId"
        }
      },
      "IssueSystemsSort": {
        "description": "Sort order",
        "in": "query",
        "name": "sort",
        "required": false,
        "schema": {
          "default": "display_name",
          "enum": [
            "display_name",
            "-display_name"
          ],
          "type": "string"
        }
      },
      "Limit": {
        "description": "Maximum number of results to return",
        "in": "query",
        "name": "limit",
        "required": false,
        "schema": {
          "default": 50,
          "maximum": 200,
          "minimum": 1,
          "type": "number"
        }
      },
      "LocalHost": {
        "description": "Flag for localhost playbook generation",
        "in": "query",
        "name": "localhost",
        "required": false,
        "schema": {
          "default": false,
          "type": "boolean"
        }
      },
      "Offset": {
        "description": "Indicates the starting position of the query relative to the complete set of items that match the query",
        "in": "query",
        "name": "offset",
        "required": false,
        "schema": {
          "default": 0,
          "minimum": 0,
          "type": "number"
        }
      },
      "PlaybookRunId": {
        "description": "Playbook run identifier (UUID)",
        "in": "path",
        "name": "playbook_run_id",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/PlaybookRunId"
        }
      },
      "PlaybookRunSort": {
        "description": "Sort Order for Playbook Run",
        "in": "query",
        "name": "sort",
        "required": false,
        "schema": {
          "default": "-updated_at",
          "enum": [
            "updated_at",
            "-updated_at"
          ],
          "type": "string"
        }
      },
      "PlaybookRunSystemSort": {
        "description": "Playbook run systems sort order by ASC or DESC",
        "in": "query",
        "name": "sort",
        "required": false,
        "schema": {
          "default": "system_name",
          "enum": [
            "system_name",
            "-system_name"
          ],
          "type": "string"
        }
      },
      "RemediationFilter": {
        "description": "Remediation name filter. If specified only remediations whose name matches the given string will be returned.",
        "in": "query",
        "name": "filter",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "RemediationId": {
        "description": "Remediation identifier",
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/RemediationId"
        }
      },
      "RemediationIdQuery": {
        "description": "Remediation identifier (uuid)",
        "in": "query",
        "name": "remediation",
        "required": false,
        "schema": {
          "$ref": "#/components/schemas/RemediationId"
        }
      },
      "RemediationSort": {
        "description": "Sort order",
        "in": "query",
        "name": "sort",
        "required": false,
        "schema": {
          "default": "-updated_at",
          "enum": [
            "updated_at",
            "-updated_at",
            "name",
            "-name",
            "system_count",
            "-system_count",
            "issue_count",
            "-issue_count"
          ],
          "type": "string"
        }
      },
      "RemediationSystem": {
        "description": "System identifier. If specified only remediations that involve the given system will be returned.",
        "in": "query",
        "name": "system",
        "required": false,
        "schema": {
          "format": "uuid",
          "type": "string"
        }
      },
      "SatOrgId": {
        "description": "Organization ID passed by satellite",
        "in": "query",
        "name": "sat_org",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "SelectedHosts": {
        "description": "Selected hosts to be included in playbook",
        "in": "query",
        "name": "hosts",
        "required": false,
        "schema": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "SelectedRemediations": {
        "description": "Selected Remediations for download",
        "in": "query",
        "name": "selected_remediations",
        "required": false,
        "schema": {
          "items": {
            "$ref": "#/components/schemas/RemediationId"
          },
          "type": "array"
        }
      },
      "SystemId": {
        "description": "System identifier",
        "in": "path",
        "name": "system",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/SystemId"
        }
      },
      "SystemName": {
        "description": "System Name (STRING)",
        "in": "query",
        "name": "ansible_host",
        "required": false,
        "schema": {
          "$ref": "#/components/schemas/SystemName"
        }
      }
    },
    "requestBodies": {
      "PlaybookRunsInput": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/PlaybookRunsInput"
            }
          }
        },
        "required": false
      },
      "RemediationInput": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/RemediationInput"
            }
          }
        },
        "required": true
      },
      "RemediationsList": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/RemediationsList"
            }
          }
        },
        "required": true
      }
    },
    "responses": {
      "BadRequest": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/RequestError"
            }
          }
        },
        "description": "Bad Request"
      },
      "Deleted": {
        "description": "Entity was deleted"
      },
      "Forbidden": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/RequestError"
            }
          }
        },
        "description": "Forbidden"
      },
      "MultipleDelete": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/MultipleDelete"
            }
          }
        },
        "description": "Multiple entities were deleted"
      },
      "NotFound": {
        "description": "Entity Not Found"
      },
      "PreconditionFailed": {
        "description": "One or more conditions given in the request header fields evaluated to false"
      },
      "ServerError": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/RequestError"
            }
          }
        },
        "description": "Server Error"
      }
    },
    "schemas": {
      "Counts": {
        "additionalProperties": false,
        "properties": {
          "canceled": {
            "type": "integer"
          },
          "failure": {
            "type": "integer"
          },
          "pending": {
            "type": "integer"
          },
          "running": {
            "type": "integer"
          },
          "success": {
            "type": "integer"
          }
        },
        "required": [
          "pending",
          "running",
          "success",
          "failure",
          "canceled"
        ],
        "type": "object"
      },
      "DateTime": {
        "example": "2018-12-05T08:19:36.641Z",
        "format": "date-time",
        "type": "string"
      },
      "Diagnosis": {
        "additionalProperties": false,
        "properties": {
          "details": {
            "additionalProperties": {
              "description": "Arbitrary diagnosis data",
              "type": "object"
            },
            "example": {
              "CVE_2017_5753_4_cpu_kernel|KERNEL_CVE_2017_5753_4_CPU_ERROR_3": {
                "debugfs_available": true,
                "dmesg_available": true,
                "dmesg_wrapped": false
              },
              "CVE_2018_1111_dhcp|ERROR_CVE_2018_1111_DHCP_2": {
                "dhcp_devs": [
                  "enp0s3"
                ]
              }
            },
            "type": "object"
          },
          "id": {
            "$ref": "#/components/schemas/SystemId"
          },
          "insights_id": {
            "$ref": "#/components/schemas/InsightsId"
          }
        },
        "required": [
          "details",
          "id",
          "insights_id"
        ],
        "type": "object"
      },
      "ExecuteRemediation": {
        "additionalProperties": false,
        "properties": {
          "id": {
            "example": "a8799a02-8be9-11e8-9eb6-529269fb1459",
            "type": "string"
          }
        },
        "required": [
          "id"
        ],
        "type": "object"
      },
      "ExecutorDetails": {
        "items": {
          "$ref": "#/components/schemas/PlaybookExecutorDetails"
        },
        "type": "array"
      },
      "ExecutorId": {
        "example": "9197ba55-0abc-4028-9bbe-269e530f8bd5",
        "format": "uuid",
        "type": "string"
      },
      "ExecutorList": {
        "items": {
          "$ref": "#/components/schemas/PlaybookExecutors"
        },
        "type": "array"
      },
      "ExecutorName": {
        "example": "Executor Name",
        "type": "string"
      },
      "InsightsId": {
        "example": "a8799a02-8be9-11e8-9eb6-529269fb1459",
        "format": "uuid",
        "type": "string"
      },
      "IssueId": {
        "example": "advisor:CVE_2017_6074_kernel|KERNEL_CVE_2017_6074",
        "pattern": "^(advisor|vulnerabilities|ssg|test|patch-advisory|patch-package):[\\w\\d_|:\\.+-]+$",
        "type": "string"
      },
      "Meta": {
        "additionalProperties": false,
        "properties": {
          "count": {
            "description": "number of results returned",
            "example": 50,
            "type": "number"
          },
          "total": {
            "description": "total number of results matching the query",
            "example": 114,
            "type": "number"
          }
        },
        "required": [
          "count",
          "total"
        ],
        "type": "object"
      },
      "MultipleDelete": {
        "additionalProperties": false,
        "properties": {
          "deleted_count": {
            "description": "Count of remediations deleted",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Playbook": {
        "description": "Playbook created for the playbook run executor.",
        "type": "string"
      },
      "PlaybookDefinition": {
        "additionalProperties": false,
        "properties": {
          "auto_reboot": {
            "$ref": "#/components/schemas/RemediationAutoReboot"
          },
          "issues": {
            "example": [
              {
                "id": "advisor:network_bond_opts_config_issue|NETWORK_BONDING_OPTS_DOUBLE_QUOTES_ISSUE",
                "systems": [
                  "a8799a02-8be9-11e8-9eb6-529269fb1459",
                  "736ef48c-8f05-11e8-9eb6-529269fb1459"
                ]
              },
              {
                "id": "advisor:CVE_2017_6074_kernel|KERNEL_CVE_2017_6074",
                "resolution": "mitigate",
                "systems": [
                  "a8799a02-8be9-11e8-9eb6-529269fb1459",
                  "736ef48c-8f05-11e8-9eb6-529269fb1459"
                ]
              },
              {
                "id": "ssg:rhel7|standard|xccdf_org.ssgproject.content_rule_service_autofs_disabled",
                "systems": [
                  "a8799a02-8be9-11e8-9eb6-529269fb1459",
                  "736ef48c-8f05-11e8-9eb6-529269fb1459"
                ]
              },
              {
                "id": "vulnerabilities:CVE-2017-15126",
                "systems": [
                  "a8799a02-8be9-11e8-9eb6-529269fb1459",
                  "736ef48c-8f05-11e8-9eb6-529269fb1459"
                ]
              },
              {
                "id": "vulnerabilities:CVE-2018-1087",
                "systems": [
                  "a8799a02-8be9-11e8-9eb6-529269fb1459",
                  "736ef48c-8f05-11e8-9eb6-529269fb1459"
                ]
              },
              {
                "id": "vulnerabilities:CVE-2016-7913",
                "systems": [
                  "a8799a02-8be9-11e8-9eb6-529269fb1459",
                  "736ef48c-8f05-11e8-9eb6-529269fb1459"
                ]
              }
            ],
            "items": {
              "additionalProperties": false,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/IssueId"
                },
                "resolution": {
                  "$ref": "#/components/schemas/ResolutionType"
                },
                "systems": {
                  "items": {
                    "$ref": "#/components/schemas/SystemId"
                  },
                  "minItems": 1,
                  "type": "array"
                }
              },
              "required": [
                "id",
                "systems"
              ],
              "type": "object"
            },
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "issues"
        ],
        "type": "object"
      },
      "PlaybookExecutorDetails": {
        "additionalProperties": false,
        "properties": {
          "counts": {
            "$ref": "#/components/schemas/Counts"
          },
          "executor_id": {
            "$ref": "#/components/schemas/ExecutorId"
          },
          "executor_name": {
            "$ref": "#/components/schemas/ExecutorName"
          },
          "playbook": {
            "$ref": "#/components/schemas/Playbook"
          },
          "playbook_run_id": {
            "$ref": "#/components/schemas/PlaybookRunId"
          },
          "status": {
            "$ref": "#/components/schemas/PlaybookRunExecutorStatus"
          },
          "system_count": {
            "type": "integer"
          },
          "updated_at": {
            "$ref": "#/components/schemas/DateTime"
          }
        },
        "required": [
          "executor_id",
          "executor_name",
          "updated_at",
          "playbook",
          "playbook_run_id",
          "system_count",
          "status"
        ],
        "type": "object"
      },
      "PlaybookExecutorStatus": {
        "additionalProperties": false,
        "properties": {
          "connection_status": {
            "enum": [
              "connected",
              "disabled",
              "disconnected",
              "no_executor",
              "no_source",
              "no_receptor",
              "no_smart_management",
              "no_rhc"
            ],
            "example": "ready",
            "type": "string"
          },
          "endpoint_id": {
            "example": 806,
            "nullable": true,
            "type": "string"
          },
          "executor_id": {
            "example": "f1795406-9483-43e2-ac38-44274d93fe7b",
            "nullable": true,
            "type": "string"
          },
          "executor_name": {
            "example": "Satellite 11234",
            "nullable": true,
            "type": "string"
          },
          "executor_type": {
            "example": "satellite",
            "nullable": true,
            "type": "string"
          },
          "system_count": {
            "example": 12,
            "type": "integer"
          }
        },
        "required": [
          "endpoint_id",
          "executor_id",
          "executor_type",
          "executor_name",
          "system_count",
          "connection_status"
        ],
        "type": "object"
      },
      "PlaybookExecutors": {
        "additionalProperties": false,
        "properties": {
          "counts": {
            "$ref": "#/components/schemas/Counts"
          },
          "executor_id": {
            "$ref": "#/components/schemas/ExecutorId"
          },
          "executor_name": {
            "$ref": "#/components/schemas/ExecutorName"
          },
          "status": {
            "$ref": "#/components/schemas/PlaybookRunExecutorStatus"
          },
          "system_count": {
            "type": "integer"
          }
        },
        "required": [
          "executor_id",
          "executor_name",
          "status",
          "system_count",
          "counts"
        ],
        "type": "object"
      },
      "PlaybookRunDetails": {
        "additionalProperties": false,
        "properties": {
          "created_at": {
            "$ref": "#/components/schemas/DateTime"
          },
          "created_by": {
            "$ref": "#/components/schemas/UserOut"
          },
          "executors": {
            "$ref": "#/components/schemas/ExecutorList"
          },
          "id": {
            "$ref": "#/components/schemas/PlaybookRunId"
          },
          "remediation_id": {
            "$ref": "#/components/schemas/RemediationId"
          },
          "status": {
            "$ref": "#/components/schemas/PlaybookRunStatus"
          },
          "updated_at": {
            "$ref": "#/components/schemas/DateTime"
          }
        },
        "required": [
          "id",
          "executors",
          "remediation_id",
          "created_by",
          "created_at",
          "updated_at",
          "status"
        ],
        "type": "object"
      },
      "PlaybookRunExecutorDetails": {
        "additionalProperties": false,
        "properties": {
          "created_at": {
            "$ref": "#/components/schemas/DateTime"
          },
          "created_by": {
            "$ref": "#/components/schemas/UserOut"
          },
          "executors": {
            "$ref": "#/components/schemas/ExecutorDetails"
          },
          "id": {
            "$ref": "#/components/schemas/PlaybookRunId"
          },
          "remediation_id": {
            "$ref": "#/components/schemas/RemediationId"
          },
          "status": {
            "$ref": "#/components/schemas/PlaybookRunStatus"
          },
          "updated_at": {
            "$ref": "#/components/schemas/DateTime"
          }
        },
        "required": [
          "executors",
          "remediation_id",
          "created_by",
          "created_at",
          "updated_at",
          "status"
        ],
        "type": "object"
      },
      "PlaybookRunExecutorId": {
        "example": "b6279a02-8be9-11e8-9eb6-529269fb1459",
        "format": "uuid",
        "type": "string"
      },
      "PlaybookRunExecutorStatus": {
        "enum": [
          "pending",
          "acked",
          "running",
          "success",
          "failure",
          "canceled"
        ],
        "example": "pending",
        "type": "string"
      },
      "PlaybookRunId": {
        "example": "a8799a02-8be9-11e8-9eb6-529269fb1459",
        "format": "uuid",
        "type": "string"
      },
      "PlaybookRunStatus": {
        "enum": [
          "pending",
          "running",
          "success",
          "failure",
          "canceled"
        ],
        "example": "pending",
        "type": "string"
      },
      "PlaybookRunSystemDetails": {
        "additionalProperties": false,
        "properties": {
          "console": {
            "$ref": "#/components/schemas/SystemLog"
          },
          "playbook_run_executor_id": {
            "$ref": "#/components/schemas/PlaybookRunExecutorId"
          },
          "status": {
            "$ref": "#/components/schemas/PlaybookRunSystemStatus"
          },
          "system_id": {
            "$ref": "#/components/schemas/SystemId"
          },
          "system_name": {
            "$ref": "#/components/schemas/SystemName"
          },
          "updated_at": {
            "$ref": "#/components/schemas/DateTime"
          }
        },
        "required": [
          "system_id",
          "system_name",
          "status",
          "console",
          "playbook_run_executor_id",
          "updated_at"
        ],
        "type": "object"
      },
      "PlaybookRunSystemList": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/PlaybookRunSystems"
            },
            "type": "array"
          },
          "meta": {
            "$ref": "#/components/schemas/Meta"
          }
        },
        "required": [
          "data",
          "meta"
        ],
        "type": "object"
      },
      "PlaybookRunSystemStatus": {
        "enum": [
          "pending",
          "running",
          "success",
          "failure",
          "canceled"
        ],
        "example": "pending",
        "type": "string"
      },
      "PlaybookRunSystems": {
        "additionalProperties": false,
        "properties": {
          "playbook_run_executor_id": {
            "$ref": "#/components/schemas/PlaybookRunId"
          },
          "status": {
            "$ref": "#/components/schemas/PlaybookRunSystemStatus"
          },
          "system_id": {
            "$ref": "#/components/schemas/SystemId"
          },
          "system_name": {
            "$ref": "#/components/schemas/SystemName"
          },
          "updated_at": {
            "$ref": "#/components/schemas/DateTime"
          }
        },
        "required": [
          "system_id",
          "system_name",
          "status",
          "updated_at",
          "playbook_run_executor_id"
        ],
        "type": "object"
      },
      "PlaybookRunsInput": {
        "properties": {
          "exclude": {
            "items": {
              "example": "9197ba55-0abc-4028-9bbe-269e530f8bd5 or \"RHC\"",
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object",
        "x-remediations-strict": false
      },
      "PlaybookRunsList": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/PlaybookRunDetails"
            },
            "type": "array"
          },
          "meta": {
            "$ref": "#/components/schemas/Meta"
          }
        },
        "required": [
          "data",
          "meta"
        ],
        "type": "object"
      },
      "RemediationArchived": {
        "description": "Indicates whether a remediation has been marked as archived",
        "type": "boolean"
      },
      "RemediationAutoReboot": {
        "description": "Indicates whether systems that require reboot for the remediation to be properly applied should be rebooted automatically or not\n",
        "type": "boolean"
      },
      "RemediationConnectionStatus": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/PlaybookExecutorStatus"
            },
            "type": "array"
          },
          "meta": {
            "$ref": "#/components/schemas/Meta"
          }
        },
        "required": [
          "meta",
          "data"
        ],
        "type": "object"
      },
      "RemediationCreated": {
        "additionalProperties": false,
        "properties": {
          "id": {
            "$ref": "#/components/schemas/RemediationId"
          }
        },
        "required": [
          "id"
        ],
        "type": "object"
      },
      "RemediationDetails": {
        "additionalProperties": false,
        "properties": {
          "archived": {
            "$ref": "#/components/schemas/RemediationArchived"
          },
          "auto_reboot": {
            "$ref": "#/components/schemas/RemediationAutoReboot"
          },
          "created_at": {
            "$ref": "#/components/schemas/DateTime"
          },
          "created_by": {
            "$ref": "#/components/schemas/UserOut"
          },
          "id": {
            "$ref": "#/components/schemas/RemediationId"
          },
          "issues": {
            "items": {
              "$ref": "#/components/schemas/RemediationIssue"
            },
            "type": "array"
          },
          "name": {
            "$ref": "#/components/schemas/RemediationName"
          },
          "needs_reboot": {
            "$ref": "#/components/schemas/RemediationNeedsReboot"
          },
          "resolved_count": {
            "$ref": "#/components/schemas/ResolvedCount"
          },
          "updated_at": {
            "$ref": "#/components/schemas/DateTime"
          },
          "updated_by": {
            "$ref": "#/components/schemas/UserOut"
          }
        },
        "required": [
          "id",
          "name",
          "needs_reboot",
          "auto_reboot",
          "created_by",
          "created_at",
          "updated_by",
          "updated_at",
          "resolved_count",
          "issues",
          "archived"
        ],
        "type": "object"
      },
      "RemediationId": {
        "example": "9197ba55-0abc-4028-9bbe-269e530f8bd5",
        "format": "uuid",
        "type": "string"
      },
      "RemediationInput": {
        "additionalProperties": false,
        "properties": {
          "add": {
            "additionalProperties": false,
            "example": {
              "issues": [
                {
                  "id": "advisor:CVE_2017_6074_kernel|KERNEL_CVE_2017_6074",
                  "resolution": "mitigate",
                  "systems": [
                    "a8799a02-8be9-11e8-9eb6-529269fb1459"
                  ]
                }
              ]
            },
            "properties": {
              "issues": {
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/IssueId"
                    },
                    "resolution": {
                      "$ref": "#/components/schemas/ResolutionType"
                    },
                    "systems": {
                      "items": {
                        "$ref": "#/components/schemas/SystemId"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                },
                "minItems": 1,
                "type": "array"
              },
              "systems": {
                "items": {
                  "$ref": "#/components/schemas/SystemId"
                },
                "type": "array"
              }
            },
            "required": [
              "issues"
            ],
            "type": "object"
          },
          "archived": {
            "$ref": "#/components/schemas/RemediationArchived"
          },
          "auto_reboot": {
            "$ref": "#/components/schemas/RemediationAutoReboot"
          },
          "name": {
            "$ref": "#/components/schemas/RemediationName"
          }
        },
        "type": "object",
        "x-remediations-strict": false
      },
      "RemediationIssue": {
        "additionalProperties": false,
        "properties": {
          "description": {
            "type": "string"
          },
          "id": {
            "$ref": "#/components/schemas/IssueId"
          },
          "resolution": {
            "additionalProperties": false,
            "properties": {
              "description": {
                "type": "string"
              },
              "id": {
                "$ref": "#/components/schemas/ResolutionType"
              },
              "needs_reboot": {
                "$ref": "#/components/schemas/ResolutionNeedsReboot"
              },
              "resolution_risk": {
                "$ref": "#/components/schemas/ResolutionRisk"
              }
            },
            "required": [
              "id",
              "description",
              "resolution_risk",
              "needs_reboot"
            ],
            "type": "object"
          },
          "resolutions_available": {
            "description": "The total number of available resolutions for this issue",
            "type": "number"
          },
          "systems": {
            "items": {
              "$ref": "#/components/schemas/SystemOut"
            },
            "type": "array"
          }
        },
        "required": [
          "id",
          "description",
          "resolution",
          "systems"
        ],
        "type": "object"
      },
      "RemediationIssueIn": {
        "additionalProperties": false,
        "properties": {
          "resolution": {
            "$ref": "#/components/schemas/ResolutionType"
          }
        },
        "required": [
          "resolution"
        ],
        "type": "object"
      },
      "RemediationIssueSystemList": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/SystemOut"
            },
            "type": "array"
          },
          "meta": {
            "$ref": "#/components/schemas/Meta"
          }
        },
        "required": [
          "data",
          "meta"
        ],
        "type": "object"
      },
      "RemediationList": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/RemediationListItem"
            },
            "type": "array"
          },
          "links": {
            "additionalProperties": false,
            "example": {
              "$ref": "#/components/examples/RemediationLinks"
            },
            "properties": {
              "first": {
                "description": "relative link to the first page of the query results",
                "type": "string"
              },
              "last": {
                "description": "relative link to the last page of the query results",
                "type": "string"
              },
              "next": {
                "description": "relative link to the next page of the query results (or null if this is the last page)",
                "nullable": true,
                "type": "string"
              },
              "previous": {
                "description": "relative link to the previous page of the query results (or null if this is the first page)",
                "nullable": true,
                "type": "string"
              }
            },
            "required": [
              "first",
              "last",
              "next",
              "previous"
            ],
            "type": "object"
          },
          "meta": {
            "$ref": "#/components/schemas/Meta"
          }
        },
        "required": [
          "data",
          "meta",
          "links"
        ],
        "type": "object"
      },
      "RemediationListItem": {
        "additionalProperties": false,
        "properties": {
          "archived": {
            "$ref": "#/components/schemas/RemediationArchived"
          },
          "created_at": {
            "$ref": "#/components/schemas/DateTime"
          },
          "created_by": {
            "$ref": "#/components/schemas/UserOut"
          },
          "id": {
            "$ref": "#/components/schemas/RemediationId"
          },
          "issue_count": {
            "type": "integer"
          },
          "name": {
            "$ref": "#/components/schemas/RemediationName"
          },
          "needs_reboot": {
            "$ref": "#/components/schemas/RemediationNeedsReboot"
          },
          "playbook_runs": {
            "items": {
              "$ref": "#/components/schemas/PlaybookRunDetails"
            },
            "type": "array"
          },
          "resolved_count": {
            "$ref": "#/components/schemas/ResolvedCount"
          },
          "system_count": {
            "type": "integer"
          },
          "updated_at": {
            "$ref": "#/components/schemas/DateTime"
          },
          "updated_by": {
            "$ref": "#/components/schemas/UserOut"
          }
        },
        "required": [
          "id",
          "name",
          "created_by",
          "created_at",
          "updated_by",
          "updated_at",
          "issue_count",
          "system_count",
          "resolved_count",
          "needs_reboot",
          "archived"
        ],
        "type": "object"
      },
      "RemediationName": {
        "example": "Fix Critical CVEs",
        "nullable": true,
        "pattern": "^$|^.*[\\w\\d]+.*$",
        "type": "string"
      },
      "RemediationNeedsReboot": {
        "description": "Indicates whether any of the issues contained in the remediation require system reboot",
        "type": "boolean"
      },
      "RemediationsList": {
        "properties": {
          "remediation_ids": {
            "example": [
              "9197ba55-0abc-4028-9bbe-269e530f8bd5",
              "3df5ed22-4324-402c-b128-ea62debbde6c"
            ],
            "items": {
              "$ref": "#/components/schemas/RemediationId"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "remediation_ids"
        ],
        "type": "object"
      },
      "RequestError": {
        "additionalProperties": false,
        "properties": {
          "errors": {
            "items": {
              "additionalProperties": false,
              "properties": {
                "code": {
                  "example": "UNKNOWN_SYSTEM",
                  "type": "string"
                },
                "details": {
                  "type": "object"
                },
                "id": {
                  "type": "string"
                },
                "status": {
                  "example": 400,
                  "type": "integer"
                },
                "title": {
                  "example": "Unknown system identifier 'abcd'",
                  "type": "string"
                }
              },
              "required": [
                "id",
                "status",
                "code",
                "title"
              ],
              "type": "object"
            },
            "type": "array"
          }
        },
        "required": [
          "errors"
        ],
        "type": "object"
      },
      "ResolutionNeedsReboot": {
        "description": "Indicates whether the given resolution involves system reboot",
        "type": "boolean"
      },
      "ResolutionRisk": {
        "enum": [
          -1,
          1,
          2,
          3,
          4
        ],
        "example": 2,
        "type": "integer"
      },
      "ResolutionType": {
        "example": "fix",
        "type": "string"
      },
      "Resolutions": {
        "additionalProperties": false,
        "properties": {
          "id": {
            "$ref": "#/components/schemas/IssueId"
          },
          "resolution_risk": {
            "$ref": "#/components/schemas/ResolutionRisk"
          },
          "resolutions": {
            "items": {
              "additionalProperties": false,
              "properties": {
                "description": {
                  "example": "Disable DCCP kernel module",
                  "type": "string"
                },
                "id": {
                  "$ref": "#/components/schemas/ResolutionType"
                },
                "needs_reboot": {
                  "$ref": "#/components/schemas/ResolutionNeedsReboot"
                },
                "resolution_risk": {
                  "$ref": "#/components/schemas/ResolutionRisk"
                }
              },
              "required": [
                "id",
                "description",
                "needs_reboot",
                "resolution_risk"
              ],
              "type": "object"
            },
            "type": "array"
          }
        },
        "required": [
          "id",
          "resolution_risk",
          "resolutions"
        ],
        "type": "object"
      },
      "ResolutionsBatch": {
        "additionalProperties": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/Resolutions"
            },
            {
              "description": "Indicates that the given issue is not supported",
              "enum": [
                false
              ],
              "type": "boolean"
            }
          ]
        },
        "example": {
          "advisor:CVE_2017_6074_kernel|KERNEL_CVE_2017_6074": {
            "id": "advisor:CVE_2017_6074_kernel|KERNEL_CVE_2017_6074",
            "resolution_risk": 3,
            "resolutions": [
              {
                "description": "Update system to the latest kernel and reboot",
                "id": "kernel_update",
                "needs_reboot": true,
                "resolution_risk": 3
              },
              {
                "description": "Disable DCCP kernel module",
                "id": "mitigate",
                "needs_reboot": true,
                "resolution_risk": 3
              },
              {
                "description": "Make sure SELinux is enabled, enforcing and has selinux-policy-3.13.1-81.el7 or later on RHEL7",
                "id": "selinux_mitigate",
                "needs_reboot": true,
                "resolution_risk": 3
              }
            ]
          },
          "advisor:non-existent-issue": false,
          "vulnerabilities:CVE-2018-1087": {
            "id": "vulnerabilities:CVE-2018-1087",
            "resolution_risk": -1,
            "resolutions": [
              {
                "description": "Upgrade packages affected by CVE-2018-1087",
                "id": "fix",
                "needs_reboot": true,
                "resolution_risk": -1
              }
            ]
          }
        },
        "type": "object"
      },
      "ResolutionsBatchInput": {
        "additionalProperties": false,
        "example": {
          "issues": [
            "vulnerabilities:CVE-2018-1087",
            "advisor:CVE_2017_6074_kernel|KERNEL_CVE_2017_6074377300",
            "advisor:non-existent-issue"
          ]
        },
        "properties": {
          "issues": {
            "items": {
              "$ref": "#/components/schemas/IssueId"
            },
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "issues"
        ],
        "type": "object"
      },
      "ResolvedCount": {
        "example": 27,
        "type": "integer"
      },
      "SystemId": {
        "example": "a8799a02-8be9-11e8-9eb6-529269fb1459",
        "format": "uuid",
        "type": "string"
      },
      "SystemLog": {
        "description": "Current formatted system log from playbook run system.",
        "type": "string"
      },
      "SystemName": {
        "example": "redhat-213",
        "type": "string"
      },
      "SystemOut": {
        "additionalProperties": false,
        "properties": {
          "display_name": {
            "example": "prod-db",
            "nullable": true,
            "type": "string"
          },
          "hostname": {
            "example": "db01.example.com",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "$ref": "#/components/schemas/SystemId"
          },
          "resolved": {
            "example": false,
            "nullable": false,
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "hostname",
          "display_name"
        ],
        "type": "object"
      },
      "UserOut": {
        "additionalProperties": false,
        "properties": {
          "first_name": {
            "example": "Jozef",
            "type": "string"
          },
          "last_name": {
            "example": "Hartinger",
            "type": "string"
          },
          "username": {
            "example": "jharting@redhat.com",
            "type": "string"
          }
        },
        "required": [
          "username"
        ],
        "type": "object"
      }
    }
  },
  "info": {
    "contact": {
      "email": "jharting@redhat.com"
    },
    "description": "Insights Remediations Service",
    "title": "Insights Remediations",
    "version": "1.3.3"
  },
  "openapi": "3.0.0",
  "paths": {
    "/diagnosis/{system}": {
      "get": {
        "description": "Provides host-specific diagnosis information",
        "operationId": "getDiagnosis",
        "parameters": [
          {
            "$ref": "#/components/parameters/SystemId"
          },
          {
            "$ref": "#/components/parameters/RemediationIdQuery"
          },
          {
            "$ref": "#/components/parameters/BranchId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Diagnosis"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "description": "System not found"
          }
        },
        "summary": "host-specific diagnosis",
        "tags": [
          "diagnosis"
        ]
      }
    },
    "/playbook": {
      "post": {
        "description": "Generates an Ansible Playbook based on input parameters",
        "operationId": "generate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlaybookDefinition"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "text/vnd.yaml": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "summary": "Generate an Ansible Playbook",
        "tags": [
          "generator"
        ]
      }
    },
    "/remediations": {
      "delete": {
        "description": "Removes the given list of Remediations.  Requests containing malformed remediation IDs are rejected.  Duplicate or missing IDs are ignored.\nRBAC permission {remediations:remediation:write}",
        "operationId": "deleteRemediations",
        "requestBody": {
          "$ref": "#/components/requestBodies/RemediationsList"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/MultipleDelete"
          }
        },
        "summary": "Bulk Delete Remediations",
        "tags": [
          "remediations"
        ]
      },
      "get": {
        "description": "Provides information about Remediations, RBAC permission {remediations:remediation:read}",
        "operationId": "getRemediations",
        "parameters": [
          {
            "$ref": "#/components/parameters/RemediationSort"
          },
          {
            "$ref": "#/components/parameters/RemediationFilter"
          },
          {
            "$ref": "#/components/parameters/Limit"
          },
          {
            "$ref": "#/components/parameters/Offset"
          },
          {
            "$ref": "#/components/parameters/RemediationSystem"
          },
          {
            "$ref": "#/components/parameters/HideArchived"
          },
          {
            "$ref": "#/components/parameters/Fields"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemediationList"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "summary": "List Remediations",
        "tags": [
          "remediations"
        ]
      },
      "post": {
        "description": "Creates a new Remediation based on given information, RBAC permission {remediations:remediation:write}",
        "operationId": "createRemediation",
        "requestBody": {
          "$ref": "#/components/requestBodies/RemediationInput"
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemediationCreated"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "summary": "Create Remediation",
        "tags": [
          "remediations"
        ]
      }
    },
    "/remediations/download": {
      "get": {
        "description": "Downloads a zip file containing selected Remediations, RBAC permission {remediations:remediation:read}",
        "operationId": "downloadPlaybooks",
        "parameters": [
          {
            "$ref": "#/components/parameters/SelectedRemediations"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/zip": {
                "schema": {
                  "format": "binary",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "summary": "Download Remediations",
        "tags": [
          "remediations"
        ]
      }
    },
    "/remediations/{id}": {
      "delete": {
        "description": "Removes the given Remediation, RBAC permission {remediations:remediation:write}",
        "operationId": "deleteRemediation",
        "parameters": [
          {
            "$ref": "#/components/parameters/RemediationId"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "summary": "Remove Remediation",
        "tags": [
          "remediations"
        ]
      },
      "get": {
        "description": "Provides information about the given Remediation, RBAC permission {remediations:remediation:read}",
        "operationId": "getRemediation",
        "parameters": [
          {
            "$ref": "#/components/parameters/RemediationId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemediationDetails"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "summary": "Get Remediation",
        "tags": [
          "remediations"
        ]
      },
      "patch": {
        "description": "Updates the given Remediation, RBAC permission {remediations:remediation:write}",
        "operationId": "updateRemediation",
        "parameters": [
          {
            "$ref": "#/components/parameters/RemediationId"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/RemediationInput"
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "summary": "Update Remediation",
        "tags": [
          "remediations"
        ]
      }
    },
    "/remediations/{id}/connection_status": {
      "get": {
        "description": "Get satellite connection status for a given host, RBAC permission {remediations:remediation:execute}",
        "operationId": "getRemediationConnectionStatus",
        "parameters": [
          {
            "$ref": "#/components/parameters/RemediationId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemediationConnectionStatus"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "summary": "Pre-flight check",
        "tags": [
          "remediations"
        ]
      }
    },
    "/remediations/{id}/executable": {
      "get": {
        "description": "Checks remediation for the existence of smart_managment flaged systems",
        "operationId": "checkExecutable",
        "parameters": [
          {
            "$ref": "#/components/parameters/RemediationId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "summary": "Check smart_managment systems",
        "tags": [
          "remediations"
        ]
      }
    },
    "/remediations/{id}/issues/{issue}": {
      "delete": {
        "description": "Removes the given Issue from the Remediation, RBAC permission {remediations:remediation:write}",
        "operationId": "deleteRemediationIssue",
        "parameters": [
          {
            "$ref": "#/components/parameters/RemediationId"
          },
          {
            "$ref": "#/components/parameters/IssueId"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "summary": "Remove Remediation Issue",
        "tags": [
          "remediations"
        ]
      },
      "patch": {
        "description": "Updates the given Remediation Issue, RBAC permission {remediations:remediation:write}",
        "operationId": "updateRemediationIssue",
        "parameters": [
          {
            "$ref": "#/components/parameters/RemediationId"
          },
          {
            "$ref": "#/components/parameters/IssueId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemediationIssueIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "summary": "Update Remediation Issue",
        "tags": [
          "remediations"
        ]
      }
    },
    "/remediations/{id}/issues/{issue}/systems": {
      "get": {
        "description": "Get a paginated list of systems from a given issue, RBAC permission {remediations:remediation:read}",
        "operationId": "getRemediationIssueSystems",
        "parameters": [
          {
            "$ref": "#/components/parameters/RemediationId"
          },
          {
            "$ref": "#/components/parameters/IssueId"
          },
          {
            "$ref": "#/components/parameters/Limit"
          },
          {
            "$ref": "#/components/parameters/Offset"
          },
          {
            "$ref": "#/components/parameters/IssueSystemsSort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemediationIssueSystemList"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "summary": "Get Remediation Issue Systems",
        "tags": [
          "remediations"
        ]
      }
    },
    "/remediations/{id}/issues/{issue}/systems/{system}": {
      "delete": {
        "description": "Removes the given System from the Issue Remediation, RBAC permission {remediations:remediation:write}",
        "operationId": "deleteRemediationIssueSystem",
        "parameters": [
          {
            "$ref": "#/components/parameters/RemediationId"
          },
          {
            "$ref": "#/components/parameters/IssueId"
          },
          {
            "$ref": "#/components/parameters/SystemId"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "summary": "Remove Remediation Issue System",
        "tags": [
          "remediations"
        ]
      }
    },
    "/remediations/{id}/playbook": {
      "get": {
        "description": "Provides Ansible Playbook, RBAC permission {remediations:remediation:read}",
        "operationId": "getRemediationPlaybook",
        "parameters": [
          {
            "$ref": "#/components/parameters/RemediationId"
          },
          {
            "$ref": "#/components/parameters/SelectedHosts"
          },
          {
            "$ref": "#/components/parameters/SatOrgId"
          },
          {
            "$ref": "#/components/parameters/LocalHost"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "text/vnd.yaml": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "summary": "Get Remediation Playbook",
        "tags": [
          "remediations"
        ]
      }
    },
    "/remediations/{id}/playbook_runs": {
      "get": {
        "description": "List of executions of this remediation",
        "operationId": "listPlaybookRuns",
        "parameters": [
          {
            "$ref": "#/components/parameters/RemediationId"
          },
          {
            "$ref": "#/components/parameters/Limit"
          },
          {
            "$ref": "#/components/parameters/Offset"
          },
          {
            "$ref": "#/components/parameters/PlaybookRunSort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlaybookRunsList"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "summary": "List of executions of this remediation",
        "tags": [
          "remediations"
        ]
      },
      "post": {
        "description": "Execute remediation, RBAC permission {remediations:remediation:execute}",
        "operationId": "runRemediation",
        "parameters": [
          {
            "$ref": "#/components/parameters/RemediationId"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PlaybookRunsInput"
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExecuteRemediation"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          }
        },
        "summary": "Execute remediation",
        "tags": [
          "remediations"
        ]
      }
    },
    "/remediations/{id}/playbook_runs/{playbook_run_id}": {
      "get": {
        "description": "Get details on execution of the remediation",
        "operationId": "getPlaybookRunDetails",
        "parameters": [
          {
            "$ref": "#/components/parameters/RemediationId"
          },
          {
            "$ref": "#/components/parameters/PlaybookRunId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlaybookRunExecutorDetails"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "summary": "Get details on execution of the remediation",
        "tags": [
          "remediations"
        ]
      }
    },
    "/remediations/{id}/playbook_runs/{playbook_run_id}/cancel": {
      "post": {
        "description": "Cancel execution of the remediation",
        "operationId": "cancelPlaybookRuns",
        "parameters": [
          {
            "$ref": "#/components/parameters/RemediationId"
          },
          {
            "$ref": "#/components/parameters/PlaybookRunId"
          }
        ],
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "summary": "Cancel execution of the remediation",
        "tags": [
          "remediations"
        ]
      }
    },
    "/remediations/{id}/playbook_runs/{playbook_run_id}/systems": {
      "get": {
        "description": "Get details on systems being executed on in specific playbook run",
        "operationId": "getPlaybookRunSystems",
        "parameters": [
          {
            "$ref": "#/components/parameters/RemediationId"
          },
          {
            "$ref": "#/components/parameters/PlaybookRunId"
          },
          {
            "$ref": "#/components/parameters/ExecutorId"
          },
          {
            "$ref": "#/components/parameters/Limit"
          },
          {
            "$ref": "#/components/parameters/Offset"
          },
          {
            "$ref": "#/components/parameters/SystemName"
          },
          {
            "$ref": "#/components/parameters/PlaybookRunSystemSort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlaybookRunSystemList"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "summary": "Get details on systems being executed on in specific playbook run",
        "tags": [
          "remediations"
        ]
      }
    },
    "/remediations/{id}/playbook_runs/{playbook_run_id}/systems/{system}": {
      "get": {
        "description": "Get details and updated log of system being executed on in specific playbook run",
        "operationId": "getPlaybookRunSystemDetails",
        "parameters": [
          {
            "$ref": "#/components/parameters/RemediationId"
          },
          {
            "$ref": "#/components/parameters/PlaybookRunId"
          },
          {
            "$ref": "#/components/parameters/SystemId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlaybookRunSystemDetails"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "description": "RemediationId, PlaybookRunId, or SystemId not available."
          }
        },
        "summary": "Get details and updated log of system being executed on in specific playbook run",
        "tags": [
          "remediations"
        ]
      }
    },
    "/resolutions": {
      "post": {
        "description": "Provides information about resolutions available for the given issues",
        "operationId": "getResolutionsForIssues",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResolutionsBatchInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResolutionsBatch"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "summary": "Resolution metadata (batch)",
        "tags": [
          "resolutions"
        ]
      }
    },
    "/resolutions/{issue}": {
      "get": {
        "description": "Provides information about resolutions available for the given issue",
        "operationId": "getResolutionsForIssue",
        "parameters": [
          {
            "$ref": "#/components/parameters/IssueId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Resolutions"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "description": "Issue not known or Ansible resolution not available"
          }
        },
        "summary": "Resolution metadata",
        "tags": [
          "resolutions"
        ]
      }
    },
    "/version": {
      "get": {
        "description": "Provides information about the version of the service",
        "operationId": "getVersion",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "commit": {
                      "example": "8b87342",
                      "type": "string"
                    },
                    "version": {
                      "example": "1.0.0",
                      "type": "string"
                    }
                  },
                  "required": [
                    "version",
                    "commit"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Get service version",
        "tags": [
          "version"
        ]
      }
    }
  },
  "servers": [
    {
      "description": "production server",
      "url": "https://cloud.redhat.com/api/remediations/v1"
    },
    {
      "description": "relative path",
      "url": "/api/remediations/v1"
    }
  ],
  "tags": [
    {
      "description": "Host-specific detailed diagnosis information",
      "name": "diagnosis"
    },
    {
      "description": "Ansible Playbook Generator",
      "name": "generator"
    },
    {
      "description": "Ansible Playbook Builder",
      "name": "remediations"
    },
    {
      "description": "Information about available Ansible resolutions",
      "name": "resolutions"
    }
  ]
}