{
  "extras": {},
  "openapi": {
    "components": {
      "responses": {
        "BadRequest": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/Errors"
              }
            }
          },
          "description": "The server could could not process the current request."
        },
        "Forbidden": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/Errors"
              }
            }
          },
          "description": "The request was valid, but the request was refused by the server."
        },
        "InternalServerError": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/Errors"
              }
            }
          },
          "description": "An internal server error has occurred and is not recoverable."
        },
        "ResourceNotFound": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/Errors"
              }
            }
          },
          "description": "The requested resource was not found."
        }
      },
      "schemas": {
        "BillingAccountId": {
          "type": "string"
        },
        "BillingCategory": {
          "enum": [
            "prepaid",
            "on-demand"
          ],
          "type": "string"
        },
        "BillingProviderType": {
          "enum": [
            "",
            "red hat",
            "aws",
            "gcp",
            "azure",
            "oracle",
            "_ANY"
          ],
          "type": "string"
        },
        "CandlepinPool": {
          "description": "Subset of Candlepin pool data that rhsm-subscriptions understands.",
          "properties": {
            "activeSubscription": {
              "type": "boolean"
            },
            "derivedProvidedProducts": {
              "items": {
                "$ref": "#/components/schemas/CandlepinProvidedProduct"
              },
              "type": "array"
            },
            "endDate": {
              "format": "date-time",
              "type": "string"
            },
            "productAttributes": {
              "items": {
                "$ref": "#/components/schemas/CandlepinProductAttribute"
              },
              "type": "array"
            },
            "productId": {
              "type": "string"
            },
            "providedProducts": {
              "items": {
                "$ref": "#/components/schemas/CandlepinProvidedProduct"
              },
              "type": "array"
            },
            "quantity": {
              "format": "int64",
              "type": "integer"
            },
            "startDate": {
              "format": "date-time",
              "type": "string"
            },
            "subscriptionId": {
              "type": "string"
            },
            "type": {
              "type": "string"
            }
          }
        },
        "CandlepinProductAttribute": {
          "properties": {
            "name": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          }
        },
        "CandlepinProvidedProduct": {
          "properties": {
            "productId": {
              "type": "string"
            }
          }
        },
        "CapacityReport": {
          "deprecated": true,
          "properties": {
            "data": {
              "items": {
                "$ref": "#/components/schemas/CapacitySnapshot"
              },
              "type": "array"
            },
            "links": {
              "$ref": "#/components/schemas/PageLinks"
            },
            "meta": {
              "$ref": "#/components/schemas/CapacityReport_meta"
            }
          }
        },
        "CapacityReportByMetricId": {
          "properties": {
            "data": {
              "items": {
                "$ref": "#/components/schemas/CapacitySnapshotByMetricId"
              },
              "type": "array"
            },
            "links": {
              "$ref": "#/components/schemas/PageLinks"
            },
            "meta": {
              "$ref": "#/components/schemas/CapacityReportByMetricId_meta"
            }
          }
        },
        "CapacityReportByMetricId_meta": {
          "properties": {
            "category": {
              "$ref": "#/components/schemas/ReportCategory"
            },
            "count": {
              "type": "integer"
            },
            "granularity": {
              "$ref": "#/components/schemas/GranularityType"
            },
            "metric_id": {
              "type": "string"
            },
            "product": {
              "type": "string"
            },
            "service_level": {
              "$ref": "#/components/schemas/ServiceLevelType"
            },
            "usage": {
              "$ref": "#/components/schemas/UsageType"
            }
          },
          "required": [
            "count",
            "granularity",
            "product"
          ],
          "type": "object"
        },
        "CapacityReport_meta": {
          "properties": {
            "count": {
              "type": "integer"
            },
            "granularity": {
              "$ref": "#/components/schemas/GranularityType"
            },
            "product": {
              "type": "string"
            },
            "service_level": {
              "$ref": "#/components/schemas/ServiceLevelType"
            },
            "usage": {
              "$ref": "#/components/schemas/UsageType"
            }
          },
          "required": [
            "count",
            "granularity",
            "product"
          ],
          "type": "object"
        },
        "CapacitySnapshot": {
          "deprecated": true,
          "properties": {
            "cores": {
              "description": "Total cores capacity.",
              "format": "int32",
              "minimum": 0,
              "type": "integer"
            },
            "date": {
              "description": "The start date for this snapshot entry. Dates are returned in UTC. Clients must consult the 'granularity' field in the CapacityReport to determine the length of time each CapacitySnapshot covers.",
              "format": "date-time",
              "type": "string"
            },
            "has_infinite_quantity": {
              "description": "Indicates whether this snapshot has an infinite quantity subscription included. If there is an infinite quantity subscription involved, there is no meaningful number for capacity.",
              "type": "boolean"
            },
            "hypervisor_cores": {
              "description": "Total hypervisor cores capacity.",
              "format": "int32",
              "minimum": 0,
              "type": "integer"
            },
            "hypervisor_sockets": {
              "description": "Hypervisor socket capacity.",
              "format": "int32",
              "minimum": 0,
              "type": "integer"
            },
            "physical_cores": {
              "description": "Total physical cores capacity.",
              "format": "int32",
              "minimum": 0,
              "type": "integer"
            },
            "physical_sockets": {
              "description": "Physical socket capacity.",
              "format": "int32",
              "minimum": 0,
              "type": "integer"
            },
            "sockets": {
              "description": "Total socket capacity.",
              "format": "int32",
              "minimum": 0,
              "type": "integer"
            }
          },
          "required": [
            "date",
            "has_infinite_quantity"
          ]
        },
        "CapacitySnapshotByMetricId": {
          "properties": {
            "date": {
              "description": "The start date for this snapshot entry. Dates are returned in UTC. Clients must consult the 'granularity' field in the CapacityReport to determine the length of time each CapacitySnapshot covers.",
              "format": "date-time",
              "type": "string"
            },
            "has_data": {
              "type": "boolean"
            },
            "has_infinite_quantity": {
              "type": "boolean"
            },
            "value": {
              "description": "Capacity value",
              "format": "int32",
              "minimum": 0,
              "type": "integer"
            }
          },
          "required": [
            "date",
            "has_data",
            "value"
          ]
        },
        "CloudProvider": {
          "enum": [
            "aws",
            "gcp",
            "azure",
            "alibaba"
          ],
          "type": "string"
        },
        "Error": {
          "properties": {
            "code": {
              "type": "string"
            },
            "detail": {
              "type": "string"
            },
            "status": {
              "type": "string"
            },
            "title": {
              "type": "string"
            }
          },
          "required": [
            "code",
            "status",
            "title"
          ]
        },
        "Errors": {
          "properties": {
            "errors": {
              "items": {
                "$ref": "#/components/schemas/Error"
              },
              "type": "array"
            }
          },
          "required": [
            "errors"
          ]
        },
        "GranularityType": {
          "description": "Describes the significance of each date in the snapshot list. For example if the granularity is set to 'weekly', the dates in the snapshot list will represent the start of a seven day period.",
          "enum": [
            "Hourly",
            "Daily",
            "Weekly",
            "Monthly",
            "Quarterly",
            "Yearly"
          ],
          "type": "string"
        },
        "Host": {
          "properties": {
            "billing_account_id": {
              "type": "string"
            },
            "billing_provider": {
              "$ref": "#/components/schemas/BillingProviderType"
            },
            "cloud_provider": {
              "description": "If applicable, the cloud provider for this host.",
              "type": "string"
            },
            "core_hours": {
              "format": "double",
              "type": "number"
            },
            "cores": {
              "description": "Number of effective cores counted for this host by Subscription Watch.",
              "format": "int32",
              "minimum": 0,
              "type": "integer"
            },
            "display_name": {
              "description": "The display name for this host on cloud.redhat.com.",
              "type": "string"
            },
            "hardware_type": {
              "description": "What the type of the host is (e.g. hypervisor, physical, etc.).",
              "type": "string"
            },
            "insights_id": {
              "description": "The insights identifier for this host, used as ID on cloud.redhat.com.",
              "type": "string"
            },
            "instance_hours": {
              "format": "double",
              "type": "number"
            },
            "inventory_id": {
              "description": "The HBI identifier for this host.",
              "type": "string"
            },
            "is_hypervisor": {
              "description": "Is this host a hypervisor?",
              "type": "boolean"
            },
            "is_unmapped_guest": {
              "description": "Is this host an unmapped guest (not reported by virt-who)?",
              "type": "boolean"
            },
            "last_seen": {
              "description": "Latest timestamp that Subscription Watch has for this host.",
              "format": "date-time",
              "type": "string"
            },
            "measurement_type": {
              "description": "What was the applied measurement type (e.g. hypervisor, physical, aws, etc ).",
              "type": "string"
            },
            "number_of_guests": {
              "description": "Number of guests if this host is a hypervisor.",
              "format": "int32",
              "type": "integer"
            },
            "sockets": {
              "description": "Number of effective sockets counted for this host by Subscription Watch.",
              "format": "int32",
              "minimum": 0,
              "type": "integer"
            },
            "subscription_manager_id": {
              "description": "The subscription-manager ID for this host, from `subscription-manager identity`.",
              "type": "string"
            }
          },
          "required": [
            "display_name",
            "hardware_type",
            "last_seen"
          ]
        },
        "HostReport": {
          "properties": {
            "data": {
              "items": {
                "$ref": "#/components/schemas/Host"
              },
              "type": "array"
            },
            "links": {
              "$ref": "#/components/schemas/PageLinks"
            },
            "meta": {
              "$ref": "#/components/schemas/HostReport_meta"
            }
          }
        },
        "HostReportSort": {
          "enum": [
            "display_name",
            "hardware_type",
            "cores",
            "sockets",
            "last_seen",
            "measurement_type",
            "core_hours",
            "instance_hours"
          ],
          "type": "string"
        },
        "HostReport_meta": {
          "properties": {
            "count": {
              "type": "integer"
            },
            "product": {
              "type": "string"
            },
            "service_level": {
              "$ref": "#/components/schemas/ServiceLevelType"
            },
            "uom": {
              "$ref": "#/components/schemas/Uom"
            },
            "usage": {
              "$ref": "#/components/schemas/UsageType"
            }
          },
          "required": [
            "count",
            "product"
          ],
          "type": "object"
        },
        "HypervisorGuestReport": {
          "properties": {
            "data": {
              "items": {
                "$ref": "#/components/schemas/Host"
              },
              "type": "array"
            },
            "links": {
              "$ref": "#/components/schemas/PageLinks"
            },
            "meta": {
              "$ref": "#/components/schemas/MetaCount"
            }
          }
        },
        "InstanceData": {
          "description": "The representation of a product cluster data",
          "example": {
            "billing_account_id": "e460fbca-a351-4c6a-a36a-18fdbfbc5a20",
            "billing_provider": "red hat",
            "category": "cloud",
            "cloud_provider": "aws",
            "display_name": "rhv.example.com",
            "id": "d6214a0b-b344-4778-831c-d53dcacb2da3",
            "instance_id": "879180f3-76a4-46d5-8fff-7fb32067340b",
            "last_seen": "2020-01-01T00:00:00Z",
            "measurements": [
              42,
              null,
              1
            ],
            "number_of_guests": 4
          },
          "properties": {
            "billing_account_id": {
              "type": "string"
            },
            "billing_provider": {
              "$ref": "#/components/schemas/BillingProviderType"
            },
            "category": {
              "$ref": "#/components/schemas/ReportCategory"
            },
            "cloud_provider": {
              "$ref": "#/components/schemas/CloudProvider"
            },
            "display_name": {
              "type": "string"
            },
            "id": {
              "description": "ID of the host record",
              "type": "string"
            },
            "instance_id": {
              "type": "string"
            },
            "last_seen": {
              "format": "date-time",
              "type": "string"
            },
            "measurements": {
              "description": "Must be in the same order as \"measurements\" in the meta. (i.e. in the example instance.measurements[0] is the instance-hours, measurements[1] is storage-gibibytes, and measurements[2] is the transfer-gibibytes.",
              "items": {
                "format": "double",
                "type": "number"
              },
              "type": "array"
            },
            "number_of_guests": {
              "type": "integer"
            },
            "subscription_manager_id": {
              "type": "string"
            }
          },
          "title": "Root Type for Instance",
          "type": "object"
        },
        "InstanceGuestReport": {
          "properties": {
            "data": {
              "items": {
                "$ref": "#/components/schemas/Host"
              },
              "type": "array"
            },
            "links": {
              "$ref": "#/components/schemas/PageLinks"
            },
            "meta": {
              "$ref": "#/components/schemas/MetaCount"
            }
          }
        },
        "InstanceMeta": {
          "description": "The details of the entire list of InstanceData",
          "example": {
            "count": 10,
            "measurements": [
              "Instance-Hours",
              "Storage-Gibibytes",
              "Transfer-Gibibytes"
            ],
            "product": "RHEL Server",
            "service_level": "Premium",
            "usage": "Production"
          },
          "properties": {
            "billing_account_id": {
              "type": "string"
            },
            "billing_provider": {
              "$ref": "#/components/schemas/BillingProviderType"
            },
            "count": {
              "format": "int32",
              "type": "integer"
            },
            "measurements": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "product": {
              "type": "string"
            },
            "service_level": {
              "$ref": "#/components/schemas/ServiceLevelType"
            },
            "usage": {
              "$ref": "#/components/schemas/UsageType"
            }
          },
          "title": "Root Type for InstanceMeta",
          "type": "object"
        },
        "InstanceReportSort": {
          "enum": [
            "display_name",
            "last_seen",
            "Cores",
            "Sockets",
            "Core-seconds",
            "Instance-hours",
            "Storage-gibibytes",
            "Storage-gibibyte-months",
            "Transfer-gibibytes",
            "billing_provider",
            "number_of_guests",
            "category"
          ],
          "type": "string"
        },
        "InstanceResponse": {
          "description": "The output data of a product instance metrics",
          "example": {
            "data": [
              {
                "billing_account_id": "e460fbca-a351-4c6a-a36a-18fdbfbc5a20",
                "billing_provider": "red hat",
                "category": "HYPERVISOR",
                "display_name": "rhv.example.com",
                "id": "d6214a0b-b344-4778-831c-d53dcacb2da3",
                "instance_id": "879180f3-76a4-46d5-8fff-7fb32067340b",
                "last_seen": "2020-01-01T00:00:00Z",
                "measurements": [
                  42,
                  null,
                  1
                ],
                "number_of_guests": 4
              },
              {
                "billing_account_id": "e460fbca-a351-4c6a-a36a-18fdbfbc5a20",
                "billing_provider": "red hat",
                "display_name": "rhv.example.com",
                "id": "70b6f70b-0c38-46a3-8b9b-7c1703e2d74f",
                "instance_id": "f273515a-e168-4c00-b7bd-86be9994fb8b",
                "last_seen": "2020-01-01T00:00:00Z",
                "measurements": [
                  2
                ],
                "number_of_guests": 1
              }
            ],
            "links": {
              "first": "string",
              "last": "string",
              "next": "string"
            },
            "meta": {
              "count": 10
            }
          },
          "properties": {
            "data": {
              "items": {
                "$ref": "#/components/schemas/InstanceData"
              },
              "type": "array"
            },
            "links": {
              "$ref": "#/components/schemas/PageLinks"
            },
            "meta": {
              "$ref": "#/components/schemas/InstanceMeta"
            }
          },
          "title": "Root Type for InstanceResponse",
          "type": "object"
        },
        "MetaCount": {
          "properties": {
            "count": {
              "type": "integer"
            }
          },
          "required": [
            "count"
          ]
        },
        "MetricId": {
          "format": "MetricId",
          "type": "string"
        },
        "OptInConfig": {
          "properties": {
            "data": {
              "$ref": "#/components/schemas/OptInConfig_data"
            },
            "meta": {
              "$ref": "#/components/schemas/OptInConfig_meta"
            }
          },
          "required": [
            "data",
            "meta"
          ]
        },
        "OptInConfig_data": {
          "properties": {
            "account": {
              "$ref": "#/components/schemas/OptInConfig_data_account"
            },
            "opt_in_complete": {
              "type": "boolean"
            },
            "org": {
              "$ref": "#/components/schemas/OptInConfig_data_org"
            }
          },
          "required": [
            "opt_in_complete"
          ],
          "type": "object"
        },
        "OptInConfig_data_account": {
          "properties": {
            "created": {
              "format": "date-time",
              "type": "string"
            },
            "last_updated": {
              "format": "date-time",
              "type": "string"
            },
            "opt_in_type": {
              "type": "string"
            }
          },
          "required": [
            "created",
            "last_updated",
            "opt_in_type"
          ],
          "type": "object"
        },
        "OptInConfig_data_org": {
          "properties": {
            "created": {
              "format": "date-time",
              "type": "string"
            },
            "last_updated": {
              "format": "date-time",
              "type": "string"
            },
            "opt_in_type": {
              "type": "string"
            },
            "org_id": {
              "type": "string"
            }
          },
          "required": [
            "created",
            "last_updated",
            "opt_in_type",
            "org_id"
          ],
          "type": "object"
        },
        "OptInConfig_meta": {
          "properties": {
            "org_id": {
              "type": "string"
            }
          },
          "required": [
            "org_id"
          ],
          "type": "object"
        },
        "PageLinks": {
          "properties": {
            "first": {
              "type": "string"
            },
            "last": {
              "type": "string"
            },
            "next": {
              "type": "string"
            },
            "previous": {
              "type": "string"
            }
          },
          "required": [
            "first",
            "last"
          ]
        },
        "ProductId": {
          "format": "ProductId",
          "type": "string"
        },
        "ReportCategory": {
          "enum": [
            "physical",
            "virtual",
            "cloud",
            "hypervisor"
          ],
          "type": "string"
        },
        "ServiceLevelType": {
          "description": "Describes the service level that the report was made against. Not set if it wasn't specified as a query parameter.",
          "enum": [
            "",
            "Premium",
            "Standard",
            "Self-Support",
            "_ANY"
          ],
          "type": "string"
        },
        "SkuCapacity": {
          "properties": {
            "billing_provider": {
              "$ref": "#/components/schemas/BillingProviderType"
            },
            "capacity": {
              "description": "The summed standard capacity of the unit-of-measure of the active subscriptions for the offering.",
              "format": "int32",
              "type": "integer"
            },
            "has_infinite_quantity": {
              "description": "Denotes unlimited capacity for the offering when true.",
              "type": "boolean"
            },
            "hypervisor_capacity": {
              "description": "The summed hypervisor capacity of the unit-of-measure of the active subscriptions for the offering.",
              "format": "int32",
              "type": "integer"
            },
            "next_event_date": {
              "description": "The most immediate date for a subscription event.",
              "format": "date-time",
              "type": "string"
            },
            "next_event_type": {
              "$ref": "#/components/schemas/SubscriptionEventType"
            },
            "product_name": {
              "description": "The offering name.",
              "type": "string"
            },
            "quantity": {
              "description": "The summed subscription quantities across the active subscriptions for the offering.",
              "format": "int32",
              "type": "integer"
            },
            "service_level": {
              "$ref": "#/components/schemas/ServiceLevelType"
            },
            "sku": {
              "description": "The identifier for the offering.",
              "type": "string"
            },
            "subscriptions": {
              "description": "List of active subscriptions that contribute to the quantity and capacity totals.",
              "items": {
                "$ref": "#/components/schemas/SkuCapacitySubscription"
              },
              "type": "array"
            },
            "total_capacity": {
              "description": "The combined (standard and hypervisor) capacity for the offering.",
              "format": "int32",
              "type": "integer"
            },
            "uom": {
              "$ref": "#/components/schemas/Uom"
            },
            "usage": {
              "$ref": "#/components/schemas/UsageType"
            }
          }
        },
        "SkuCapacityReport": {
          "properties": {
            "data": {
              "items": {
                "$ref": "#/components/schemas/SkuCapacity"
              },
              "type": "array"
            },
            "links": {
              "$ref": "#/components/schemas/PageLinks"
            },
            "meta": {
              "$ref": "#/components/schemas/SkuCapacityReport_meta"
            }
          }
        },
        "SkuCapacityReportSort": {
          "enum": [
            "sku",
            "service_level",
            "usage",
            "next_event_date",
            "next_event_type",
            "quantity",
            "total_capacity",
            "product_name"
          ],
          "type": "string"
        },
        "SkuCapacityReport_meta": {
          "properties": {
            "count": {
              "type": "integer"
            },
            "product": {
              "type": "string"
            },
            "report_category": {
              "$ref": "#/components/schemas/ReportCategory"
            },
            "service_level": {
              "$ref": "#/components/schemas/ServiceLevelType"
            },
            "subscription_type": {
              "$ref": "#/components/schemas/SubscriptionType"
            },
            "uom": {
              "$ref": "#/components/schemas/Uom"
            },
            "usage": {
              "$ref": "#/components/schemas/UsageType"
            }
          },
          "required": [
            "count",
            "product",
            "subscription_type"
          ],
          "type": "object"
        },
        "SkuCapacitySubscription": {
          "properties": {
            "id": {
              "type": "string"
            },
            "number": {
              "type": "string"
            }
          }
        },
        "SortDirection": {
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "SubscriptionEventType": {
          "description": "The most immediate subscription event, such as a subscription beginning or ending.",
          "enum": [
            "Subscription Start",
            "Subscription End"
          ],
          "type": "string"
        },
        "SubscriptionType": {
          "enum": [
            "On-demand",
            "Annual"
          ],
          "type": "string"
        },
        "TallyReport": {
          "deprecated": true,
          "properties": {
            "data": {
              "items": {
                "$ref": "#/components/schemas/TallySnapshot"
              },
              "type": "array"
            },
            "links": {
              "$ref": "#/components/schemas/PageLinks"
            },
            "meta": {
              "$ref": "#/components/schemas/TallyReport_meta"
            }
          }
        },
        "TallyReportData": {
          "properties": {
            "data": {
              "items": {
                "$ref": "#/components/schemas/TallyReportDataPoint"
              },
              "type": "array"
            },
            "links": {
              "$ref": "#/components/schemas/PageLinks"
            },
            "meta": {
              "$ref": "#/components/schemas/TallyReportData_meta"
            }
          }
        },
        "TallyReportDataPoint": {
          "description": "Data point for a given tally report.",
          "properties": {
            "date": {
              "description": "The date for this datapoint.",
              "format": "date-time",
              "type": "string"
            },
            "has_data": {
              "type": "boolean"
            },
            "value": {
              "format": "int32",
              "type": "integer"
            }
          },
          "required": [
            "date",
            "value"
          ]
        },
        "TallyReportData_meta": {
          "properties": {
            "billing_acount_id": {
              "type": "string"
            },
            "billing_provider": {
              "$ref": "#/components/schemas/BillingProviderType"
            },
            "count": {
              "type": "integer"
            },
            "granularity": {
              "$ref": "#/components/schemas/GranularityType"
            },
            "metric_id": {
              "type": "string"
            },
            "product": {
              "type": "string"
            },
            "service_level": {
              "$ref": "#/components/schemas/ServiceLevelType"
            },
            "total_monthly": {
              "$ref": "#/components/schemas/TallyReportDataPoint"
            },
            "usage": {
              "$ref": "#/components/schemas/UsageType"
            }
          },
          "required": [
            "count",
            "granularity",
            "metric_id",
            "product"
          ],
          "type": "object"
        },
        "TallyReport_meta": {
          "properties": {
            "count": {
              "type": "integer"
            },
            "granularity": {
              "$ref": "#/components/schemas/GranularityType"
            },
            "product": {
              "type": "string"
            },
            "service_level": {
              "$ref": "#/components/schemas/ServiceLevelType"
            },
            "total_core_hours": {
              "format": "double",
              "type": "number"
            },
            "total_instance_hours": {
              "format": "double",
              "type": "number"
            },
            "usage": {
              "$ref": "#/components/schemas/UsageType"
            }
          },
          "required": [
            "count",
            "granularity",
            "product"
          ],
          "type": "object"
        },
        "TallySnapshot": {
          "deprecated": true,
          "properties": {
            "cloud_cores": {
              "default": 0,
              "description": "Total number of cores calculated from hosts running on a public cloud provider, matching the report criteria on the date of this snapshot.",
              "format": "int32",
              "minimum": 0,
              "type": "integer"
            },
            "cloud_instance_count": {
              "default": 0,
              "description": "Total number of hosts running on a public cloud provider, matching the report criteria on the date of this snapshot.",
              "format": "int32",
              "minimum": 0,
              "type": "integer"
            },
            "cloud_sockets": {
              "default": 0,
              "description": "Total number of sockets calculated from hosts running on a public cloud provider, matching the report criteria on the date of this snapshot.",
              "format": "int32",
              "minimum": 0,
              "type": "integer"
            },
            "core_hours": {
              "default": 0,
              "format": "double",
              "minimum": 0,
              "type": "number"
            },
            "cores": {
              "default": 0,
              "format": "int32",
              "minimum": 0,
              "type": "integer"
            },
            "date": {
              "description": "The start date for this snapshot entry. Dates are returned in UTC. Clients must consult the 'granularity' field in the TallyReport to determine the length of time each TallySnapshot covers.",
              "format": "date-time",
              "type": "string"
            },
            "has_data": {
              "type": "boolean"
            },
            "hypervisor_cores": {
              "default": 0,
              "description": "Total number of cores calculated from hypervisors matching the report criteria on the date of this snapshot.",
              "format": "int32",
              "minimum": 0,
              "type": "integer"
            },
            "hypervisor_instance_count": {
              "default": 0,
              "description": "Total number of hypervisors matching the report criteria on the date of this snapshot.",
              "format": "int32",
              "minimum": 0,
              "type": "integer"
            },
            "hypervisor_sockets": {
              "default": 0,
              "description": "Total number of sockets calculated from hypervisors matching the report criteria on the date of this snapshot.",
              "format": "int32",
              "minimum": 0,
              "type": "integer"
            },
            "instance_count": {
              "default": 0,
              "description": "Total systems matching the report criteria on the date of this snapshot.",
              "format": "int32",
              "minimum": 0,
              "type": "integer"
            },
            "instance_hours": {
              "default": 0,
              "format": "double",
              "minimum": 0,
              "type": "number"
            },
            "physical_cores": {
              "default": 0,
              "description": "Total number of cores calculated from physical systems matching the report criteria on the date of this snapshot.",
              "format": "int32",
              "minimum": 0,
              "type": "integer"
            },
            "physical_instance_count": {
              "default": 0,
              "description": "Total number of physical systems matching the report criteria on the date of this snapshot.",
              "format": "int32",
              "minimum": 0,
              "type": "integer"
            },
            "physical_sockets": {
              "default": 0,
              "description": "Total number of sockets calculated from physical systems matching the report criteria on the date of this snapshot.",
              "format": "int32",
              "minimum": 0,
              "type": "integer"
            },
            "sockets": {
              "default": 0,
              "description": "Total number of sockets calculated from systems matching the report criteria on the date of this snapshot.",
              "format": "int32",
              "minimum": 0,
              "type": "integer"
            }
          },
          "required": [
            "date",
            "instance_count"
          ]
        },
        "Uom": {
          "description": "The unit-of-measure for the capacity.",
          "enum": [
            "cores",
            "sockets"
          ],
          "type": "string"
        },
        "UsageType": {
          "description": "Describes the usage that the report was made against. Not set if it wasn't specified as a query parameter.",
          "enum": [
            "",
            "Production",
            "Development/Test",
            "Disaster Recovery",
            "_ANY"
          ],
          "type": "string"
        },
        "VersionInfo": {
          "properties": {
            "build": {
              "$ref": "#/components/schemas/VersionInfo_build"
            }
          }
        },
        "VersionInfo_build": {
          "properties": {
            "artifact": {
              "type": "string"
            },
            "group": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "version": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "securitySchemes": {
        "Authorization": {
          "in": "header",
          "name": "Authorization",
          "type": "apiKey"
        }
      }
    },
    "info": {
      "description": "REST interface for the rhsm-subscriptions service. Please note any deprecated APIs. Our current deprecation policy is to keep deprecated APIs around for at least 6 months.",
      "title": "rhsm-subscriptions-api",
      "version": "1.0.0"
    },
    "openapi": "3.0.2",
    "paths": {
      "/capacity/products/{product_id}": {
        "description": "Operations for capacity report for a given account and product",
        "get": {
          "deprecated": true,
          "operationId": "getCapacityReport",
          "parameters": [
            {
              "description": "The ID for the product we wish to query",
              "explode": false,
              "in": "path",
              "name": "product_id",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/ProductId"
              },
              "style": "simple"
            },
            {
              "description": "The number of items to skip before starting to collect the result set",
              "explode": true,
              "in": "query",
              "name": "offset",
              "required": false,
              "schema": {
                "type": "integer"
              },
              "style": "form"
            },
            {
              "description": "The numbers of items to return",
              "explode": true,
              "in": "query",
              "name": "limit",
              "required": false,
              "schema": {
                "minimum": 1,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "description": "The level of granularity to return.",
              "explode": true,
              "in": "query",
              "name": "granularity",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/GranularityType"
              },
              "style": "form"
            },
            {
              "description": "Include only capacity for the specified service level.",
              "explode": true,
              "in": "query",
              "name": "sla",
              "required": false,
              "schema": {
                "$ref": "#/components/schemas/ServiceLevelType"
              },
              "style": "form"
            },
            {
              "description": "Include only capacity for the specified usage level.",
              "explode": true,
              "in": "query",
              "name": "usage",
              "required": false,
              "schema": {
                "$ref": "#/components/schemas/UsageType"
              },
              "style": "form"
            },
            {
              "description": "Defines the start of the report period. Dates should be provided in ISO 8601 format but the only accepted offset is UTC. E.g. 2017-07-21T17:32:28Z",
              "explode": true,
              "in": "query",
              "name": "beginning",
              "required": true,
              "schema": {
                "format": "date-time",
                "type": "string"
              },
              "style": "form"
            },
            {
              "description": "Defines the end of the report period.  Defaults to the current time. Dates should be provided in UTC.",
              "explode": true,
              "in": "query",
              "name": "ending",
              "required": true,
              "schema": {
                "format": "date-time",
                "type": "string"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/vnd.api+json": {
                  "example": {
                    "data": [
                      {
                        "date": "2017-08-04T17:32:05Z",
                        "has_infinite_quantity": false,
                        "hypervisor_sockets": 0,
                        "physical_sockets": 0,
                        "sockets": 0
                      },
                      {
                        "date": "2017-08-05T17:31:04Z",
                        "has_infinite_quantity": false,
                        "hypervisor_sockets": 0,
                        "physical_sockets": 0,
                        "sockets": 0
                      },
                      {
                        "date": "2017-08-06T17:32:03Z",
                        "has_infinite_quantity": false,
                        "hypervisor_sockets": 5,
                        "physical_sockets": 5,
                        "sockets": 10
                      },
                      {
                        "date": "2017-08-07T17:34:02Z",
                        "has_infinite_quantity": true,
                        "hypervisor_sockets": null,
                        "physical_sockets": null,
                        "sockets": null
                      },
                      {
                        "date": "2017-08-08T17:32:01Z",
                        "has_infinite_quantity": true,
                        "hypervisor_sockets": 5,
                        "physical_sockets": 5,
                        "sockets": 10
                      }
                    ],
                    "links": {
                      "first": "/api/rhsm-subscriptions/v1/capacity/RHEL%20for%20x86?granularity=DAILY&sla=Premium&beginning=2017-08-01T17%3A32%3A28Z&ending=2017-08-31T17%3A32%3A28Z&offset=0&limit=5",
                      "last": "/api/rhsm-subscriptions/v1/capacity/RHEL%20for%20x86?granularity=DAILY&sla=Premium&beginning=2017-08-01T17%3A32%3A28Z&ending=2017-08-31T17%3A32%3A28Z&offset=5&limit=5",
                      "next": "/api/rhsm-subscriptions/v1/capacity/RHEL%20for%20x86?granularity=DAILY&sla=Premium&beginning=2017-08-01T17%3A32%3A28Z&ending=2017-08-31T17%3A32%3A28Z&offset=5&limit=5",
                      "previous": null
                    },
                    "meta": {
                      "count": 10,
                      "granularity": "Daily",
                      "product": "RHEL Server",
                      "service_level": "Premium"
                    }
                  },
                  "schema": {
                    "$ref": "#/components/schemas/CapacityReport"
                  }
                }
              },
              "description": "The request for a capacity report was successful."
            },
            "400": {
              "content": {
                "application/vnd.api+json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              },
              "description": "The server could could not process the current request."
            },
            "403": {
              "content": {
                "application/vnd.api+json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              },
              "description": "The request was valid, but the request was refused by the server."
            },
            "404": {
              "content": {
                "application/vnd.api+json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              },
              "description": "The requested resource was not found."
            },
            "500": {
              "content": {
                "application/vnd.api+json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              },
              "description": "An internal server error has occurred and is not recoverable."
            }
          },
          "summary": "(Deprecated) Fetch a capacity report for an account and product.",
          "tags": [
            "capacity"
          ]
        }
      },
      "/capacity/products/{product_id}/{metric_id}": {
        "description": "Operations for capacity report for a given account and product",
        "get": {
          "operationId": "getCapacityReportByMetricId",
          "parameters": [
            {
              "description": "The ID for the product we wish to query",
              "explode": false,
              "in": "path",
              "name": "product_id",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/ProductId"
              },
              "style": "simple"
            },
            {
              "description": "The metric ID for the product we wish to query",
              "explode": false,
              "in": "path",
              "name": "metric_id",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/MetricId"
              },
              "style": "simple"
            },
            {
              "description": "The number of items to skip before starting to collect the result set",
              "explode": true,
              "in": "query",
              "name": "offset",
              "required": false,
              "schema": {
                "type": "integer"
              },
              "style": "form"
            },
            {
              "description": "The numbers of items to return",
              "explode": true,
              "in": "query",
              "name": "limit",
              "required": false,
              "schema": {
                "minimum": 1,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "description": "The level of granularity to return.",
              "explode": true,
              "in": "query",
              "name": "granularity",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/GranularityType"
              },
              "style": "form"
            },
            {
              "description": "The category to fetch data for",
              "explode": true,
              "in": "query",
              "name": "category",
              "required": false,
              "schema": {
                "$ref": "#/components/schemas/ReportCategory"
              },
              "style": "form"
            },
            {
              "description": "Include only capacity for the specified service level.",
              "explode": true,
              "in": "query",
              "name": "sla",
              "required": false,
              "schema": {
                "$ref": "#/components/schemas/ServiceLevelType"
              },
              "style": "form"
            },
            {
              "description": "Include only capacity for the specified usage level.",
              "explode": true,
              "in": "query",
              "name": "usage",
              "required": false,
              "schema": {
                "$ref": "#/components/schemas/UsageType"
              },
              "style": "form"
            },
            {
              "description": "Defines the start of the report period. Dates should be provided in ISO 8601 format but the only accepted offset is UTC. E.g. 2017-07-21T17:32:28Z",
              "explode": true,
              "in": "query",
              "name": "beginning",
              "required": true,
              "schema": {
                "format": "date-time",
                "type": "string"
              },
              "style": "form"
            },
            {
              "description": "Defines the end of the report period.  Defaults to the current time. Dates should be provided in UTC.",
              "explode": true,
              "in": "query",
              "name": "ending",
              "required": true,
              "schema": {
                "format": "date-time",
                "type": "string"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/vnd.api+json": {
                  "example": {
                    "data": [
                      {
                        "date": "2017-08-01T17:32:05Z",
                        "has_data": true,
                        "value": 100
                      },
                      {
                        "date": "2017-08-02T17:31:04Z",
                        "has_data": false,
                        "value": 0
                      },
                      {
                        "date": "2017-08-03T17:31:04Z",
                        "has_data": false,
                        "value": 0
                      },
                      {
                        "date": "2017-08-04T17:31:04Z",
                        "has_data": false,
                        "value": 0
                      },
                      {
                        "date": "2017-08-05T17:31:04Z",
                        "has_data": false,
                        "value": 0
                      }
                    ],
                    "links": {
                      "first": "/api/rhsm-subscriptions/v1/capacity/RHEL%20for%20x86/Sockets?granularity=DAILY&sla=Premium&beginning=2017-08-01T17%3A32%3A28Z&ending=2017-08-31T17%3A32%3A28Z&offset=0&limit=5",
                      "last": "/api/rhsm-subscriptions/v1/capacity/RHEL%20for%20x86/Sockets?granularity=DAILY&sla=Premium&beginning=2017-08-01T17%3A32%3A28Z&ending=2017-08-31T17%3A32%3A28Z&offset=5&limit=5",
                      "next": "/api/rhsm-subscriptions/v1/capacity/RHEL%20for%20x86/Sockets?granularity=DAILY&sla=Premium&beginning=2017-08-01T17%3A32%3A28Z&ending=2017-08-31T17%3A32%3A28Z&offset=5&limit=5",
                      "previous": null
                    },
                    "meta": {
                      "count": 10,
                      "granularity": "Daily",
                      "product": "RHEL Server",
                      "service_level": "Premium"
                    }
                  },
                  "schema": {
                    "$ref": "#/components/schemas/CapacityReportByMetricId"
                  }
                }
              },
              "description": "The request for a capacity report was successful."
            },
            "400": {
              "content": {
                "application/vnd.api+json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              },
              "description": "The server could could not process the current request."
            },
            "403": {
              "content": {
                "application/vnd.api+json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              },
              "description": "The request was valid, but the request was refused by the server."
            },
            "404": {
              "content": {
                "application/vnd.api+json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              },
              "description": "The requested resource was not found."
            },
            "500": {
              "content": {
                "application/vnd.api+json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              },
              "description": "An internal server error has occurred and is not recoverable."
            }
          },
          "summary": "Fetch a capacity report for an account and product.",
          "tags": [
            "capacity"
          ]
        }
      },
      "/hosts/products/{product_id}": {
        "description": "Operations for hosts for a given account and product",
        "get": {
          "deprecated": true,
          "operationId": "getHosts",
          "parameters": [
            {
              "description": "The ID for the product we wish to query",
              "explode": false,
              "in": "path",
              "name": "product_id",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/ProductId"
              },
              "style": "simple"
            },
            {
              "description": "The number of items to skip before starting to collect the result set",
              "explode": true,
              "in": "query",
              "name": "offset",
              "required": false,
              "schema": {
                "type": "integer"
              },
              "style": "form"
            },
            {
              "description": "The numbers of items to return",
              "explode": true,
              "in": "query",
              "name": "limit",
              "required": false,
              "schema": {
                "maximum": 100,
                "minimum": 1,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "description": "Include only hosts for the specified service level.",
              "explode": true,
              "in": "query",
              "name": "sla",
              "required": false,
              "schema": {
                "$ref": "#/components/schemas/ServiceLevelType"
              },
              "style": "form"
            },
            {
              "description": "Include only hosts for the specified usage level.",
              "explode": true,
              "in": "query",
              "name": "usage",
              "required": false,
              "schema": {
                "$ref": "#/components/schemas/UsageType"
              },
              "style": "form"
            },
            {
              "description": "Filter hosts to those that contribute to a specific unit of measure",
              "explode": true,
              "in": "query",
              "name": "uom",
              "required": false,
              "schema": {
                "$ref": "#/components/schemas/Uom"
              },
              "style": "form"
            },
            {
              "description": "Include only hosts containing the specified display name. Passing an empty string behaves the same way as passing null",
              "explode": true,
              "in": "query",
              "name": "display_name_contains",
              "required": false,
              "schema": {
                "default": "",
                "type": "string"
              },
              "style": "form"
            },
            {
              "description": "Defines the start of the report period. Dates should be provided in ISO 8601 format but the only accepted offset is UTC. E.g. 2017-07-21T17:32:28Z. Only applicable for OpenShift-dedicated-metrics and OpenShift-metrics products",
              "explode": true,
              "in": "query",
              "name": "beginning",
              "required": false,
              "schema": {
                "format": "date-time",
                "type": "string"
              },
              "style": "form"
            },
            {
              "description": "Defines the end of the report period. Dates should be provided in ISO 8601 format but the only accepted offset is UTC. E.g. 2017-07-21T17:32:28Z. Only applicable for OpenShift-dedicated-metrics and OpenShift-metrics products",
              "explode": true,
              "in": "query",
              "name": "ending",
              "required": false,
              "schema": {
                "format": "date-time",
                "type": "string"
              },
              "style": "form"
            },
            {
              "description": "What property to sort by (optional)",
              "explode": true,
              "in": "query",
              "name": "sort",
              "required": false,
              "schema": {
                "$ref": "#/components/schemas/HostReportSort"
              },
              "style": "form"
            },
            {
              "description": "Which direction to sort by (default: asc)",
              "explode": true,
              "in": "query",
              "name": "dir",
              "required": false,
              "schema": {
                "$ref": "#/components/schemas/SortDirection"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/vnd.api+json": {
                  "example": {
                    "data": [
                      {
                        "cores": 4,
                        "display_name": "rhv.example.com",
                        "hardware_type": "hypervisor",
                        "inventory_id": "d6214a0b-b344-4778-831c-d53dcacb2da3",
                        "last_seen": "2020-01-01T00:00:00Z",
                        "number_of_guests": 4,
                        "sockets": 2,
                        "subscription_manager_id": "adafd9d5-5b00-42fa-a6c9-75801d45cc6d"
                      },
                      {
                        "cores": 4,
                        "display_name": "db.example.com",
                        "hardware_type": "physical",
                        "inventory_id": "9358e312-1c9f-42f4-8910-dcef6e970852",
                        "last_seen": "2020-01-01T00:00:00Z",
                        "sockets": 2,
                        "subscription_manager_id": "b101a72f-1859-4489-acb8-d6d31c2578c4"
                      }
                    ],
                    "links": {
                      "first": "/api/rhsm-subscriptions/v1/hosts/RHEL%20for%20x86?sla=Premium&usage=Production&offset=0&limit=5",
                      "last": "/api/rhsm-subscriptions/v1/hosts/RHEL%20for%20x86?sla=Premium&usage=Production&offset=5&limit=5",
                      "next": "/api/rhsm-subscriptions/v1/hosts/RHEL%20for%20x86?sla=Premium&usage=Production&offset=5&limit=5",
                      "previous": null
                    },
                    "meta": {
                      "count": 10,
                      "product": "RHEL Server",
                      "service_level": "Premium",
                      "usage": "Production"
                    }
                  },
                  "schema": {
                    "$ref": "#/components/schemas/HostReport"
                  }
                }
              },
              "description": "The request for hosts was successful."
            },
            "400": {
              "content": {
                "application/vnd.api+json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              },
              "description": "The server could could not process the current request."
            },
            "403": {
              "content": {
                "application/vnd.api+json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              },
              "description": "The request was valid, but the request was refused by the server."
            },
            "404": {
              "content": {
                "application/vnd.api+json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              },
              "description": "The requested resource was not found."
            },
            "500": {
              "content": {
                "application/vnd.api+json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              },
              "description": "An internal server error has occurred and is not recoverable."
            }
          },
          "summary": "Fetch hosts matching report criteria.",
          "tags": [
            "hosts"
          ]
        }
      },
      "/hosts/{hypervisor_uuid}/guests": {
        "description": "Operations for hypervisor-guest mappings.",
        "get": {
          "deprecated": true,
          "operationId": "getHypervisorGuests",
          "parameters": [
            {
              "description": "The subscription-manager ID for the hypervisor we wish to query",
              "explode": false,
              "in": "path",
              "name": "hypervisor_uuid",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "The number of items to skip before starting to collect the result set",
              "explode": true,
              "in": "query",
              "name": "offset",
              "required": false,
              "schema": {
                "type": "integer"
              },
              "style": "form"
            },
            {
              "description": "The numbers of items to return",
              "explode": true,
              "in": "query",
              "name": "limit",
              "required": false,
              "schema": {
                "maximum": 100,
                "minimum": 1,
                "type": "integer"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/vnd.api+json": {
                  "example": {
                    "data": [
                      {
                        "display_name": "guest01.example.com",
                        "inventory_id": "d6214a0b-b344-4778-831c-d53dcacb2da3",
                        "last_seen": "2020-01-01T00:00:00Z",
                        "subscription_manager_id": "adafd9d5-5b00-42fa-a6c9-75801d45cc6d"
                      },
                      {
                        "display_name": "guest02.example.com",
                        "inventory_id": "9358e312-1c9f-42f4-8910-dcef6e970852",
                        "last_seen": "2020-01-01T00:00:00Z",
                        "subscription_manager_id": "b101a72f-1859-4489-acb8-d6d31c2578c4"
                      }
                    ],
                    "links": {
                      "first": "/api/rhsm-subscriptions/v1/hosts/a283ffb6-e0f3-4dbe-9732-ccfdb297ba07/guests?offset=0&limit=5",
                      "last": "/api/rhsm-subscriptions/v1/hosts/a283ffb6-e0f3-4dbe-9732-ccfdb297ba07/guests?offset=5&limit=5",
                      "next": "/api/rhsm-subscriptions/v1/hosts/a283ffb6-e0f3-4dbe-9732-ccfdb297ba07/guests?offset=5&limit=5",
                      "previous": null
                    },
                    "meta": {
                      "count": 10
                    }
                  },
                  "schema": {
                    "$ref": "#/components/schemas/HypervisorGuestReport"
                  }
                }
              },
              "description": "The request for a capacity report was successful."
            },
            "400": {
              "content": {
                "application/vnd.api+json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              },
              "description": "The server could could not process the current request."
            },
            "403": {
              "content": {
                "application/vnd.api+json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              },
              "description": "The request was valid, but the request was refused by the server."
            },
            "404": {
              "content": {
                "application/vnd.api+json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              },
              "description": "The requested resource was not found."
            },
            "500": {
              "content": {
                "application/vnd.api+json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              },
              "description": "An internal server error has occurred and is not recoverable."
            }
          },
          "summary": "Fetch guests for this hypervisor.",
          "tags": [
            "hosts"
          ]
        }
      },
      "/instances/products/{product_id}": {
        "get": {
          "operationId": "getInstancesByProduct",
          "parameters": [
            {
              "description": "The ID for the product we wish to query",
              "explode": false,
              "in": "path",
              "name": "product_id",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/ProductId"
              },
              "style": "simple"
            },
            {
              "description": "The number of items to skip before starting to collect the result set",
              "explode": true,
              "in": "query",
              "name": "offset",
              "required": false,
              "schema": {
                "type": "integer"
              },
              "style": "form"
            },
            {
              "description": "The numbers of items to return",
              "explode": true,
              "in": "query",
              "name": "limit",
              "required": false,
              "schema": {
                "maximum": 100,
                "minimum": 1,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "description": "Include only hosts for the specified service level.",
              "explode": true,
              "in": "query",
              "name": "sla",
              "required": false,
              "schema": {
                "$ref": "#/components/schemas/ServiceLevelType"
              },
              "style": "form"
            },
            {
              "description": "Include only hosts for the specified usage level.",
              "explode": true,
              "in": "query",
              "name": "usage",
              "required": false,
              "schema": {
                "$ref": "#/components/schemas/UsageType"
              },
              "style": "form"
            },
            {
              "description": "Include only hosts with a specific unit of measure",
              "explode": true,
              "in": "query",
              "name": "uom",
              "required": false,
              "schema": {
                "type": "string"
              },
              "style": "form"
            },
            {
              "description": "Include only hosts for the specified billing provider.",
              "explode": true,
              "in": "query",
              "name": "billing_provider",
              "required": false,
              "schema": {
                "$ref": "#/components/schemas/BillingProviderType"
              },
              "style": "form"
            },
            {
              "description": "Include only hosts containing the specified billing account ID.",
              "explode": true,
              "in": "query",
              "name": "billing_account_id",
              "required": false,
              "schema": {
                "type": "string"
              },
              "style": "form"
            },
            {
              "description": "Include only hosts containing the specified display name. Passing an empty string behaves the same way as passing null",
              "explode": true,
              "in": "query",
              "name": "display_name_contains",
              "required": false,
              "schema": {
                "default": "",
                "type": "string"
              },
              "style": "form"
            },
            {
              "description": "Include only hosts for the specified category.",
              "explode": true,
              "in": "query",
              "name": "category",
              "required": false,
              "schema": {
                "$ref": "#/components/schemas/ReportCategory"
              },
              "style": "form"
            },
            {
              "description": "Defines the start of the report period. Dates should be provided in ISO 8601 format but the only accepted offset is UTC. E.g. 2017-07-21T17:32:28Z. Only applicable for OpenShift-dedicated-metrics and OpenShift-metrics products",
              "explode": true,
              "in": "query",
              "name": "beginning",
              "required": false,
              "schema": {
                "format": "date-time",
                "type": "string"
              },
              "style": "form"
            },
            {
              "description": "Defines the end of the report period. Dates should be provided in ISO 8601 format but the only accepted offset is UTC. E.g. 2017-07-21T17:32:28Z. Only applicable for OpenShift-dedicated-metrics and OpenShift-metrics products",
              "explode": true,
              "in": "query",
              "name": "ending",
              "required": false,
              "schema": {
                "format": "date-time",
                "type": "string"
              },
              "style": "form"
            },
            {
              "description": "What property to sort by (optional)",
              "explode": true,
              "in": "query",
              "name": "sort",
              "required": false,
              "schema": {
                "$ref": "#/components/schemas/InstanceReportSort"
              },
              "style": "form"
            },
            {
              "description": "Which direction to sort by (default: asc)",
              "explode": true,
              "in": "query",
              "name": "dir",
              "required": false,
              "schema": {
                "$ref": "#/components/schemas/SortDirection"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/InstanceResponse"
                  }
                }
              },
              "description": "The request for instances was successful."
            }
          },
          "tags": [
            "instances"
          ]
        }
      },
      "/instances/{id}/guests": {
        "description": "Operations for instance-id mappings.",
        "get": {
          "operationId": "getInstanceGuests",
          "parameters": [
            {
              "description": "The instance ID we wish to query",
              "explode": false,
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "The number of items to skip before starting to collect the result set",
              "explode": true,
              "in": "query",
              "name": "offset",
              "required": false,
              "schema": {
                "type": "integer"
              },
              "style": "form"
            },
            {
              "description": "The numbers of items to return",
              "explode": true,
              "in": "query",
              "name": "limit",
              "required": false,
              "schema": {
                "maximum": 100,
                "minimum": 1,
                "type": "integer"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/vnd.api+json": {
                  "example": {
                    "data": [
                      {
                        "display_name": "guest01.example.com",
                        "inventory_id": "d6214a0b-b344-4778-831c-d53dcacb2da3",
                        "last_seen": "2020-01-01T00:00:00Z",
                        "subscription_manager_id": "adafd9d5-5b00-42fa-a6c9-75801d45cc6d"
                      },
                      {
                        "display_name": "guest02.example.com",
                        "inventory_id": "9358e312-1c9f-42f4-8910-dcef6e970852",
                        "last_seen": "2020-01-01T00:00:00Z",
                        "subscription_manager_id": "b101a72f-1859-4489-acb8-d6d31c2578c4"
                      }
                    ],
                    "links": {
                      "first": "/api/rhsm-subscriptions/v1/instances/c5mu16smf1c22rn8e730/guests?offset=0&limit=5",
                      "last": "/api/rhsm-subscriptions/v1/instances/c5mu16smf1c22rn8e730/guests?offset=5&limit=5",
                      "next": "/api/rhsm-subscriptions/v1/instances/c5mu16smf1c22rn8e730/guests?offset=5&limit=5",
                      "previous": null
                    },
                    "meta": {
                      "count": 10
                    }
                  },
                  "schema": {
                    "$ref": "#/components/schemas/InstanceGuestReport"
                  }
                }
              },
              "description": "The request for a capacity report was successful."
            },
            "400": {
              "content": {
                "application/vnd.api+json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              },
              "description": "The server could could not process the current request."
            },
            "403": {
              "content": {
                "application/vnd.api+json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              },
              "description": "The request was valid, but the request was refused by the server."
            },
            "404": {
              "content": {
                "application/vnd.api+json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              },
              "description": "The requested resource was not found."
            },
            "500": {
              "content": {
                "application/vnd.api+json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              },
              "description": "An internal server error has occurred and is not recoverable."
            }
          },
          "summary": "Fetch guests for the instance id.",
          "tags": [
            "instances"
          ]
        }
      },
      "/openapi.json": {
        "get": {
          "description": "Get the OpenAPI spec in JSON format.",
          "operationId": "getOpenApiJson",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "description": "The request to get the OpenAPI JSON was successful."
            }
          },
          "tags": [
            "root"
          ]
        }
      },
      "/openapi.yaml": {
        "get": {
          "description": "Get the OpenAPI spec in YAML format.",
          "operationId": "getOpenApiYaml",
          "responses": {
            "200": {
              "content": {
                "application/x-yaml": {
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "description": "The request to get the OpenAPI YAML was successful."
            }
          },
          "tags": [
            "root"
          ]
        }
      },
      "/opt-in": {
        "delete": {
          "operationId": "deleteOptInConfig",
          "responses": {
            "204": {
              "description": "Successfully deleted the opt-in configuration for the accociated org"
            },
            "400": {
              "content": {
                "application/vnd.api+json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              },
              "description": "The server could could not process the current request."
            },
            "403": {
              "content": {
                "application/vnd.api+json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              },
              "description": "The request was valid, but the request was refused by the server."
            },
            "404": {
              "content": {
                "application/vnd.api+json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              },
              "description": "The requested resource was not found."
            },
            "500": {
              "content": {
                "application/vnd.api+json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              },
              "description": "An internal server error has occurred and is not recoverable."
            }
          },
          "summary": "Delete an opt-in config for the associated org. The org ID are pulled from the identity header."
        },
        "description": "Endpoint for opting into subscription watch.",
        "get": {
          "operationId": "getOptInConfig",
          "responses": {
            "200": {
              "content": {
                "application/vnd.api+json": {
                  "example": {
                    "data": {
                      "opt_in_complete": true,
                      "org": {
                        "created": "2017-08-04T17:32:05Z",
                        "last_updated": "2017-08-04T17:32:05Z",
                        "opt_in_type": "API",
                        "org_id": 1111
                      }
                    },
                    "meta": {
                      "org_id": 1111
                    }
                  },
                  "schema": {
                    "$ref": "#/components/schemas/OptInConfig"
                  }
                }
              },
              "description": "The request for the account's opt-in configuration was successful."
            },
            "400": {
              "content": {
                "application/vnd.api+json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              },
              "description": "The server could could not process the current request."
            },
            "403": {
              "content": {
                "application/vnd.api+json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              },
              "description": "The request was valid, but the request was refused by the server."
            },
            "404": {
              "content": {
                "application/vnd.api+json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              },
              "description": "The requested resource was not found."
            },
            "500": {
              "content": {
                "application/vnd.api+json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              },
              "description": "An internal server error has occurred and is not recoverable."
            }
          },
          "summary": "Get the opt-in configuration for the current account."
        },
        "put": {
          "operationId": "putOptInConfig",
          "responses": {
            "200": {
              "content": {
                "application/vnd.api+json": {
                  "example": {
                    "data": {
                      "opt_in_complete": true,
                      "org": {
                        "created": "2017-08-04T17:32:05Z",
                        "last_updated": "2017-08-04T17:32:05Z",
                        "opt_in_type": "API",
                        "org_id": 1111
                      }
                    },
                    "meta": {
                      "org_id": 1111
                    }
                  },
                  "schema": {
                    "$ref": "#/components/schemas/OptInConfig"
                  }
                }
              },
              "description": "The request for the account's opt-in configuration was successful."
            },
            "400": {
              "content": {
                "application/vnd.api+json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              },
              "description": "The server could could not process the current request."
            },
            "403": {
              "content": {
                "application/vnd.api+json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              },
              "description": "The request was valid, but the request was refused by the server."
            },
            "404": {
              "content": {
                "application/vnd.api+json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              },
              "description": "The requested resource was not found."
            },
            "500": {
              "content": {
                "application/vnd.api+json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              },
              "description": "An internal server error has occurred and is not recoverable."
            }
          },
          "summary": "Create/Update an account's opt-in configuration. Org ID are defined by the identity header."
        }
      },
      "/subscriptions/products/{product_id}": {
        "description": "Operations for total capacity by SKU for all of the org's active subscriptions for given Swatch product ID.",
        "get": {
          "operationId": "getSkuCapacityReport",
          "parameters": [
            {
              "description": "The ID for the product we wish to query",
              "explode": false,
              "in": "path",
              "name": "product_id",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/ProductId"
              },
              "style": "simple"
            },
            {
              "description": "The number of items to skip before starting to collect the result set",
              "explode": true,
              "in": "query",
              "name": "offset",
              "required": false,
              "schema": {
                "minimum": 0,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "description": "The numbers of items to return",
              "explode": true,
              "in": "query",
              "name": "limit",
              "required": false,
              "schema": {
                "minimum": 1,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "description": "The category to fetch data for",
              "explode": true,
              "in": "query",
              "name": "category",
              "required": false,
              "schema": {
                "$ref": "#/components/schemas/ReportCategory"
              },
              "style": "form"
            },
            {
              "description": "Include only capacity for the specified service level.",
              "explode": true,
              "in": "query",
              "name": "sla",
              "required": false,
              "schema": {
                "$ref": "#/components/schemas/ServiceLevelType"
              },
              "style": "form"
            },
            {
              "description": "Include only capacity for the specified usage level.",
              "explode": true,
              "in": "query",
              "name": "usage",
              "required": false,
              "schema": {
                "$ref": "#/components/schemas/UsageType"
              },
              "style": "form"
            },
            {
              "description": "Include only report data matching the specified billing provider",
              "explode": true,
              "in": "query",
              "name": "billing_provider",
              "required": false,
              "schema": {
                "$ref": "#/components/schemas/BillingProviderType"
              },
              "style": "form"
            },
            {
              "description": "Include only report data matching the specified billing account",
              "explode": true,
              "in": "query",
              "name": "billing_account_id",
              "required": false,
              "schema": {
                "$ref": "#/components/schemas/BillingAccountId"
              },
              "style": "form"
            },
            {
              "description": "Defines the start of the report period. Dates should be provided in ISO 8601 format but the only accepted offset is UTC. E.g. 2017-07-21T17:32:28Z",
              "explode": true,
              "in": "query",
              "name": "beginning",
              "required": false,
              "schema": {
                "format": "date-time",
                "type": "string"
              },
              "style": "form"
            },
            {
              "description": "Defines the end of the report period.  Defaults to the current time. Dates should be provided in UTC.",
              "explode": true,
              "in": "query",
              "name": "ending",
              "required": false,
              "schema": {
                "format": "date-time",
                "type": "string"
              },
              "style": "form"
            },
            {
              "description": "Filter subscriptions to those that contribute to a specific unit of measure",
              "explode": true,
              "in": "query",
              "name": "uom",
              "required": false,
              "schema": {
                "$ref": "#/components/schemas/Uom"
              },
              "style": "form"
            },
            {
              "description": "What property to sort by (optional)",
              "explode": true,
              "in": "query",
              "name": "sort",
              "required": false,
              "schema": {
                "$ref": "#/components/schemas/SkuCapacityReportSort"
              },
              "style": "form"
            },
            {
              "description": "Which direction to sort by (default: asc)",
              "explode": true,
              "in": "query",
              "name": "dir",
              "required": false,
              "schema": {
                "$ref": "#/components/schemas/SortDirection"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/vnd.api+json": {
                  "example": {
                    "data": [
                      {
                        "capacity": 3,
                        "hypervisor_capacity": 3,
                        "next_event_date": "2020-04-01T00:00:00Z",
                        "next_event_type": "Subscription Begin",
                        "product_name": "Red Hat Enterprise Linux Server, Premium (Physical and 4 Virtual Nodes)(L3 Only)",
                        "quantity": 3,
                        "service_level": "Premium",
                        "sku": "RH00011",
                        "subscriptions": [
                          {
                            "id": "1234567890",
                            "number": "1234567891"
                          },
                          {
                            "id": "1234567892",
                            "number": "1234567893"
                          },
                          {
                            "id": "1234567894",
                            "number": "1234567895"
                          }
                        ],
                        "total_capacity": 6,
                        "uom": "Sockets",
                        "usage": "Production"
                      },
                      {
                        "capacity": 3,
                        "hypervisor_capacity": 3,
                        "next_event_date": "2020-04-02T00:00:00Z",
                        "next_event_type": "Subscription Begin",
                        "product_name": "Red Hat Enterprise Linux Server",
                        "quantity": 3,
                        "service_level": "Self-Support",
                        "sku": "RH00010",
                        "subscriptions": [
                          {
                            "id": "1234567896",
                            "number": "1234567897"
                          },
                          {
                            "id": "1234567898",
                            "number": "1234567899"
                          },
                          {
                            "id": "1234567900",
                            "number": "1234567901"
                          }
                        ],
                        "total_capacity\"": 6,
                        "uom": "Sockets",
                        "usage": "Production"
                      },
                      {
                        "capacity": 6,
                        "hypervisor_capacity": 6,
                        "next_event_date": "2020-04-01T00:00:00Z",
                        "next_event_type": "Subscription End",
                        "product_name": "Red Hat Enterprise Linux Server, Premium",
                        "quantity": 3,
                        "service_level": "Premium",
                        "sku": "RH00009",
                        "subscriptions": [
                          {
                            "id": "1234567902",
                            "number": "1234567903"
                          },
                          {
                            "id": "1234567904",
                            "number": "1234567905"
                          },
                          {
                            "id": "1234567906",
                            "number": "1234567907"
                          }
                        ],
                        "total_capacity": 12,
                        "uom": "Cores",
                        "usage": "Production"
                      }
                    ],
                    "meta": {
                      "count": 3
                    }
                  },
                  "schema": {
                    "$ref": "#/components/schemas/SkuCapacityReport"
                  }
                }
              },
              "description": "The request for the account's subscription capacities was successful."
            },
            "400": {
              "content": {
                "application/vnd.api+json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              },
              "description": "The server could could not process the current request."
            },
            "403": {
              "content": {
                "application/vnd.api+json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              },
              "description": "The request was valid, but the request was refused by the server."
            },
            "404": {
              "content": {
                "application/vnd.api+json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              },
              "description": "The requested resource was not found."
            },
            "500": {
              "content": {
                "application/vnd.api+json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              },
              "description": "An internal server error has occurred and is not recoverable."
            }
          },
          "summary": "Returns the total capacity by SKU for all of the org's active subscriptions for given Swatch product ID.",
          "tags": [
            "subscriptions"
          ]
        }
      },
      "/tally/products/{product_id}": {
        "description": "Operations for a tally report of a specific account and product.",
        "get": {
          "deprecated": true,
          "description": "Deprecated: use /tally/products/{product_id}/{metric_id} instead",
          "operationId": "getTallyReport",
          "parameters": [
            {
              "description": "The ID for the product we wish to query",
              "explode": false,
              "in": "path",
              "name": "product_id",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/ProductId"
              },
              "style": "simple"
            },
            {
              "description": "The number of items to skip before starting to collect the result set",
              "explode": true,
              "in": "query",
              "name": "offset",
              "required": false,
              "schema": {
                "type": "integer"
              },
              "style": "form"
            },
            {
              "description": "The numbers of items to return",
              "explode": true,
              "in": "query",
              "name": "limit",
              "required": false,
              "schema": {
                "minimum": 1,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "description": "The level of granularity to return.",
              "explode": true,
              "in": "query",
              "name": "granularity",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/GranularityType"
              },
              "style": "form"
            },
            {
              "description": "Include only snapshots matching the specified service level.",
              "explode": true,
              "in": "query",
              "name": "sla",
              "required": false,
              "schema": {
                "$ref": "#/components/schemas/ServiceLevelType"
              },
              "style": "form"
            },
            {
              "description": "Include only snapshots matching the specified usage.",
              "explode": true,
              "in": "query",
              "name": "usage",
              "required": false,
              "schema": {
                "$ref": "#/components/schemas/UsageType"
              },
              "style": "form"
            },
            {
              "description": "Defines the start of the report period. Dates should be provided in ISO 8601 format but the only accepted offset is UTC. E.g. 2017-07-21T17:32:28Z",
              "explode": true,
              "in": "query",
              "name": "beginning",
              "required": true,
              "schema": {
                "format": "date-time",
                "type": "string"
              },
              "style": "form"
            },
            {
              "description": "Defines the end of the report period.  Defaults to the current time. Dates should be provided in UTC.",
              "explode": true,
              "in": "query",
              "name": "ending",
              "required": true,
              "schema": {
                "format": "date-time",
                "type": "string"
              },
              "style": "form"
            },
            {
              "explode": true,
              "in": "query",
              "name": "use_running_totals_format",
              "required": false,
              "schema": {
                "default": false,
                "type": "boolean"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/vnd.api+json": {
                  "example": {
                    "data": [
                      {
                        "cores": 40,
                        "date": "2017-08-04T17:32:05Z",
                        "hypervisor_cores": 20,
                        "hypervisor_instance_count": 5,
                        "hypervisor_sockets": 4,
                        "instance_count": 10,
                        "physical_cores": 20,
                        "physical_instance_count": 5,
                        "physical_sockets": 4,
                        "sockets": 20
                      },
                      {
                        "cores": 14,
                        "date": "2017-08-05T17:31:04Z",
                        "hypervisor_cores": 0,
                        "hypervisor_instance_count": 0,
                        "hypervisor_sockets": 0,
                        "instance_count": 7,
                        "physical_cores": 14,
                        "physical_instance_count": 8,
                        "physical_sockets": 8,
                        "sockets": 8
                      },
                      {
                        "cloud_cores": 8,
                        "cloud_instance_count": 4,
                        "cloud_sockets": 4,
                        "cores": 28,
                        "date": "2017-08-06T17:32:03Z",
                        "hypervisor_cores": 20,
                        "hypervisor_instance_count": 20,
                        "hypervisor_sockets": 10,
                        "instance_count": 24,
                        "physical_cores": 0,
                        "physical_instance_count": 0,
                        "physical_sockets": 0,
                        "sockets": 14
                      }
                    ],
                    "links": {
                      "first": "/api/rhsm-subscriptions/v1/tally/products/RHEL%20for%20x86?granularity=DAILY&sla=Premium&beginning=2017-08-01T17%3A32%3A28Z&ending=2017-08-31T17%3A32%3A28Z&offset=0&limit=5",
                      "last": "/api/rhsm-subscriptions/v1/tally/products/RHEL%20for%20x86?granularity=DAILY&sla=Premium&beginning=2017-08-01T17%3A32%3A28Z&ending=2017-08-31T17%3A32%3A28Z&offset=5&limit=5",
                      "next": "/api/rhsm-subscriptions/v1/tally/products/RHEL%20for%20x86?granularity=DAILY&sla=Premium&beginning=2017-08-01T17%3A32%3A28Z&ending=2017-08-31T17%3A32%3A28Z&offset=5&limit=5",
                      "previous": null
                    },
                    "meta": {
                      "count": 10,
                      "granularity": "Daily",
                      "product": "RHEL Server",
                      "service_level": "Premium",
                      "total_core_hours": 30,
                      "total_instance_hours": 20,
                      "usage": "Production"
                    }
                  },
                  "schema": {
                    "$ref": "#/components/schemas/TallyReport"
                  }
                }
              },
              "description": "The request for a tally report was successful."
            },
            "400": {
              "content": {
                "application/vnd.api+json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              },
              "description": "The server could could not process the current request."
            },
            "403": {
              "content": {
                "application/vnd.api+json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              },
              "description": "The request was valid, but the request was refused by the server."
            },
            "404": {
              "content": {
                "application/vnd.api+json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              },
              "description": "The requested resource was not found."
            },
            "500": {
              "content": {
                "application/vnd.api+json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              },
              "description": "An internal server error has occurred and is not recoverable."
            }
          },
          "summary": "(Deprecated for removal after 2022-05-01). Fetch a tally report for an account and product. If page header parameters are omitted, then any gaps in the resulting report snapshots are filled with a default fake snapshot.",
          "tags": [
            "tally"
          ]
        }
      },
      "/tally/products/{product_id}/{metric_id}": {
        "description": "Operations on a data set of a given tally report.",
        "get": {
          "description": "If the report is requested in a running total format, each temporal unit of the report period (days, hours, etc.) will give the running total since the start of the report period and set the has_data field as true, whether or not there is data that lands in that specific temporal unit.  However, if the report period stretches into the future, temporal units in the future will have a value of zero and have has_data set to false.\nFor example, if we have daily values of 0, 1, 0, 3, 0 and request a running total report ending two days from now, we'll get back '(0, true), (1, true), (1, true), (4, true), (4, true), (0, false), (0, false)'. ",
          "operationId": "getTallyReportData",
          "parameters": [
            {
              "description": "The product to fetch graph data for",
              "explode": false,
              "in": "path",
              "name": "product_id",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/ProductId"
              },
              "style": "simple"
            },
            {
              "description": "The metric ID to fetch graph data for",
              "explode": false,
              "in": "path",
              "name": "metric_id",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/MetricId"
              },
              "style": "simple"
            },
            {
              "description": "The category to fetch graph data for (optional)",
              "explode": true,
              "in": "query",
              "name": "category",
              "required": false,
              "schema": {
                "$ref": "#/components/schemas/ReportCategory"
              },
              "style": "form"
            },
            {
              "description": "Include only report data matching the specified granularity.",
              "explode": true,
              "in": "query",
              "name": "granularity",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/GranularityType"
              },
              "style": "form"
            },
            {
              "description": "Include only report data matching the specified service level.",
              "explode": true,
              "in": "query",
              "name": "sla",
              "required": false,
              "schema": {
                "$ref": "#/components/schemas/ServiceLevelType"
              },
              "style": "form"
            },
            {
              "description": "Include only report data matching the specified usage.",
              "explode": true,
              "in": "query",
              "name": "usage",
              "required": false,
              "schema": {
                "$ref": "#/components/schemas/UsageType"
              },
              "style": "form"
            },
            {
              "description": "Include only report data matching the specified billing provider",
              "explode": true,
              "in": "query",
              "name": "billing_provider",
              "required": false,
              "schema": {
                "$ref": "#/components/schemas/BillingProviderType"
              },
              "style": "form"
            },
            {
              "description": "Include only report data matching the specified billing account",
              "explode": true,
              "in": "query",
              "name": "billing_account_id",
              "required": false,
              "schema": {
                "$ref": "#/components/schemas/BillingAccountId"
              },
              "style": "form"
            },
            {
              "description": "Defines the start of the report period. Dates should be provided in ISO 8601 format but the only accepted offset is UTC. E.g. 2017-07-21T17:32:28Z",
              "explode": true,
              "in": "query",
              "name": "beginning",
              "required": true,
              "schema": {
                "format": "date-time",
                "type": "string"
              },
              "style": "form"
            },
            {
              "description": "Defines the end of the report period.  Defaults to the current time. Dates should be provided in UTC.",
              "explode": true,
              "in": "query",
              "name": "ending",
              "required": true,
              "schema": {
                "format": "date-time",
                "type": "string"
              },
              "style": "form"
            },
            {
              "description": "The number of items to skip before starting to collect the result set",
              "explode": true,
              "in": "query",
              "name": "offset",
              "required": false,
              "schema": {
                "type": "integer"
              },
              "style": "form"
            },
            {
              "description": "The numbers of items to return",
              "explode": true,
              "in": "query",
              "name": "limit",
              "required": false,
              "schema": {
                "minimum": 1,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "description": "Whether to report the total for each temporal unit of the report period individually or as a running total since the beginning of the report period.",
              "explode": true,
              "in": "query",
              "name": "use_running_totals_format",
              "required": false,
              "schema": {
                "default": false,
                "type": "boolean"
              },
              "style": "form"
            },
            {
              "description": "Include only report data matching the specified billing_category.",
              "explode": true,
              "in": "query",
              "name": "billing_category",
              "required": false,
              "schema": {
                "$ref": "#/components/schemas/BillingCategory"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/vnd.api+json": {
                  "schema": {
                    "$ref": "#/components/schemas/TallyReportData"
                  }
                }
              },
              "description": "The request for a tally report was successful."
            },
            "400": {
              "content": {
                "application/vnd.api+json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              },
              "description": "The server could could not process the current request."
            },
            "403": {
              "content": {
                "application/vnd.api+json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              },
              "description": "The request was valid, but the request was refused by the server."
            },
            "404": {
              "content": {
                "application/vnd.api+json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              },
              "description": "The requested resource was not found."
            },
            "500": {
              "content": {
                "application/vnd.api+json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              },
              "description": "An internal server error has occurred and is not recoverable."
            }
          },
          "summary": "Fetch tally report data for an account and product.",
          "tags": [
            "tally"
          ]
        }
      },
      "/version": {
        "description": "Provides version and build information about the deployed application.",
        "get": {
          "operationId": "getVersion",
          "responses": {
            "200": {
              "content": {
                "application/vnd.api+json": {
                  "schema": {
                    "$ref": "#/components/schemas/VersionInfo"
                  }
                }
              },
              "description": "The request for version information was successful."
            },
            "500": {
              "content": {
                "application/vnd.api+json": {
                  "schema": {
                    "$ref": "#/components/schemas/Errors"
                  }
                }
              },
              "description": "An internal server error has occurred and is not recoverable."
            }
          },
          "summary": "Request version and build information about the deployed application.",
          "tags": [
            "version"
          ]
        }
      }
    },
    "security": [
      {
        "3ScaleIdentity": []
      }
    ],
    "servers": [
      {
        "url": "/{PATH_PREFIX}/{APP_NAME}/v1",
        "variables": {
          "APP_NAME": {
            "default": "rhsm-subscriptions"
          },
          "PATH_PREFIX": {
            "default": "api"
          }
        }
      },
      {
        "url": "https://{HOSTNAME}/{PATH_PREFIX}/{APP_NAME}/v1",
        "variables": {
          "APP_NAME": {
            "default": "rhsm-subscriptions"
          },
          "HOSTNAME": {
            "default": "ci.cloud.redhat.com",
            "enum": [
              "ci.cloud.redhat.com",
              "qa.cloud.redhat.com",
              "stage.cloud.redhat.com",
              "cloud.redhat.com"
            ]
          },
          "PATH_PREFIX": {
            "default": "api"
          }
        }
      }
    ]
  }
}