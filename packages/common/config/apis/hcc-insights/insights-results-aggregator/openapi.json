{
  "components": {
    "parameters": {
      "clusterId": {
        "description": "ID of the cluster which must conform to UUID format.",
        "example": "34c3ecc5-624a-49a5-bab8-4fdc5e51a266",
        "in": "path",
        "name": "clusterId",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/clusterId"
        }
      },
      "errorKey": {
        "description": "ID of the error key",
        "example": "ERROR_COOL_NAME",
        "in": "path",
        "name": "errorKey",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "osdEligible": {
        "description": "If true, only OSD eligible rules will be sent.",
        "in": "query",
        "name": "osd_eligible",
        "schema": {
          "default": false,
          "type": "boolean"
        }
      },
      "ruleId": {
        "description": "ID of a rule.",
        "example": "some.python.module",
        "in": "path",
        "name": "ruleId",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "responses": {
      "status": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "status": {
                  "example": "ok",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "description": "Status ok"
      },
      "unavailable": {
        "content": {
          "text/plain": {}
        },
        "description": "Content service is unavailable"
      }
    },
    "schemas": {
      "clusterId": {
        "description": "ID of cluster in UUID format.",
        "format": "uuid",
        "maxLength": 36,
        "minLength": 36,
        "type": "string"
      },
      "overviewResponse": {
        "properties": {
          "overview": {
            "properties": {
              "clusters_hit": {
                "description": "Number of clusters with at least 1 Insights hit.",
                "example": 1,
                "type": "integer"
              },
              "hit_by_risk": {
                "additionalProperties": {
                  "description": "Number of clusters hit by rules for each criticality",
                  "example": 1,
                  "type": "integer"
                },
                "type": "object"
              },
              "hit_by_tag": {
                "additionalProperties": {
                  "description": "Number of clusters hit by rules for each category",
                  "example": 1,
                  "type": "integer"
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "status": {
            "example": "ok",
            "type": "string"
          }
        },
        "type": "object"
      },
      "reportData": {
        "description": "Array of ruleHit instances",
        "example": {
          "created_at": "2020-04-08T00:42:00Z",
          "description": "Introducing Insights for Red Hat OpenShift Container Platform",
          "details": "Red Hat Insights for OpenShift is a proactive management solution. It provides ongoing infrastructure analyses of your Red Hat OpenShift Container Platform 4.2 and later installations. Red Hat Insights helps you identify, prioritize, and resolve risks to security, performance, availability, and stability before they become urgent issues.\nRed Hat Insights for OpenShift uses the Remote Health Monitoring feature of OpenShift 4. The health checks are created by Red Hat subject matter experts and assessed according to severity and impact.\nThis is an example  recommendation that you can safely ignore. To disable it, click  the triple-dot menu button next to the header, and select Disable.\n\n[Knowledgebase Article](https://access.redhat.com/search/#/knowledgebase)\n\n",
          "disable_feedback": "",
          "disabled": false,
          "disabled_at": "",
          "extra_data": {
            "error_key": "TUTORIAL_ERROR",
            "type": "rule"
          },
          "internal": false,
          "reason": "",
          "resolution": "",
          "rule_id": "ccx_rules_ocm.tutorial_rule.report",
          "tags": [
            "openshift",
            "service_availability"
          ],
          "total_risk": 1,
          "user_vote": 0
        },
        "properties": {
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "description": "The title of the rule, a short description.",
            "type": "string"
          },
          "details": {
            "description": "Details of the rule - templates rendered on frontend.",
            "type": "string"
          },
          "disable_feedback": {
            "type": "string"
          },
          "disabled": {
            "description": "If this rule result disabled or not. This field can be used in the UI to show only specific set of rules results.",
            "type": "boolean"
          },
          "disabled_at": {
            "type": "string"
          },
          "extra_data": {
            "description": "Used as templating data for other content (details, resolution, etc.), has varying structure depending on the rules in the report.",
            "type": "object"
          },
          "internal": {
            "type": "boolean"
          },
          "more_info": {
            "type": "string"
          },
          "reason": {
            "description": "Reason for the issue, giving the user more accurate description of the cause.",
            "type": "string"
          },
          "resolution": {
            "description": "Resolution steps of the issue, possibly linking to a resolution article in the knowledge base.",
            "type": "string"
          },
          "rule_id": {
            "description": "ID of a rule.",
            "type": "string"
          },
          "tags": {
            "description": "List of tags that the rule contains, forming rule groups.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "total_risk": {
            "description": "Total risk - calculated from rule impact and likelihood.",
            "enum": [
              1,
              2,
              3,
              4
            ],
            "type": "integer"
          },
          "user_vote": {
            "description": "User vote - value of user voting. -1 is dislike vote, 0 is no vote, 1 is like vote.",
            "enum": [
              "-1",
              "0",
              "1"
            ],
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "reportsComponent": {
        "properties": {
          "component": {
            "type": "string"
          },
          "details": {
            "type": "object"
          },
          "info_id": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "links": {
            "additionalProperties": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "type": "object"
          },
          "rule_id": {
            "type": "string"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "reportsResponse": {
        "description": "Reports for a set of clusters",
        "properties": {
          "clusters": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "errors": {
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "generated_at": {
            "type": "string"
          },
          "reports": {
            "additionalProperties": {
              "properties": {
                "analysis_metadata": {
                  "properties": {
                    "execution_context": {
                      "type": "string"
                    },
                    "finish": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "plugin_sets": {
                      "additionalProperties": {
                        "properties": {
                          "commit": {
                            "nullable": true,
                            "type": "string"
                          },
                          "version": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "example": {
                        "insights-core": {
                          "commit": "placeholder",
                          "version": "insights-core-3.0.176-1"
                        }
                      },
                      "type": "object"
                    },
                    "start": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "fingerprints": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "info": {
                  "items": {
                    "$ref": "#/components/schemas/reportsComponent"
                  },
                  "type": "array"
                },
                "reports": {
                  "items": {
                    "$ref": "#/components/schemas/reportsComponent"
                  },
                  "type": "array"
                },
                "skips": {
                  "items": {
                    "example": {
                      "details": "All: ['ccx_rules_ocp.external.rules.container_max_root_partition_size.check_container_runtime_config'] Any: ",
                      "reason": "MISSING_REQUIREMENTS",
                      "rule_fqdn": "ccx_rules_ocp.external.rules.container_max_root_partition_size.report",
                      "type": "skip"
                    },
                    "properties": {
                      "details": {
                        "type": "string"
                      },
                      "reason": {
                        "type": "string"
                      },
                      "rule_fqdn": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "title": "Root Type for reportsSkipsDetails",
                    "type": "object"
                  },
                  "type": "array"
                },
                "system": {
                  "properties": {
                    "hostname": {
                      "nullable": true,
                      "type": "string"
                    },
                    "metadata": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "object"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ruleContent": {
        "properties": {
          "HasReason": {
            "type": "boolean"
          },
          "error_keys": {
            "additionalProperties": {
              "$ref": "#/components/schemas/ruleContentErrorKey"
            },
            "type": "object"
          },
          "generic": {
            "type": "string"
          },
          "more_info": {
            "type": "string"
          },
          "plugin": {
            "$ref": "#/components/schemas/ruleContentPlugin"
          },
          "reason": {
            "type": "string"
          },
          "resolution": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ruleContentErrorKey": {
        "properties": {
          "HasReason": {
            "type": "boolean"
          },
          "generic": {
            "type": "string"
          },
          "metadata": {
            "properties": {
              "description": {
                "type": "string"
              },
              "impact": {
                "type": "string"
              },
              "likelihood": {
                "enum": [
                  0,
                  1,
                  2,
                  3,
                  4
                ],
                "type": "integer"
              },
              "publish_date": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "tags": {
                "items": {
                  "type": "string"
                },
                "nullable": true,
                "type": "array"
              }
            },
            "type": "object"
          },
          "more_info": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          },
          "resolution": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "total_risk": {
            "enum": [
              0,
              1,
              2,
              3,
              4
            ],
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ruleContentPlugin": {
        "properties": {
          "name": {
            "type": "string"
          },
          "node_id": {
            "type": "string"
          },
          "product_code": {
            "type": "string"
          },
          "python_module": {
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "info": {
    "contact": {},
    "description": "Aggregation service for the results of running Insights rules.",
    "title": "Insights Results Aggregator",
    "version": "1.0.0"
  },
  "openapi": "3.0.0",
  "paths": {
    "/clusters/reports": {
      "post": {
        "description": "Reports that are going to be returned are specified by list of cluster IDs that is part of request body.",
        "operationId": "getReportsForClustersPost",
        "requestBody": {
          "content": {
            "application/json": {
              "example": "{\"clusters\": [\"34c3ecc5-624a-49a5-bab8-4fdc5e51a266\"]}",
              "schema": {
                "properties": {
                  "clusters": {
                    "items": {
                      "$ref": "#/components/schemas/clusterId"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "List of cluster IDs. Each ID must conform to UUID format.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reportsResponse"
                }
              }
            },
            "description": "Latest available report for the given list of cluster IDs. Returns rules and their descriptions that were hit by the cluster."
          },
          "400": {
            "description": "Invalid request, usually caused when some cluster belongs to different organization."
          }
        },
        "summary": "Returns the latest reports for the given list of clusters.",
        "tags": [
          "prod"
        ]
      }
    },
    "/clusters/{clusterId}/report": {
      "get": {
        "description": "The report is specified by the cluster ID from params and information about the org_id and user_id is taken from the token. The latest report available for the given combination will be returned.",
        "operationId": "getReportForCluster",
        "parameters": [
          {
            "$ref": "#/components/parameters/clusterId"
          },
          {
            "$ref": "#/components/parameters/osdEligible"
          },
          {
            "description": "If true, disabled rules will be sent too.",
            "in": "query",
            "name": "get_disabled",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Response data type for GET /clusters/{clusterId}/report endpoint",
                  "properties": {
                    "report": {
                      "properties": {
                        "data": {
                          "items": {
                            "$ref": "#/components/schemas/reportData"
                          },
                          "type": "array"
                        },
                        "meta": {
                          "example": {
                            "count": 9,
                            "last_checked_at": "2020-12-08T09:45:23Z"
                          },
                          "properties": {
                            "count": {
                              "format": "int32",
                              "type": "integer"
                            },
                            "last_checked_at": {
                              "description": "[Optional] Timestamp of the last analysis",
                              "format": "date-time",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "example": "ok",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Latest available report for the given organization and cluster combination. Returns rules and their descriptions that were hit by the cluster. Disabled rules are ommitted by default unless the get_disabled query param is provided."
          },
          "404": {
            "description": "Resource not found, usually caused when the cluster ID is not registered and request come from Insights Operator."
          }
        },
        "summary": "Returns the latest insights report for a cluster.",
        "tags": [
          "prod"
        ]
      }
    },
    "/clusters/{clusterId}/report/info": {
      "get": {
        "description": "The report is specified by the cluster ID. Metainformation about the latest report available for the given combination will be returned.",
        "operationId": "getReportMetainfoForCluster",
        "parameters": [
          {
            "$ref": "#/components/parameters/clusterId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metainfo": {
                      "properties": {
                        "count": {
                          "description": "Number of rules that were hit by the cluster. -1 is returned when no rules are defined for the cluster.",
                          "example": "1",
                          "format": "int32",
                          "type": "integer"
                        },
                        "last_checked_at": {
                          "description": "[Optional] Timestamp when the report has been produced.",
                          "example": "2020-01-23T16:15:59.478901889Z",
                          "format": "date-time",
                          "type": "string"
                        },
                        "stored_at": {
                          "description": "Timestamp when the report has been written into database.",
                          "example": "2020-01-23T16:15:59.478901889Z",
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "example": "ok",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Metainformation about the latest available report for the given organization and cluster combination."
          }
        },
        "summary": "Returns metainformations about the latest report for the given cluster.",
        "tags": [
          "prod"
        ]
      }
    },
    "/clusters/{clusterId}/rules/{ruleIdAndErrorKey}/report": {
      "get": {
        "description": "The rule is specified by the cluster ID and rule ID from params and information about the org_id and user_id is taken from the token. The latest rule report available for the given combination will be returned.",
        "operationId": "getSingleReportForCluster",
        "parameters": [
          {
            "$ref": "#/components/parameters/clusterId"
          },
          {
            "description": "ruleId and errorKey separated by \"|\"",
            "in": "path",
            "name": "ruleIdAndErrorKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/osdEligible"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Response data type for GET /clusters/{clusterId}/rules/{ruleIdAndErrorKey}/report endpoint",
                  "properties": {
                    "report": {
                      "$ref": "#/components/schemas/reportData"
                    },
                    "status": {
                      "example": "ok",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Latest available rule report for the given organization, cluster combination and rule ID. Returns rule and it description that were hit by the cluster."
          }
        },
        "summary": "Returns the latest single rule report for a cluster that contains information and content.",
        "tags": [
          "prod"
        ]
      }
    },
    "/clusters/{clusterId}/rules/{ruleId}/error_key/{errorKey}/disable": {
      "put": {
        "description": "Disables a rule (ruleId) for cluster (clusterId) for current organization/user",
        "operationId": "disableRule",
        "parameters": [
          {
            "$ref": "#/components/parameters/clusterId"
          },
          {
            "$ref": "#/components/parameters/ruleId"
          },
          {
            "$ref": "#/components/parameters/errorKey"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/status"
          },
          "400": {
            "description": "Invalid request, usually caused when some cluster belongs to different organization."
          },
          "404": {
            "description": "Resource not found, usually caused when the rule ID and error key combination doesn't exist in the content service"
          }
        },
        "summary": "Disables a rule/health check recommendation for specified cluster",
        "tags": [
          "rule",
          "prod"
        ]
      }
    },
    "/clusters/{clusterId}/rules/{ruleId}/error_key/{errorKey}/disable_feedback": {
      "post": {
        "description": "Returns rule/health check's disable feedback",
        "operationId": "disableRuleFeedback",
        "parameters": [
          {
            "$ref": "#/components/parameters/clusterId"
          },
          {
            "$ref": "#/components/parameters/ruleId"
          },
          {
            "$ref": "#/components/parameters/errorKey"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "message": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "example": "test",
                      "type": "string"
                    },
                    "status": {
                      "example": "ok",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Status ok"
          },
          "400": {
            "description": "Invalid request, usually caused when some cluster belongs to different organization."
          },
          "404": {
            "description": "Resource not found, usually caused when the rule ID and error key combination doesn't exist in the content service"
          }
        },
        "summary": "Returns rule/health check's disable feedback",
        "tags": [
          "rule",
          "prod"
        ]
      }
    },
    "/clusters/{clusterId}/rules/{ruleId}/error_key/{errorKey}/dislike": {
      "put": {
        "description": "Puts dislike for the rule(ruleId) with cluster(clusterId) for current user(from auth token)",
        "operationId": "addDislikeToRule",
        "parameters": [
          {
            "$ref": "#/components/parameters/clusterId"
          },
          {
            "$ref": "#/components/parameters/ruleId"
          },
          {
            "$ref": "#/components/parameters/errorKey"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/status"
          },
          "400": {
            "description": "Invalid request, usually caused when some cluster belongs to different organization."
          },
          "404": {
            "description": "Resource not found, usually caused when the rule ID and error key combination doesn't exist in the content service"
          }
        },
        "summary": "Puts dislike for the rule with cluster for current user",
        "tags": [
          "rule",
          "prod"
        ]
      }
    },
    "/clusters/{clusterId}/rules/{ruleId}/error_key/{errorKey}/enable": {
      "put": {
        "description": "Enables a rule (ruleId) for cluster (clusterId) for current organization/user",
        "operationId": "enableRule",
        "parameters": [
          {
            "$ref": "#/components/parameters/clusterId"
          },
          {
            "$ref": "#/components/parameters/ruleId"
          },
          {
            "$ref": "#/components/parameters/errorKey"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/status"
          },
          "400": {
            "description": "Invalid request, usually caused when some cluster belongs to different organization."
          },
          "404": {
            "description": "Resource not found, usually caused when the rule ID and error key combination doesn't exist in the content service"
          }
        },
        "summary": "Re-enables a rule/health check recommendation for specified cluster",
        "tags": [
          "rule",
          "prod"
        ]
      }
    },
    "/clusters/{clusterId}/rules/{ruleId}/error_key/{errorKey}/like": {
      "put": {
        "description": "Puts like for the rule(ruleId) with cluster(clusterId) for current user(from auth token)",
        "operationId": "addLikeToRule",
        "parameters": [
          {
            "$ref": "#/components/parameters/clusterId"
          },
          {
            "$ref": "#/components/parameters/ruleId"
          },
          {
            "$ref": "#/components/parameters/errorKey"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/status"
          },
          "400": {
            "description": "Invalid request, usually caused when some cluster belongs to different organization."
          },
          "404": {
            "description": "Resource not found, usually caused when the rule ID and error key combination doesn't exist in the content service"
          }
        },
        "summary": "Puts like for the rule with cluster for current user",
        "tags": [
          "rule",
          "prod"
        ]
      }
    },
    "/clusters/{clusterId}/rules/{ruleId}/error_key/{errorKey}/reset_vote": {
      "put": {
        "description": "Resets vote for the rule(ruleId) with cluster(clusterId) for current user(from auth token)",
        "operationId": "resetVoteForRule",
        "parameters": [
          {
            "$ref": "#/components/parameters/clusterId"
          },
          {
            "$ref": "#/components/parameters/ruleId"
          },
          {
            "$ref": "#/components/parameters/errorKey"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/status"
          },
          "400": {
            "description": "Invalid request, usually caused when some cluster belongs to different organization."
          },
          "404": {
            "description": "Resource not found, usually caused when the rule ID and error key combination doesn't exist in the content service"
          }
        },
        "summary": "Resets vote for the rule with cluster for current user",
        "tags": [
          "rule",
          "prod"
        ]
      }
    },
    "/clusters/{clusterList}/reports": {
      "get": {
        "description": "Reports that are going to be returned are specified by list of cluster IDs that is part of path.",
        "operationId": "getReportsForClusters",
        "parameters": [
          {
            "description": "A comma separated list of cluster IDs. Each ID must conform to UUID format. An example: `34c3ecc5-624a-49a5-bab8-4fdc5e51a266.",
            "example": "34c3ecc5-624a-49a5-bab8-4fdc5e51a266",
            "in": "path",
            "name": "clusterList",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/components/schemas/clusterId"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reportsResponse"
                }
              }
            },
            "description": "Latest available report for the given list of cluster IDs. Returns rules and their descriptions that were hit by the cluster."
          },
          "400": {
            "description": "Invalid request, usually caused when some cluster belongs to different organization."
          }
        },
        "summary": "Returns the latest reports for the given list of clusters.",
        "tags": [
          "prod"
        ]
      }
    },
    "/content": {
      "get": {
        "description": "The static content is taken from the cache periodically updated from the content service",
        "operationId": "getContent",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "content": {
                      "items": {
                        "$ref": "#/components/schemas/ruleContent"
                      },
                      "type": "array"
                    },
                    "status": {
                      "example": "ok",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "A JSON object with the content."
          }
        },
        "summary": "Get all static content",
        "tags": [
          "prod"
        ]
      }
    },
    "/groups": {
      "get": {
        "description": "This simply redirects to an endpoint of the same name of a service called insights-operator-service",
        "operationId": "getRuleGroups",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "groups": {
                      "items": {
                        "properties": {
                          "description": {
                            "type": "string"
                          },
                          "tags": {
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "status": {
                      "example": "ok",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "A JSON array of groups."
          },
          "503": {
            "content": {
              "text/plain": {}
            },
            "description": "Content service is unavailable"
          }
        },
        "summary": "Get all rule groups and their relevant information",
        "tags": [
          "prod"
        ]
      }
    },
    "/info": {
      "get": {
        "description": "InfoEndpoint returns basic information about Smart Proxy, Insights Results Aggregator, and Content Service version, utils repository version, commit hash etc.",
        "operationId": "InfoEndpoint",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "info": {
                      "properties": {
                        "Aggregator": {
                          "additionalProperties": {
                            "type": "string"
                          },
                          "type": "object"
                        },
                        "ContentService": {
                          "additionalProperties": {
                            "type": "string"
                          },
                          "type": "object"
                        },
                        "SmartProxy": {
                          "additionalProperties": {
                            "type": "string"
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "example": "ok",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "An object containing information about Smart Proxy, Insights Results Aggregator, and Content Service."
          }
        },
        "summary": "Returns basic information about Smart Proxy, Insights Results Aggregator, and Content Service."
      }
    },
    "/metrics": {
      "get": {
        "description": "Set of metrics provided by insights-operator-utils library providing total number of requests counter, API endpoints response times, and counter of HTTP status code responses. Additionally it is possible to consume all metrics provided by Go runtime. These metrics start with go_ and process_ prefixes.",
        "operationId": "getMetrics",
        "responses": {
          "200": {
            "content": {
              "text/plain": {}
            },
            "description": "Default response containing all metrics in semi-structured text format"
          }
        },
        "summary": "Read all metrics exposed by this service"
      }
    },
    "/openapi.json": {
      "get": {
        "description": "The OpenAPI specification of this REST API service that is represented in formatted and human-readable JSON is available under this endpoint.",
        "operationId": "getOpenApi",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "info": {
                      "properties": {
                        "description": {
                          "type": "string"
                        },
                        "title": {
                          "type": "string"
                        },
                        "version": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "openapi": {
                      "type": "string"
                    },
                    "paths": {
                      "description": "Available paths and their descriptions.",
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "A JSON containing the OpenAPI specification for this service."
          }
        },
        "summary": "Returns the OpenAPI specification JSON."
      }
    },
    "/org_overview": {
      "get": {
        "description": "Retrieves an overview data about the clusters being hit by rules. The cluster list is retrieved from the AMS API. Takes into account managed clusters and rules, acknowledged rules as well as disabled clusters.",
        "operationId": "getOverviewForOrganization",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/overviewResponse"
                }
              }
            },
            "description": "Summary of results by cluster"
          }
        },
        "summary": "Retrieve an overview of rule hits affecting all clusters in an organization. Organization ID is retrieved from the auth token.",
        "tags": [
          "prod"
        ]
      },
      "post": {
        "description": "DEPRACATED: Use GET instead. Retrieves an overview data about the clusters being hit by rules. This method doesn't take into account managed clusters, rules that were acked or clusters that were disabled. For this functionality, use GET method.",
        "operationId": "postOverviewForOrganization",
        "requestBody": {
          "content": {
            "application/json": {
              "example": "34c3ecc5-624a-49a5-bab8-4fdc5e51a266",
              "schema": {
                "properties": {
                  "clusters": {
                    "items": {
                      "$ref": "#/components/schemas/clusterId"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "List of cluster IDs. Each ID must conform to UUID format.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/overviewResponse"
                }
              }
            },
            "description": "Status ok"
          }
        },
        "summary": "DEPRACATED: Use GET instead. Retrieve an overview of rule hits affecting all clusters in an organization. Organization ID is retrieved from the auth token.",
        "tags": [
          "prod"
        ]
      }
    },
    "/organizations/{orgId}/clusters": {
      "get": {
        "description": "Returns a list of clusters, ie. cluster IDs, that are associated with the specified organization ID. Please note that there is 1:N organization to cluster mapping, ie. one cluster belongs exactly to one organization.",
        "operationId": "getClustersForOrganization",
        "parameters": [
          {
            "description": "ID of the requested organization.",
            "in": "path",
            "name": "orgId",
            "required": true,
            "schema": {
              "format": "int64",
              "minimum": 0,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "clusters": {
                      "items": {
                        "$ref": "#/components/schemas/clusterId"
                      },
                      "type": "array"
                    },
                    "status": {
                      "example": "ok",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "A JSON array of clusters that belong to the specified organization."
          }
        },
        "summary": "Returns a list of clusters associated with the specified organization ID.",
        "tags": [
          "prod"
        ]
      }
    },
    "/rule_ids": {
      "get": {
        "description": "Returns a list of the names of the rules. Rule name consist of its ID represented as a string.",
        "operationId": "getRuleIDs",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "rules": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "status": {
                      "example": "ok",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "A JSON array of all the rule IDs."
          }
        },
        "summary": "Returns the rule IDs of all the rules.",
        "tags": [
          "prod"
        ]
      }
    },
    "/rules/{ruleId}/content": {
      "get": {
        "description": "The static content is taken from the cache periodically updated from the content service",
        "operationId": "getContentForRule",
        "parameters": [
          {
            "$ref": "#/components/parameters/ruleId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "content": {
                      "$ref": "#/components/schemas/ruleContent"
                    },
                    "status": {
                      "example": "ok",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "A JSON object with the content."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "example": "Item not found in the storage",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Rule ID is not available"
          },
          "503": {
            "$ref": "#/components/responses/unavailable"
          }
        },
        "summary": "Get all static content for the given ruleId",
        "tags": [
          "prod"
        ]
      }
    }
  }
}