{
  "extras": {},
  "openapi": {
    "components": {
      "parameters": {
        "assignmentRuleId": {
          "description": "assignment-rule ID.",
          "in": "path",
          "name": "assignment_rule_id",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/NonStrictUUID"
          }
        },
        "assignmentRuleIdList": {
          "description": "A comma-separated list of assignment-rule IDs.",
          "in": "path",
          "name": "assignment_rule_id_list",
          "required": true,
          "schema": {
            "items": {
              "$ref": "#/components/schemas/NonStrictUUID"
            },
            "type": "array"
          }
        },
        "assignmentRuleName": {
          "description": "Filter by assignment-rule name",
          "in": "query",
          "name": "name",
          "required": false,
          "schema": {
            "type": "string"
          }
        },
        "assignmentRuleOrderByParam": {
          "description": "Ordering field name",
          "in": "query",
          "name": "order_by",
          "required": false,
          "schema": {
            "enum": [
              "name",
              "group_id"
            ],
            "type": "string"
          }
        },
        "assignmentRuleOrderHowParam": {
          "description": "Direction of the ordering; defaults to ASC for name, and to DESC for host_ids",
          "in": "query",
          "name": "order_how",
          "required": false,
          "schema": {
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string"
          }
        },
        "branchId": {
          "description": "Filter by branch_id",
          "in": "query",
          "name": "branch_id",
          "required": false,
          "schema": {
            "type": "string"
          }
        },
        "confirmDeleteAll": {
          "description": "Confirmation to delete all hosts on the account",
          "in": "query",
          "name": "confirm_delete_all",
          "required": false,
          "schema": {
            "type": "boolean"
          }
        },
        "displayName": {
          "description": "Filter by display_name (case-insensitive)",
          "in": "query",
          "name": "display_name",
          "required": false,
          "schema": {
            "type": "string"
          }
        },
        "factsNamespace": {
          "description": "A namespace of the merged facts.",
          "in": "path",
          "name": "namespace",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        "fields_param": {
          "description": "Fetches only mentioned system_profile fields. For example, <br /><br /> &nbsp;&nbsp;&nbsp;&nbsp;{\"system_profile\": [\"arch\", \"host_type\"]} <br /><br /> which equates to the URL param: <br /><br /> &nbsp;&nbsp;&nbsp;&nbsp;\"?fields[system_profile]=arch,host_type\"",
          "example": {},
          "explode": true,
          "in": "query",
          "name": "fields",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/SystemProfileNestedObject"
          },
          "style": "deepObject",
          "x-validator": "sparseFields"
        },
        "filter_param": {
          "description": "Filters hosts based on system_profile fields. For example: <br /><br /> &nbsp;&nbsp;&nbsp;&nbsp;{\"system_profile\": {\"sap_system\": {\"eq\": \"true\"}}} <br /><br /> which equates to the URL param: <br /><br /> &nbsp;&nbsp;&nbsp;&nbsp;\"?filter[system_profile][sap_system][eq]=true\" <br /><br /> To get \"edge\" hosts, use this explicit filter: <br /><br /> &nbsp;&nbsp;&nbsp;&nbsp;{\"system_profile\": {\"host_type\": {\"eq\": \"edge\"}}} <br /><br /> which equates to the URL param: <br /><br /> &nbsp;&nbsp;&nbsp;&nbsp;\"?filter[system_profile][host_type][eq]=edge\"",
          "example": {},
          "explode": true,
          "in": "query",
          "name": "filter",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/SystemProfileNestedObject"
          },
          "style": "deepObject"
        },
        "fqdn": {
          "description": "Filter by FQDN (case-insensitive)",
          "in": "query",
          "name": "fqdn",
          "required": false,
          "schema": {
            "type": "string"
          }
        },
        "groupId": {
          "description": "Group ID.",
          "in": "path",
          "name": "group_id",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/NonStrictUUID"
          }
        },
        "groupIdList": {
          "description": "A comma-separated list of group IDs.",
          "in": "path",
          "name": "group_id_list",
          "required": true,
          "schema": {
            "items": {
              "$ref": "#/components/schemas/NonStrictUUID"
            },
            "type": "array"
          }
        },
        "groupName": {
          "description": "Filter by group name",
          "in": "query",
          "name": "name",
          "required": false,
          "schema": {
            "type": "string"
          }
        },
        "groupNameListParam": {
          "description": "Filter by group name",
          "in": "query",
          "name": "group_name",
          "required": false,
          "schema": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "groupOrderByParam": {
          "description": "Ordering field name",
          "in": "query",
          "name": "order_by",
          "required": false,
          "schema": {
            "enum": [
              "name",
              "host_count",
              "updated"
            ],
            "type": "string"
          }
        },
        "groupOrderHowParam": {
          "description": "Direction of the ordering; defaults to ASC for name, and to DESC for host_count",
          "in": "query",
          "name": "order_how",
          "required": false,
          "schema": {
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string"
          }
        },
        "hostId": {
          "description": "Host (system) ID.",
          "in": "path",
          "name": "host_id",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/NonStrictUUID"
          }
        },
        "hostIdList": {
          "description": "A comma-separated list of host IDs.",
          "in": "path",
          "name": "host_id_list",
          "required": true,
          "schema": {
            "items": {
              "$ref": "#/components/schemas/NonStrictUUID"
            },
            "type": "array"
          }
        },
        "hostOrderByParam": {
          "description": "Ordering field name",
          "in": "query",
          "name": "order_by",
          "required": false,
          "schema": {
            "enum": [
              "display_name",
              "group_name",
              "updated",
              "operating_system"
            ],
            "type": "string"
          }
        },
        "hostOrderHowParam": {
          "description": "Direction of the ordering; defaults to ASC for display_name, and to DESC for updated and operating_system",
          "in": "query",
          "name": "order_how",
          "required": false,
          "schema": {
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string"
          }
        },
        "hostnameOrId": {
          "description": "Filter by display_name, fqdn, id (case-insensitive)",
          "in": "query",
          "name": "hostname_or_id",
          "required": false,
          "schema": {
            "type": "string"
          }
        },
        "insightsId": {
          "description": "Filter by insights_id",
          "in": "query",
          "name": "insights_id",
          "required": false,
          "schema": {
            "format": "uuid",
            "type": "string"
          }
        },
        "pageParam": {
          "description": "A page number of the items to return.",
          "in": "query",
          "name": "page",
          "required": false,
          "schema": {
            "default": 1,
            "maximum": 21474837,
            "minimum": 1,
            "type": "integer"
          }
        },
        "perPageParam": {
          "description": "A number of items to return per page.",
          "in": "query",
          "name": "per_page",
          "required": false,
          "schema": {
            "default": 50,
            "maximum": 100,
            "minimum": 1,
            "type": "integer"
          }
        },
        "providerId": {
          "description": "Filter by provider_id",
          "in": "query",
          "name": "provider_id",
          "required": false,
          "schema": {
            "type": "string"
          }
        },
        "providerType": {
          "description": "Filter by provider_type",
          "in": "query",
          "name": "provider_type",
          "required": false,
          "schema": {
            "enum": [
              "alibaba",
              "aws",
              "azure",
              "gcp",
              "ibm"
            ],
            "type": "string"
          }
        },
        "registered_with": {
          "description": "Filters out any host not registered by the specified reporters",
          "in": "query",
          "name": "registered_with",
          "required": false,
          "schema": {
            "items": {
              "enum": [
                "insights",
                "yupana",
                "satellite",
                "discovery",
                "puptoo",
                "rhsm-conduit",
                "cloud-connector",
                "!yupana",
                "!satellite",
                "!discovery",
                "!puptoo",
                "!rhsm-conduit",
                "!cloud-connector"
              ],
              "type": "string"
            },
            "type": "array"
          }
        },
        "resourceTypesPerPageParam": {
          "description": "A number of items to return per page.",
          "in": "query",
          "name": "per_page",
          "required": false,
          "schema": {
            "default": 10,
            "maximum": 100,
            "minimum": 1,
            "type": "integer"
          }
        },
        "searchParam": {
          "description": "Used for searching tags and sap_sids that match the given search string. For searching tags, a tag's namespace, key, and/or value is used for matching.",
          "in": "query",
          "name": "search",
          "required": false,
          "schema": {
            "type": "string"
          }
        },
        "stalenessNoDefaultsParam": {
          "description": "Culling states of the hosts.",
          "in": "query",
          "name": "staleness",
          "required": false,
          "schema": {
            "items": {
              "enum": [
                "fresh",
                "stale",
                "stale_warning",
                "unknown"
              ],
              "type": "string"
            },
            "type": "array"
          }
        },
        "stalenessParam": {
          "description": "Culling states of the hosts. Default: fresh, stale and stale_warning",
          "in": "query",
          "name": "staleness",
          "required": false,
          "schema": {
            "default": [
              "fresh",
              "stale",
              "stale_warning"
            ],
            "items": {
              "enum": [
                "fresh",
                "stale",
                "stale_warning",
                "unknown"
              ],
              "type": "string"
            },
            "type": "array"
          }
        },
        "tagsOrderBy": {
          "description": "Ordering field name",
          "in": "query",
          "name": "order_by",
          "required": false,
          "schema": {
            "default": "tag",
            "enum": [
              "tag",
              "count"
            ],
            "type": "string"
          }
        },
        "tagsOrderHow": {
          "description": "Direction of the ordering. Default to ASC",
          "in": "query",
          "name": "order_how",
          "required": false,
          "schema": {
            "default": "ASC",
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string"
          }
        },
        "tagsParam": {
          "description": "filters out hosts not tagged by the given tags",
          "in": "query",
          "name": "tags",
          "required": false,
          "schema": {
            "items": {
              "pattern": "^([^=/]+/)?[^=/]+(=[^=/]+)?$",
              "type": "string"
            },
            "type": "array"
          }
        },
        "updatedEnd": {
          "description": "Only show hosts last modified before the given date",
          "in": "query",
          "name": "updated_end",
          "schema": {
            "format": "date-time",
            "type": "string"
          }
        },
        "updatedStart": {
          "description": "Only show hosts last modified after the given date",
          "in": "query",
          "name": "updated_start",
          "schema": {
            "format": "date-time",
            "type": "string"
          }
        }
      },
      "responses": {
        "PageOutOfBounds": {
          "description": "Requested page is outside of the range of available pages"
        }
      },
      "schemas": {
        "AccountNumber": {
          "deprecated": true,
          "description": "A Red Hat Account number that owns the host.",
          "example": "000102",
          "nullable": true,
          "type": "string"
        },
        "ActiveTags": {
          "allOf": [
            {
              "$ref": "#/components/schemas/PaginationOut"
            },
            {
              "properties": {
                "results": {
                  "items": {
                    "description": "Information about a host tag",
                    "properties": {
                      "count": {
                        "description": "The number of hosts with the given tag. If the value is null this indicates that the count is unknown.",
                        "nullable": true,
                        "type": "integer"
                      },
                      "tag": {
                        "$ref": "#/components/schemas/StructuredTag"
                      }
                    },
                    "required": [
                      "tag",
                      "count"
                    ],
                    "title": "ActiveTag",
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "required": [
                "results"
              ],
              "type": "object"
            }
          ],
          "example": {
            "count": 3,
            "page": 1,
            "per_page": 50,
            "results": [
              {
                "count": 3,
                "tag": {
                  "key": "env",
                  "namespace": "Sat",
                  "value": "prod"
                }
              },
              {
                "count": 1,
                "tag": {
                  "key": "region",
                  "namespace": "aws",
                  "value": "us-east-1"
                }
              },
              {
                "count": -1,
                "tag": {
                  "key": "web",
                  "namespace": "insights-client",
                  "value": null
                }
              }
            ],
            "total": 3
          },
          "title": "Host data"
        },
        "AssignmentRuleId": {
          "$ref": "#/components/schemas/NonStrictUUID",
          "description": "A durable and reliable platform-wide assignment-rule identifier. Applications should use this identifier to reference assignment-rules."
        },
        "AssignmentRuleIn": {
          "description": "Data for a single Assignment Rule",
          "properties": {
            "description": {
              "maxLength": 255,
              "minLength": 1,
              "nullable": true,
              "type": "string"
            },
            "enabled": {
              "type": "boolean"
            },
            "filter": {
              "type": "object"
            },
            "group_id": {
              "$ref": "#/components/schemas/GroupId"
            },
            "name": {
              "maxLength": 255,
              "minLength": 1,
              "type": "string"
            }
          },
          "required": [
            "name",
            "group_id",
            "filter",
            "enabled"
          ],
          "title": "Assignment Rule In",
          "type": "object"
        },
        "AssignmentRuleOut": {
          "description": "Data for a single Assignment Rule response",
          "properties": {
            "account": {
              "$ref": "#/components/schemas/AccountNumber"
            },
            "created": {
              "format": "date-time",
              "type": "string"
            },
            "description": {
              "minLength": 1,
              "nullable": true,
              "type": "string"
            },
            "enabled": {
              "type": "boolean"
            },
            "filter": {
              "type": "object"
            },
            "group_id": {
              "$ref": "#/components/schemas/GroupId"
            },
            "id": {
              "$ref": "#/components/schemas/NonStrictUUID"
            },
            "modified": {
              "format": "date-time",
              "type": "string"
            },
            "name": {
              "minLength": 1,
              "type": "string"
            },
            "org_id": {
              "$ref": "#/components/schemas/OrgId"
            }
          },
          "required": [
            "name",
            "group_id",
            "filter",
            "enabled",
            "created",
            "modified"
          ],
          "title": "Assignment Rule response",
          "type": "object"
        },
        "AssignmentRuleQueryOutput": {
          "allOf": [
            {
              "$ref": "#/components/schemas/PaginationOut"
            },
            {
              "properties": {
                "results": {
                  "description": "Actual assignment-rule search query result entries.",
                  "items": {
                    "$ref": "#/components/schemas/AssignmentRuleOut"
                  },
                  "type": "array"
                }
              },
              "required": [
                "results"
              ],
              "type": "object"
            }
          ],
          "description": "A paginated assignment-rule search query result with assignment-rule entries and their Inventory metadata.",
          "title": "An Inventory Assignment Rules query result",
          "type": "object"
        },
        "BiosUuid": {
          "description": "A UUID of the host machine BIOS.  This field is considered to be a canonical fact.",
          "example": "22cd8e39-13bb-4d02-8316-84b850dc5136",
          "nullable": true,
          "type": "string"
        },
        "CanonicalFactsIn": {
          "allOf": [
            {
              "properties": {
                "bios_uuid": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/BiosUuid"
                    },
                    {
                      "$ref": "#/components/schemas/HyphenatedUuid"
                    }
                  ]
                },
                "fqdn": {
                  "$ref": "#/components/schemas/NonNullableString"
                },
                "insights_id": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/InsightsId"
                    },
                    {
                      "$ref": "#/components/schemas/HyphenatedUuid"
                    }
                  ]
                },
                "ip_addresses": {
                  "$ref": "#/components/schemas/NonNullableStringArray"
                },
                "mac_addresses": {
                  "$ref": "#/components/schemas/NonNullableStringArray"
                },
                "provider_id": {
                  "$ref": "#/components/schemas/NonNullableString"
                },
                "provider_type": {
                  "$ref": "#/components/schemas/NonNullableString"
                },
                "satellite_id": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SatelliteId"
                    },
                    {
                      "$ref": "#/components/schemas/HyphenatedUuid"
                    }
                  ]
                },
                "subscription_manager_id": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SubscriptionManagerId"
                    },
                    {
                      "$ref": "#/components/schemas/HyphenatedUuid"
                    }
                  ]
                }
              }
            },
            {
              "anyOf": [
                {
                  "required": [
                    "insights_id"
                  ]
                },
                {
                  "required": [
                    "subscription_manager_id"
                  ]
                },
                {
                  "required": [
                    "satellite_id"
                  ]
                },
                {
                  "required": [
                    "bios_uuid"
                  ]
                },
                {
                  "required": [
                    "ip_addresses"
                  ]
                },
                {
                  "required": [
                    "fqdn"
                  ]
                },
                {
                  "required": [
                    "mac_addresses"
                  ]
                },
                {
                  "required": [
                    "provider_id",
                    "provider_type"
                  ]
                }
              ]
            }
          ]
        },
        "CanonicalFactsOut": {
          "properties": {
            "bios_uuid": {
              "$ref": "#/components/schemas/BiosUuid"
            },
            "fqdn": {
              "$ref": "#/components/schemas/Fqdn"
            },
            "insights_id": {
              "$ref": "#/components/schemas/InsightsId"
            },
            "ip_addresses": {
              "$ref": "#/components/schemas/IpAddresses"
            },
            "mac_addresses": {
              "$ref": "#/components/schemas/MacAddresses"
            },
            "provider_id": {
              "$ref": "#/components/schemas/ProviderId"
            },
            "provider_type": {
              "$ref": "#/components/schemas/ProviderType"
            },
            "satellite_id": {
              "$ref": "#/components/schemas/SatelliteId"
            },
            "subscription_manager_id": {
              "$ref": "#/components/schemas/SubscriptionManagerId"
            }
          },
          "type": "object"
        },
        "Count": {
          "description": "The number of items on the current page",
          "type": "integer"
        },
        "CreateCheckIn": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CanonicalFactsIn"
            },
            {
              "properties": {
                "checkin_frequency": {
                  "description": "How long from now to expect another check-in (in minutes).",
                  "example": 1440,
                  "maximum": 2880,
                  "minimum": 1,
                  "type": "integer"
                }
              }
            }
          ],
          "description": "Data required to create a check-in record for a host.",
          "title": "Check-in data",
          "type": "object"
        },
        "FactSet": {
          "description": "A set of string facts belonging to a single namespace.",
          "properties": {
            "facts": {
              "description": "The facts themselves.",
              "example": {
                "fact1": "value1",
                "fact2": "value2"
              },
              "type": "object"
            },
            "namespace": {
              "description": "A namespace the facts belong to.",
              "minLength": 1,
              "type": "string"
            }
          },
          "required": [
            "namespace",
            "facts"
          ],
          "title": "Host facts under a namespace"
        },
        "Facts": {
          "description": "A set of string facts about a host.",
          "example": {
            "fact1": "value1",
            "fact2": "value2"
          },
          "title": "Host facts",
          "type": "object"
        },
        "Fqdn": {
          "description": "A host’s Fully Qualified Domain Name.  This field is considered to be a canonical fact.",
          "example": "my.host.example.com",
          "nullable": true,
          "type": "string"
        },
        "GroupId": {
          "$ref": "#/components/schemas/NonStrictUUID",
          "description": "A durable and reliable platform-wide group identifier. Applications should use this identifier to reference groups."
        },
        "GroupIn": {
          "description": "Data of a single group belonging to an account.",
          "properties": {
            "host_ids": {
              "$ref": "#/components/schemas/HostIds"
            },
            "name": {
              "$ref": "#/components/schemas/GroupName"
            }
          },
          "title": "Group In",
          "type": "object"
        },
        "GroupName": {
          "description": "A group’s human-readable name.",
          "example": "sre-group",
          "nullable": false,
          "type": "string"
        },
        "GroupOut": {
          "description": "Data of a single group belonging to an account.",
          "properties": {
            "account": {
              "$ref": "#/components/schemas/AccountNumber"
            },
            "created": {
              "description": "A timestamp when the entry was created.",
              "format": "date-time",
              "type": "string"
            },
            "id": {
              "$ref": "#/components/schemas/GroupId"
            },
            "name": {
              "$ref": "#/components/schemas/GroupName"
            },
            "org_id": {
              "$ref": "#/components/schemas/OrgId"
            },
            "updated": {
              "description": "A timestamp when the entry was last updated.",
              "format": "date-time",
              "type": "string"
            }
          },
          "title": "Group Out Properties",
          "type": "object"
        },
        "GroupOutWithHostCount": {
          "allOf": [
            {
              "$ref": "#/components/schemas/GroupOut"
            },
            {
              "properties": {
                "host_count": {
                  "$ref": "#/components/schemas/HostCount"
                }
              }
            }
          ],
          "description": "Data of a single group belonging to an account.",
          "title": "Group properties with host count",
          "type": "object"
        },
        "GroupQueryOutput": {
          "allOf": [
            {
              "$ref": "#/components/schemas/PaginationOut"
            },
            {
              "properties": {
                "results": {
                  "description": "Actual group search query result entries.",
                  "items": {
                    "$ref": "#/components/schemas/GroupOutWithHostCount"
                  },
                  "type": "array"
                }
              },
              "required": [
                "results"
              ],
              "type": "object"
            }
          ],
          "description": "A paginated group search query result with group entries and their Inventory metadata.",
          "title": "An Inventory Groups query result",
          "type": "object"
        },
        "HostCount": {
          "description": "The number of hosts associated with the group.",
          "example": 3,
          "type": "integer"
        },
        "HostId": {
          "$ref": "#/components/schemas/NonStrictUUID",
          "description": "A durable and reliable platform-wide group identifier. Applications should use this identifier to reference hosts."
        },
        "HostIdOut": {
          "description": "A single Host ID that belongs to a host.",
          "properties": {
            "id": {
              "$ref": "#/components/schemas/HostId"
            }
          },
          "title": "A Host ID query result",
          "type": "object"
        },
        "HostIds": {
          "description": "A comma-separated list of host IDs that belong to the group.",
          "items": {
            "$ref": "#/components/schemas/NonStrictUUID"
          },
          "nullable": true,
          "type": "array"
        },
        "HostOut": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CanonicalFactsOut"
            },
            {
              "properties": {
                "account": {
                  "$ref": "#/components/schemas/AccountNumber"
                },
                "ansible_host": {
                  "description": "The ansible host name for remediations",
                  "example": "host1.mydomain.com",
                  "nullable": true,
                  "type": "string"
                },
                "created": {
                  "description": "A timestamp when the entry was created.",
                  "format": "date-time",
                  "type": "string"
                },
                "culled_timestamp": {
                  "description": "Timestamp from which the host is considered deleted.",
                  "format": "date-time",
                  "nullable": true,
                  "type": "string"
                },
                "display_name": {
                  "description": "A host’s human-readable display name, e.g. in a form of a domain name.",
                  "example": "host1.mydomain.com",
                  "nullable": true,
                  "type": "string"
                },
                "facts": {
                  "description": "A set of facts belonging to the host.",
                  "items": {
                    "$ref": "#/components/schemas/FactSet"
                  },
                  "type": "array"
                },
                "groups": {
                  "description": "The groups that the host belongs to, if any.",
                  "items": {
                    "$ref": "#/components/schemas/GroupOut"
                  },
                  "type": "array"
                },
                "id": {
                  "description": "A durable and reliable platform-wide host identifier. Applications should use this identifier to reference hosts.",
                  "example": "3f01b55457674041b75e41829bcee1dc",
                  "type": "string"
                },
                "org_id": {
                  "$ref": "#/components/schemas/OrgId"
                },
                "per_reporter_staleness": {
                  "additionalProperties": {
                    "$ref": "#/components/schemas/PerReporterStaleness"
                  },
                  "description": "Reporting source of the last checkin status, stale_timestamp, and last_check_in.",
                  "type": "object"
                },
                "reporter": {
                  "description": "Reporting source of the host. Used when updating the stale_timestamp.",
                  "nullable": true,
                  "type": "string"
                },
                "stale_timestamp": {
                  "description": "Timestamp from which the host is considered stale.",
                  "format": "date-time",
                  "nullable": true,
                  "type": "string"
                },
                "stale_warning_timestamp": {
                  "description": "Timestamp from which the host is considered too stale to be listed without an explicit toggle.",
                  "format": "date-time",
                  "nullable": true,
                  "type": "string"
                },
                "system_profile": {
                  "$ref": "#/components/schemas/SystemProfile"
                },
                "updated": {
                  "description": "A timestamp when the entry was last updated.",
                  "format": "date-time",
                  "type": "string"
                }
              },
              "required": [
                "org_id"
              ]
            }
          ],
          "description": "Data of a single host belonging to an account. Represents the hosts without its Inventory metadata.",
          "title": "Host Out",
          "type": "object"
        },
        "HostQueryOutput": {
          "allOf": [
            {
              "$ref": "#/components/schemas/PaginationOut"
            },
            {
              "properties": {
                "results": {
                  "description": "Actual host search query result entries.",
                  "items": {
                    "$ref": "#/components/schemas/HostOut"
                  },
                  "type": "array"
                }
              },
              "required": [
                "results"
              ],
              "type": "object"
            }
          ],
          "description": "A paginated host search query result with host entries and their Inventory metadata.",
          "title": "A Host Inventory query result"
        },
        "HostSystemProfileOut": {
          "description": "Individual host record that contains only the host id and system profile",
          "properties": {
            "id": {
              "type": "string"
            },
            "system_profile": {
              "$ref": "#/components/schemas/SystemProfile"
            }
          },
          "title": "Structure of an individual host system profile output",
          "type": "object"
        },
        "HyphenatedUuid": {
          "example": "22cd8e39-13bb-4d02-8316-84b850dc5136",
          "maxLength": 36,
          "minLength": 36,
          "nullable": true,
          "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}",
          "type": "string"
        },
        "InsightsId": {
          "description": "An ID defined in /etc/insights-client/machine-id. This field is considered a canonical fact.",
          "example": "3f01b55457674041b75e41829bcee1dc",
          "nullable": true,
          "type": "string"
        },
        "IpAddresses": {
          "description": "Host’s network IP addresses.  This field is considered to be a canonical fact.",
          "example": [
            "10.10.0.1",
            "10.0.0.2"
          ],
          "items": {
            "type": "string"
          },
          "nullable": true,
          "type": "array"
        },
        "MacAddresses": {
          "description": "Host’s network interfaces MAC addresses.  This field is considered to be a canonical fact.",
          "example": [
            "c2:00:d0:c8:61:01"
          ],
          "items": {
            "type": "string"
          },
          "nullable": true,
          "type": "array"
        },
        "NonNullableString": {
          "nullable": false,
          "type": "string"
        },
        "NonNullableStringArray": {
          "items": {
            "type": "string"
          },
          "nullable": false,
          "type": "array"
        },
        "NonStrictUUID": {
          "example": "bA6deCFc19564430AB814bf8F70E8cEf",
          "format": "uuid",
          "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$|^[0-9a-fA-F]{8}[0-9a-fA-F]{4}[0-9a-fA-F]{4}[0-9a-fA-F]{4}[0-9a-fA-F]{12}$",
          "type": "string"
        },
        "OrgId": {
          "description": "The Org ID of the tenant that owns the host.",
          "example": "000102",
          "type": "string"
        },
        "Page": {
          "description": "The page number",
          "type": "integer"
        },
        "PaginationOut": {
          "properties": {
            "count": {
              "$ref": "#/components/schemas/Count"
            },
            "page": {
              "$ref": "#/components/schemas/Page"
            },
            "per_page": {
              "$ref": "#/components/schemas/PerPage"
            },
            "total": {
              "$ref": "#/components/schemas/Total"
            }
          },
          "required": [
            "count",
            "page",
            "per_page",
            "total"
          ],
          "type": "object"
        },
        "PatchHostIn": {
          "description": "Data of a single host to be updated.",
          "properties": {
            "ansible_host": {
              "description": "The ansible host name for remediations",
              "example": "host1.mydomain.com",
              "type": "string"
            },
            "display_name": {
              "description": "A host’s human-readable display name, e.g. in a form of a domain name.",
              "example": "host1.mydomain.com",
              "type": "string"
            }
          },
          "title": "Host data",
          "type": "object"
        },
        "PerPage": {
          "description": "The number of items to return per page",
          "type": "integer"
        },
        "PerReporterStaleness": {
          "properties": {
            "check_in_succeeded": {
              "type": "boolean"
            },
            "culled_timestamp": {
              "$ref": "#/components/schemas/TimeStamp"
            },
            "last_check_in": {
              "$ref": "#/components/schemas/TimeStamp"
            },
            "stale_timestamp": {
              "$ref": "#/components/schemas/TimeStamp"
            },
            "stale_warning_timestamp": {
              "$ref": "#/components/schemas/TimeStamp"
            }
          },
          "type": "object"
        },
        "ProviderId": {
          "description": "Host’s reference in the external source e.g. Alibaba, AWS EC2, Azure, GCP, IBM etc. This field is one of the canonical facts and does not work without provider_type.",
          "example": "i-05d2313e6b9a42b16",
          "nullable": true,
          "type": "string"
        },
        "ProviderType": {
          "description": "Type of external source e.g. Alibaba, AWS EC2, Azure, GCP, IBM, etc. This field is one of the canonical facts and does not workout provider_id.",
          "example": "aws",
          "nullable": true,
          "type": "string"
        },
        "ResourceTypesGroupsQueryOutput": {
          "allOf": [
            {
              "$ref": "#/components/schemas/ResourceTypesPaginationOut"
            },
            {
              "properties": {
                "data": {
                  "description": "Actual group search query result entries.",
                  "items": {
                    "$ref": "#/components/schemas/GroupOutWithHostCount"
                  },
                  "type": "array"
                }
              },
              "required": [
                "data"
              ],
              "type": "object"
            }
          ],
          "description": "A paginated group search query result with group entries and their Inventory metadata in paginated resource-types response format.",
          "title": "An Inventory Groups query result in resource-types response format",
          "type": "object"
        },
        "ResourceTypesOut": {
          "description": "Data describing a single resource-types RBAC object.",
          "properties": {
            "count": {
              "type": "integer"
            },
            "path": {
              "description": "The path for the RBAC endpoint for the resource type",
              "type": "string"
            },
            "value": {
              "description": "The name of the resource type",
              "type": "string"
            }
          },
          "title": "A resource type query result",
          "type": "object"
        },
        "ResourceTypesPaginationOut": {
          "properties": {
            "links": {
              "description": "A collection of pagination links for resource-types endpoints",
              "properties": {
                "first": {
                  "description": "The URI path for the first page in the pagination",
                  "type": "string"
                },
                "last": {
                  "description": "The URI path for the last page in the pagination",
                  "type": "string"
                },
                "next": {
                  "description": "The URI path for the next page in the pagination",
                  "nullable": true,
                  "type": "string"
                },
                "previous": {
                  "description": "The URI path for the previous page in the pagination",
                  "nullable": true,
                  "type": "string"
                }
              },
              "required": [
                "first",
                "previous",
                "next",
                "last"
              ],
              "type": "object"
            },
            "meta": {
              "description": "The metadata for resource-types responses",
              "properties": {
                "count": {
                  "description": "The total number of objects returned by the query.",
                  "type": "integer"
                }
              },
              "required": [
                "count"
              ],
              "type": "object"
            }
          },
          "required": [
            "meta",
            "links"
          ],
          "type": "object"
        },
        "ResourceTypesQueryOutput": {
          "allOf": [
            {
              "$ref": "#/components/schemas/ResourceTypesPaginationOut"
            },
            {
              "properties": {
                "data": {
                  "description": "Actual resource-types object data.",
                  "items": {
                    "$ref": "#/components/schemas/ResourceTypesOut"
                  },
                  "type": "array"
                }
              },
              "required": [
                "data"
              ],
              "type": "object"
            }
          ],
          "description": "A paginated list of resource-types RBAC objects.",
          "title": "A resource-types query result",
          "type": "object"
        },
        "SatelliteId": {
          "description": "A Red Hat Satellite ID of a RHEL host.  This field is considered to be a canonical fact.",
          "example": "22cd8e39-13bb-4d02-8316-84b850dc5136",
          "nullable": true,
          "type": "string"
        },
        "StalenessId": {
          "description": "Account Staleness UID",
          "oneOf": [
            {
              "$ref": "#/components/schemas/NonStrictUUID"
            },
            {
              "$ref": "#/components/schemas/SystemDefaultId"
            }
          ]
        },
        "StalenessIn": {
          "description": "Data of a single account staleness.",
          "properties": {
            "conventional_time_to_delete": {
              "$ref": "#/components/schemas/StalenessTimeout"
            },
            "conventional_time_to_stale": {
              "$ref": "#/components/schemas/StalenessTimeout"
            },
            "conventional_time_to_stale_warning": {
              "$ref": "#/components/schemas/StalenessTimeout"
            },
            "immutable_time_to_delete": {
              "$ref": "#/components/schemas/StalenessTimeout"
            },
            "immutable_time_to_stale": {
              "$ref": "#/components/schemas/StalenessTimeout"
            },
            "immutable_time_to_stale_warning": {
              "$ref": "#/components/schemas/StalenessTimeout"
            }
          },
          "title": "Account Staleness In",
          "type": "object"
        },
        "StalenessOutput": {
          "allOf": [
            {
              "$ref": "#/components/schemas/StalenessIn"
            },
            {
              "required": [
                "conventional_time_to_stale",
                "conventional_time_to_stale_warning",
                "conventional_time_to_delete",
                "immutable_time_to_stale",
                "immutable_time_to_stale_warning",
                "immutable_time_to_delete"
              ]
            },
            {
              "properties": {
                "created": {
                  "description": "A timestamp when the entry was created.",
                  "format": "date-time",
                  "nullable": true,
                  "type": "string"
                },
                "id": {
                  "$ref": "#/components/schemas/StalenessId"
                },
                "org_id": {
                  "$ref": "#/components/schemas/OrgId"
                },
                "updated": {
                  "description": "A timestamp when the entry was last updated.",
                  "format": "date-time",
                  "nullable": true,
                  "type": "string"
                }
              },
              "required": [
                "id",
                "org_id",
                "created",
                "updated"
              ]
            }
          ],
          "description": "Data of a account staleness.",
          "title": "Account Staleness Out",
          "type": "object"
        },
        "StalenessTimeout": {
          "minimum": 1,
          "type": "integer"
        },
        "StructuredTag": {
          "properties": {
            "key": {
              "type": "string"
            },
            "namespace": {
              "nullable": true,
              "type": "string"
            },
            "value": {
              "nullable": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        "SubscriptionManagerId": {
          "description": "A Red Hat Subcription Manager ID of a RHEL host.  This field is considered to be a canonical fact.",
          "example": "22cd8e39-13bb-4d02-8316-84b850dc5136",
          "nullable": true,
          "type": "string"
        },
        "SystemDefaultId": {
          "enum": [
            "system_default"
          ],
          "example": "system_default",
          "type": "string"
        },
        "SystemProfile": {
          "description": "Representation of the system profile fields",
          "properties": {
            "ansible": {
              "description": "Object containing data specific to Ansible Automation Platform",
              "properties": {
                "catalog_worker_version": {
                  "description": "The catalog-worker version on the host",
                  "example": "1.2.3, 4.5.6, 7.8.9",
                  "maxLength": 30,
                  "pattern": "^\\d+(\\.\\d+)+$",
                  "type": "string",
                  "x-wildcard": true
                },
                "controller_version": {
                  "description": "The ansible-tower or automation-controller version on the host",
                  "example": "1.2.3, 4.5.6, 7.8.9",
                  "maxLength": 30,
                  "pattern": "^\\d+(\\.\\d+)+$",
                  "type": "string",
                  "x-wildcard": true
                },
                "hub_version": {
                  "description": "The automation-hub version on the host",
                  "example": "1.2.3, 4.5.6, 7.8.9",
                  "maxLength": 30,
                  "pattern": "^\\d+(\\.\\d+)+$",
                  "type": "string",
                  "x-wildcard": true
                },
                "sso_version": {
                  "description": "The SSO version on the host",
                  "example": "1.2.3, 4.5.6, 7.8.9",
                  "maxLength": 30,
                  "pattern": "^\\d+(\\.\\d+)+$",
                  "type": "string",
                  "x-wildcard": true
                }
              },
              "type": "object"
            },
            "arch": {
              "example": "ARM, x86_64, RISC-V",
              "maxLength": 50,
              "type": "string"
            },
            "basearch": {
              "description": "The architecture family (from yum/dnf)",
              "example": "x86_64, arm, ppc64",
              "maxLength": 50,
              "type": "string"
            },
            "bios_release_date": {
              "example": "ex1, ex2, ex3",
              "maxLength": 50,
              "type": "string",
              "x-wildcard": true
            },
            "bios_vendor": {
              "example": "ex1, ex2, ex3",
              "maxLength": 100,
              "type": "string"
            },
            "bios_version": {
              "example": "ex1, ex2, ex3",
              "maxLength": 100,
              "type": "string"
            },
            "bootc_status": {
              "description": "Object containing image data from command bootc status",
              "properties": {
                "booted": {
                  "properties": {
                    "cached_image": {
                      "description": "Name of the image",
                      "example": "quay.io/centos-bootc/fedora-bootc-cloud:eln, 192.168.0.1:5000/foo/foo:latest",
                      "maxLength": 128,
                      "type": "string",
                      "x-wildcard": true
                    },
                    "cached_image_digest": {
                      "description": "Digest of the image",
                      "example": "sha256:806d77394f96e47cf99b1233561ce970c94521244a2d8f2affa12c3261961223, sha256:92e476435ced1c148350c660b09c744717defbd300a15d33deda5b50ad6b21a0",
                      "maxLength": 128,
                      "pattern": "^(sha256\\:)[a-fA-F0-9]{64}$",
                      "type": "string"
                    },
                    "image": {
                      "description": "Name of the image",
                      "example": "quay.io/centos-bootc/fedora-bootc-cloud:eln, 192.168.0.1:5000/foo/foo:latest",
                      "maxLength": 128,
                      "type": "string",
                      "x-wildcard": true
                    },
                    "image_digest": {
                      "description": "Digest of the image",
                      "example": "sha256:806d77394f96e47cf99b1233561ce970c94521244a2d8f2affa12c3261961223, sha256:92e476435ced1c148350c660b09c744717defbd300a15d33deda5b50ad6b21a0",
                      "maxLength": 128,
                      "pattern": "^(sha256\\:)[a-fA-F0-9]{64}$",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "rollback": {
                  "properties": {
                    "cached_image": {
                      "description": "Name of the image",
                      "example": "quay.io/centos-bootc/fedora-bootc-cloud:eln, 192.168.0.1:5000/foo/foo:latest",
                      "maxLength": 128,
                      "type": "string",
                      "x-wildcard": true
                    },
                    "cached_image_digest": {
                      "description": "Digest of the image",
                      "example": "sha256:806d77394f96e47cf99b1233561ce970c94521244a2d8f2affa12c3261961223, sha256:92e476435ced1c148350c660b09c744717defbd300a15d33deda5b50ad6b21a0",
                      "maxLength": 128,
                      "pattern": "^(sha256\\:)[a-fA-F0-9]{64}$",
                      "type": "string"
                    },
                    "image": {
                      "description": "Name of the image",
                      "example": "quay.io/centos-bootc/fedora-bootc-cloud:eln, 192.168.0.1:5000/foo/foo:latest",
                      "maxLength": 128,
                      "type": "string",
                      "x-wildcard": true
                    },
                    "image_digest": {
                      "description": "Digest of the image",
                      "example": "sha256:806d77394f96e47cf99b1233561ce970c94521244a2d8f2affa12c3261961223, sha256:92e476435ced1c148350c660b09c744717defbd300a15d33deda5b50ad6b21a0",
                      "maxLength": 128,
                      "pattern": "^(sha256\\:)[a-fA-F0-9]{64}$",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "staged": {
                  "properties": {
                    "cached_image": {
                      "description": "Name of the image",
                      "example": "quay.io/centos-bootc/fedora-bootc-cloud:eln, 192.168.0.1:5000/foo/foo:latest",
                      "maxLength": 128,
                      "type": "string",
                      "x-wildcard": true
                    },
                    "cached_image_digest": {
                      "description": "Digest of the image",
                      "example": "sha256:806d77394f96e47cf99b1233561ce970c94521244a2d8f2affa12c3261961223, sha256:92e476435ced1c148350c660b09c744717defbd300a15d33deda5b50ad6b21a0",
                      "maxLength": 128,
                      "pattern": "^(sha256\\:)[a-fA-F0-9]{64}$",
                      "type": "string"
                    },
                    "image": {
                      "description": "Name of the image",
                      "example": "quay.io/centos-bootc/fedora-bootc-cloud:eln, 192.168.0.1:5000/foo/foo:latest",
                      "maxLength": 128,
                      "type": "string",
                      "x-wildcard": true
                    },
                    "image_digest": {
                      "description": "Digest of the image",
                      "example": "sha256:806d77394f96e47cf99b1233561ce970c94521244a2d8f2affa12c3261961223, sha256:92e476435ced1c148350c660b09c744717defbd300a15d33deda5b50ad6b21a0",
                      "maxLength": 128,
                      "pattern": "^(sha256\\:)[a-fA-F0-9]{64}$",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "captured_date": {
              "example": "ex1, ex2, ex3",
              "maxLength": 32,
              "type": "string"
            },
            "cloud_provider": {
              "example": "aws, ms, ibm",
              "maxLength": 100,
              "type": "string"
            },
            "conversions": {
              "description": "Object containing information about 3rd party migration on instances",
              "properties": {
                "activity": {
                  "description": "Whether the conversion activity has been done or not",
                  "example": true,
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "cores_per_socket": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer"
            },
            "cpu_flags": {
              "items": {
                "example": "ex1, ex2, ex3",
                "maxLength": 30,
                "type": "string"
              },
              "type": "array"
            },
            "cpu_model": {
              "description": "The cpu model name",
              "example": "Intel(R) Xeon(R) CPU E5-2690 0 @ 2.90GHz, Intel(R) Xeon(R) CPU E9-7800 0 @ 1.90GHz, Intel(R) I7(R) CPU I7-10900k 0 @ 4.90GHz",
              "maxLength": 100,
              "type": "string"
            },
            "disk_devices": {
              "items": {
                "$ref": "#/components/schemas/SystemProfileDiskDevice"
              },
              "type": "array"
            },
            "dnf_modules": {
              "items": {
                "$ref": "#/components/schemas/SystemProfileDnfModule"
              },
              "type": "array"
            },
            "enabled_services": {
              "items": {
                "example": "ex1, ex2, ex3",
                "maxLength": 512,
                "type": "string"
              },
              "type": "array"
            },
            "gpg_pubkeys": {
              "items": {
                "description": "A package name string of a single imported GPG pubkey",
                "example": "gpg-pubkey-11111111-22222222, gpg-pubkey-22222222-22222222, gpg-pubkey-22222222-33333333",
                "maxLength": 512,
                "type": "string"
              },
              "type": "array"
            },
            "greenboot_fallback_detected": {
              "description": "Indicates whether greenboot detected a rolled back update on an edge device.",
              "type": "boolean"
            },
            "greenboot_status": {
              "description": "Indicates the greenboot status of an edge device.",
              "enum": [
                "red",
                "green"
              ],
              "example": "green, red",
              "maxLength": 5,
              "type": "string"
            },
            "host_type": {
              "description": "Indicates the type of host.",
              "enum": [
                "edge"
              ],
              "example": "edge, None",
              "maxLength": 4,
              "type": "string"
            },
            "image_builder": {
              "description": "Object containing image builder facts",
              "properties": {
                "compliance_policy_id": {
                  "description": "The compliance policy that was used and applied during the image build",
                  "example": "89b52baa-9912-4edc-9ed5-be15c06eaaa9",
                  "maxLength": 36,
                  "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}",
                  "type": "string"
                },
                "compliance_profile_id": {
                  "description": "The profile that was applied during the image build on which the compliance policy was based\n",
                  "example": "xccdf_org.ssgproject.content_profile_cis",
                  "maxLength": 255,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "infrastructure_type": {
              "example": "physical, virtual, imaginary",
              "maxLength": 100,
              "type": "string"
            },
            "infrastructure_vendor": {
              "example": "ex1, ex2, baremetal",
              "maxLength": 100,
              "type": "string"
            },
            "insights_client_version": {
              "description": "The version number of insights client. supports wildcards",
              "example": "3.0.1-2.el4_2, 5.0.6-2.el7_6, 6.0.6-2.el8_4",
              "maxLength": 50,
              "type": "string",
              "x-wildcard": true
            },
            "insights_egg_version": {
              "example": "2.3, 4.4, 5.1",
              "maxLength": 50,
              "type": "string"
            },
            "installed_packages": {
              "items": {
                "description": "A NEVRA string for a single installed package",
                "example": "krb5-libs-0:-1.16.1-23.fc29.i686, arb5-libs-0:-1.16.1-23.fc29.i686, brb5-libs-0:-1.16.1-23.fc29.i686",
                "maxLength": 512,
                "type": "string"
              },
              "type": "array"
            },
            "installed_packages_delta": {
              "items": {
                "description": "A NEVRA string for a single installed package",
                "example": "krb5-libs-0:-1.16.1-23.fc29.i686, arb5-libs-0:-1.16.1-23.fc29.i686, brb5-libs-0:-1.16.1-23.fc29.i686",
                "maxLength": 512,
                "type": "string"
              },
              "type": "array"
            },
            "installed_products": {
              "items": {
                "$ref": "#/components/schemas/SystemProfileInstalledProduct"
              },
              "type": "array"
            },
            "installed_services": {
              "items": {
                "example": "ex1, ex2, ex3",
                "maxLength": 512,
                "type": "string"
              },
              "type": "array"
            },
            "intersystems": {
              "description": "Object containing data specific to InterSystems workload",
              "properties": {
                "is_intersystems": {
                  "description": "Indicates if InterSystems is installed on the system",
                  "type": "boolean"
                },
                "running_instances": {
                  "items": {
                    "description": "The info for an InterSystems instance running on the system",
                    "properties": {
                      "instance_name": {
                        "description": "The name of the instance",
                        "example": "IRIS3, PROD",
                        "maxLength": 255,
                        "type": "string"
                      },
                      "product": {
                        "description": "The product of the instance",
                        "example": "IRIS",
                        "maxLength": 64,
                        "type": "string"
                      },
                      "version": {
                        "description": "The version of the instance",
                        "example": "2023.1, 2023.2",
                        "maxLength": 7,
                        "pattern": "^\\d+(\\.\\d+)+$",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "is_marketplace": {
              "description": "Indicates whether the host is part of a marketplace install from AWS, Azure, etc.",
              "type": "boolean"
            },
            "katello_agent_running": {
              "type": "boolean"
            },
            "kernel_modules": {
              "items": {
                "example": "ex1, ex2, ex3",
                "maxLength": 255,
                "type": "string"
              },
              "type": "array"
            },
            "last_boot_time": {
              "format": "date-time",
              "maxLength": 50,
              "type": "string"
            },
            "mssql": {
              "description": "Object containing data specific to the MS SQL workload",
              "properties": {
                "version": {
                  "description": "MSSQL version number",
                  "example": "15.2.0, 12.5.3, 10.1.0",
                  "maxLength": 30,
                  "type": "string",
                  "x-wildcard": true
                }
              },
              "type": "object"
            },
            "network_interfaces": {
              "items": {
                "$ref": "#/components/schemas/SystemProfileNetworkInterface"
              },
              "type": "array"
            },
            "number_of_cpus": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer"
            },
            "number_of_sockets": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer"
            },
            "operating_system": {
              "description": "Object for OS details. Supports range operations",
              "properties": {
                "major": {
                  "description": "Major release of OS (aka the x version)",
                  "example": 6,
                  "maximum": 99,
                  "minimum": 0,
                  "type": "integer"
                },
                "minor": {
                  "description": "Minor release of OS (aka the y version)",
                  "example": 8,
                  "maximum": 99,
                  "minimum": 0,
                  "type": "integer"
                },
                "name": {
                  "description": "Name of the distro/os",
                  "enum": [
                    "RHEL",
                    "CentOS",
                    "CentOS Linux"
                  ],
                  "example": "RHEL, CentOS, CentOS Linux",
                  "maxLength": 12,
                  "type": "string"
                }
              },
              "required": [
                "major",
                "minor",
                "name"
              ],
              "type": "object"
            },
            "os_kernel_version": {
              "description": "The kernel version represented with a three, optionally four, number scheme.",
              "example": "4.18.2, 4.5.0, 5.1.0",
              "maxLength": 20,
              "pattern": "^\\d+\\.\\d+\\.\\d+(\\.\\d+)?$",
              "type": "string",
              "x-wildcard": true
            },
            "os_release": {
              "example": "7.4, 8.2, 7.5",
              "maxLength": 100,
              "type": "string",
              "x-wildcard": true
            },
            "owner_id": {
              "description": "A UUID associated with the host's RHSM certificate",
              "example": "22cd8e39-13bb-4d02-8316-84b850dc5136, ffdfd200-f5b9-4e57-b080-f5e257349df0, e2357169-f5e2-4afa-b509-ab1be3f30807",
              "maxLength": 36,
              "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}",
              "type": "string"
            },
            "public_dns": {
              "items": {
                "description": "The external DNS of the system",
                "example": "ec2-12-34-56-78.us-west-2.compute.amazonaws.com",
                "format": "string",
                "maxLength": 100,
                "type": "string"
              },
              "type": "array"
            },
            "public_ipv4_addresses": {
              "items": {
                "description": "The external IPv4 address of the system",
                "example": "12.23.31.32",
                "format": "ipv4",
                "maxLength": 15,
                "type": "string"
              },
              "type": "array"
            },
            "releasever": {
              "description": "Release name of the system distribution (from yum/dnf)",
              "example": "7, 7.0, 7Server, 8, 8.4",
              "maxLength": 100,
              "type": "string"
            },
            "rhc_client_id": {
              "description": "A UUID associated with a cloud_connector",
              "example": "22cd8e39-13bb-4d02-8316-84b850dc5136, 33cd8e39-13bb-4d02-8316-84b850dc5136, 2fa3e796-10e2-11ec-82a8-0242ac130003",
              "maxLength": 36,
              "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}",
              "type": "string"
            },
            "rhc_config_state": {
              "description": "A UUID associated with the config manager state",
              "example": "22cd8e39-13bb-4d02-8316-84b850dc5136, 2c68e8ec-10e2-11ec-82a8-0242ac130003, 2fa3e796-10e2-11ec-82a8-0242ac130003",
              "maxLength": 36,
              "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}",
              "type": "string"
            },
            "rhel_ai": {
              "description": "Object containing information about RHEL AI",
              "properties": {
                "nvidia_gpu_models": {
                  "description": "Model name of Nvidia GPUs in the GPU index order",
                  "items": {
                    "description": "The Nvidia GPU model",
                    "example": "Tesla V100-PCIE-16GB",
                    "maxLength": 64,
                    "type": "string"
                  },
                  "type": "array"
                },
                "rhel_ai_version_id": {
                  "description": "RHEL AI VERSION ID",
                  "example": "v1.1.3",
                  "maxLength": 16,
                  "type": "string"
                },
                "variant": {
                  "description": "RHEL AI VARIANT",
                  "example": "RHEL AI",
                  "maxLength": 7,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "rhsm": {
              "description": "Object for subscription-manager details",
              "properties": {
                "version": {
                  "description": "System release set by subscription-manager",
                  "example": "8.1, 7.5, 9.9",
                  "maxLength": 255,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "rpm_ostree_deployments": {
              "description": "The list of deployments on the system as reported by rpm-ostree status --json",
              "items": {
                "description": "Limited deployment information from systems managed by rpm-ostree as reported by rpm-ostree status --json",
                "properties": {
                  "booted": {
                    "description": "Whether the deployment is currently booted",
                    "example": true,
                    "type": "boolean"
                  },
                  "checksum": {
                    "description": "The checksum / commit of the deployment",
                    "example": "63335a77f9853618ba1a5f139c5805e82176a2a040ef5e34d7402e12263af5bb, 73335a77f9853618ba1a5f139c5805e82176a2a040ef5e34d7402e12263af5bb, 83335a77f9853618ba1a5f139c5805e82176a2a040ef5e34d7402e12263af5bb",
                    "maxLength": 64,
                    "pattern": "^[a-fA-F0-9]{64}$",
                    "type": "string"
                  },
                  "id": {
                    "description": "ID of the deployment",
                    "example": "fedora-silverblue-63335a77f9853618ba1a5f139c5805e82176a2a040ef5e34d7402e12263af5bb.0, fedora-blackpink-63335a77f9853618ba1a5f139c5805e82176a2a040ef5e34d7402e12263af5bb.0, fedora-orangeblue-63335a77f9853618ba1a5f139c5805e82176a2a040ef5e34d7402e12263af5bb.0",
                    "maxLength": 255,
                    "minLength": 1,
                    "type": "string"
                  },
                  "origin": {
                    "description": "The origin repo from which the commit was installed",
                    "example": "fedora/33/x86_64/silverblue, fedora/31/x86_64/blackpink, fedora/34/x86_64/orangeblue",
                    "maxLength": 255,
                    "type": "string"
                  },
                  "osname": {
                    "description": "The operating system name",
                    "example": "fedora-silverblue, fedora-blackpink, fedora-orangeblue",
                    "maxLength": 255,
                    "minLength": 1,
                    "type": "string"
                  },
                  "pinned": {
                    "description": "Whether the deployment is currently pinned",
                    "example": false,
                    "type": "boolean"
                  },
                  "version": {
                    "description": "The version of the deployment",
                    "example": "33.21, 31.12, 33.45",
                    "maxLength": 255,
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "checksum",
                  "origin",
                  "osname",
                  "booted",
                  "pinned"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "running_processes": {
              "items": {
                "description": "A single running process. This will be truncated to 1000 characters when saved.",
                "example": "ex1, ex2, ex3",
                "maxLength": 1000,
                "type": "string"
              },
              "type": "array"
            },
            "sap": {
              "description": "Object containing data specific to the SAP workload",
              "properties": {
                "instance_number": {
                  "description": "The instance number of the SAP HANA system (a two-digit number between 00 and 99)",
                  "example": "03, 05, 99",
                  "maxLength": 2,
                  "pattern": "^[0-9]{2}$",
                  "type": "string"
                },
                "sap_system": {
                  "description": "Indicates if SAP is installed on the system",
                  "type": "boolean"
                },
                "sids": {
                  "items": {
                    "description": "The SAP system ID (SID)",
                    "example": "H2O, ABC, XYZ",
                    "maxLength": 3,
                    "pattern": "^[A-Z][A-Z0-9]{2}$",
                    "type": "string"
                  },
                  "type": "array",
                  "uniqueItems": true
                },
                "version": {
                  "description": "The version of the SAP HANA lifecycle management program",
                  "example": "1.00.122.04.1478575636, 2.00.122.04.1478575636, 3.00.122.04.1478575636",
                  "maxLength": 22,
                  "pattern": "^[0-9]\\.[0-9]{2}\\.[0-9]{3}\\.[0-9]{2}\\.[0-9]{10}$",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "sap_instance_number": {
              "description": "The instance number of the SAP HANA system (a two-digit number between 00 and 99)",
              "example": "03, 05, 99",
              "maxLength": 2,
              "pattern": "^[0-9]{2}$",
              "type": "string"
            },
            "sap_sids": {
              "items": {
                "description": "The SAP system ID (SID)",
                "example": "H2O, ABC, XYZ",
                "maxLength": 3,
                "pattern": "^[A-Z][A-Z0-9]{2}$",
                "type": "string"
              },
              "type": "array",
              "uniqueItems": true
            },
            "sap_system": {
              "description": "Indicates if SAP is installed on the system",
              "type": "boolean"
            },
            "sap_version": {
              "description": "The version of the SAP HANA lifecycle management program",
              "example": "1.00.122.04.1478575636, 2.00.122.04.1478575636, 3.00.122.04.1478575636",
              "maxLength": 22,
              "pattern": "^[0-9]\\.[0-9]{2}\\.[0-9]{3}\\.[0-9]{2}\\.[0-9]{10}$",
              "type": "string"
            },
            "satellite_managed": {
              "type": "boolean"
            },
            "selinux_config_file": {
              "description": "The SELinux mode provided in the config file",
              "example": "permissive, sleepy, authoritative",
              "maxLength": 128,
              "type": "string"
            },
            "selinux_current_mode": {
              "description": "The current SELinux mode, either enforcing, permissive, or disabled",
              "enum": [
                "enforcing",
                "permissive",
                "disabled"
              ],
              "example": "enforcing, not_enforcing, sleeping",
              "maxLength": 10,
              "type": "string"
            },
            "subscription_auto_attach": {
              "example": "ex1, ex2, ex3",
              "maxLength": 100,
              "type": "string"
            },
            "subscription_status": {
              "example": "ex1, ex2, ex3",
              "maxLength": 100,
              "type": "string"
            },
            "system_memory_bytes": {
              "format": "int64",
              "maximum": 9007199254740991,
              "minimum": 0,
              "type": "integer"
            },
            "system_purpose": {
              "description": "Object for system purpose information",
              "properties": {
                "role": {
                  "description": "The intended role of the system",
                  "enum": [
                    "Red Hat Enterprise Linux Server",
                    "Red Hat Enterprise Linux Workstation",
                    "Red Hat Enterprise Linux Compute Node"
                  ],
                  "example": "Red Hat Enterprise Linux Server, Red Hat Enterprise Linux Workstation, Red Hat Enterprise Linux Compute Node",
                  "maxLength": 37,
                  "type": "string"
                },
                "sla": {
                  "description": "The intended SLA of the system",
                  "enum": [
                    "Premium",
                    "Standard",
                    "Self-Support"
                  ],
                  "example": "Premium, Standard, Self-Support",
                  "maxLength": 12,
                  "type": "string"
                },
                "usage": {
                  "description": "The intended usage of the system",
                  "enum": [
                    "Production",
                    "Development/Test",
                    "Disaster Recovery"
                  ],
                  "example": "Production, Development/Test, Disaster Recovery",
                  "maxLength": 17,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "system_update_method": {
              "description": "System update method",
              "enum": [
                "dnf",
                "rpm-ostree",
                "yum"
              ],
              "example": "dnf, rpm-ostree, yum",
              "maxLength": 10,
              "type": "string"
            },
            "systemd": {
              "description": "Object for whole system systemd state, as reported by systemctl status --all",
              "properties": {
                "failed": {
                  "description": "The number of jobs failed",
                  "example": 1,
                  "minimum": 0,
                  "type": "integer"
                },
                "failed_services": {
                  "description": "List of all failed jobs.",
                  "items": {
                    "description": "The name of a failed job.",
                    "example": "ex1, ex2, ex3",
                    "maxLength": 1000,
                    "type": "string"
                  },
                  "type": "array"
                },
                "jobs_queued": {
                  "description": "The number of jobs jobs_queued",
                  "example": 4,
                  "minimum": 0,
                  "type": "integer"
                },
                "state": {
                  "description": "The state of the systemd subsystem",
                  "enum": [
                    "initializing",
                    "starting",
                    "running",
                    "degraded",
                    "maintenance",
                    "stopping"
                  ],
                  "example": "initializing, starting, running, degraded, maintenance, stopping",
                  "maxLength": 12,
                  "type": "string"
                }
              },
              "required": [
                "state",
                "jobs_queued",
                "failed"
              ],
              "type": "object"
            },
            "third_party_services": {
              "description": "Object containing information about system facts of third party services",
              "properties": {
                "crowdstrike": {
                  "description": "Object containing information about CrowdStrike system facts",
                  "properties": {
                    "falcon_aid": {
                      "description": "CrowdStrike Falcon Agent ID",
                      "example": "44e3b7d20b434a2bb2815d9808fa3a8b",
                      "maxLength": 32,
                      "type": "string"
                    },
                    "falcon_backend": {
                      "description": "CrowdStrike Falcon Sensor backend",
                      "example": "auto, kernel, bpf",
                      "maxLength": 32,
                      "type": "string"
                    },
                    "falcon_version": {
                      "description": "CrowdStrike running Falcon Sensor version",
                      "example": "7.14.16703.0, 6.33.13003.0",
                      "maxLength": 32,
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "threads_per_core": {
              "description": "Number of CPU threads per CPU core. Typical values: 1, 2, 4",
              "example": 2,
              "format": "int32",
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer"
            },
            "tuned_profile": {
              "description": "Current profile resulting from command tuned-adm active",
              "example": "desktop, example, laptop",
              "maxLength": 256,
              "type": "string"
            },
            "virtual_host_uuid": {
              "description": "Hypervisor host identity (subscription manager id)",
              "example": "0ddf52cb-94e3-4ada-bdf7-d424a547b671, 6996463b-c9d4-402b-ad37-8ab5556ddf88, 0c352918-fa05-4f05-996c-6c43ec0b3c5e",
              "maxLength": 36,
              "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}",
              "type": "string"
            },
            "yum_repos": {
              "items": {
                "$ref": "#/components/schemas/SystemProfileYumRepo"
              },
              "type": "array"
            }
          },
          "title": "SystemProfile",
          "type": "object"
        },
        "SystemProfileByHostOut": {
          "allOf": [
            {
              "$ref": "#/components/schemas/PaginationOut"
            },
            {
              "properties": {
                "results": {
                  "description": "Actual host search query result entries.",
                  "items": {
                    "$ref": "#/components/schemas/HostSystemProfileOut"
                  },
                  "type": "array"
                }
              },
              "required": [
                "results"
              ],
              "type": "object"
            }
          ],
          "description": "Structure of the output of the host system profile query",
          "title": "A host system profile query result"
        },
        "SystemProfileDiskDevice": {
          "description": "Representation of one mounted device",
          "properties": {
            "device": {
              "example": "/dev/fdd0, /dev/sda1, /dev/nvme2",
              "maxLength": 2048,
              "type": "string"
            },
            "label": {
              "description": "User-defined mount label",
              "example": "foo, bar, baz",
              "maxLength": 1024,
              "type": "string"
            },
            "mount_point": {
              "description": "The mount point",
              "example": "/mnt/remote_nfs_shares, /mnt/local_nfs, /mnt/foo",
              "maxLength": 2048,
              "type": "string"
            },
            "options": {
              "$ref": "#/components/schemas/SystemProfileNestedObject",
              "description": "Mount options for nested object",
              "example": {
                "ro": true,
                "uid": "0"
              }
            },
            "type": {
              "description": "The mount type",
              "example": "ext1, ext2, ext3",
              "maxLength": 256,
              "type": "string"
            }
          },
          "type": "object"
        },
        "SystemProfileDnfModule": {
          "description": "Representation of one DNF module",
          "properties": {
            "name": {
              "example": "abc, dfg, pop",
              "maxLength": 128,
              "type": "string"
            },
            "stream": {
              "example": "abc, dfg, pop",
              "maxLength": 2048,
              "type": "string"
            }
          },
          "type": "object"
        },
        "SystemProfileInstalledProduct": {
          "description": "Representation of one installed product",
          "properties": {
            "id": {
              "description": "The product ID",
              "example": "abc, dfg, pop",
              "maxLength": 64,
              "type": "string"
            },
            "name": {
              "example": "abc, dfg, pop",
              "maxLength": 512,
              "type": "string"
            },
            "status": {
              "description": "Subscription status for product",
              "example": "Subscribed, inactive, canceled",
              "maxLength": 256,
              "type": "string"
            }
          },
          "type": "object"
        },
        "SystemProfileNestedObject": {
          "additionalProperties": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SystemProfileNestedObject"
              },
              {
                "not": {
                  "type": "object"
                }
              }
            ]
          },
          "description": "An arbitrary object that does not allow empty string keys.",
          "type": "object",
          "x-propertyNames": {
            "minLength": 1
          }
        },
        "SystemProfileNetworkInterface": {
          "description": "Representation of one network interface",
          "properties": {
            "ipv4_addresses": {
              "items": {
                "description": "The ipv4 address of the system",
                "example": "227.161.169.210 30.143.76.153 233.87.178.7, 60.209.47.155 40.124.217.134, 67.77.119.70",
                "format": "ipv4",
                "type": "string"
              },
              "type": "array"
            },
            "ipv6_addresses": {
              "items": {
                "description": "The ipv6 address of the system",
                "example": "8886:2565:f753:1bbb:1d08:4239:c470:a889, dd2e:879f:afff:7845:b346:bb88:bcf2:4b1b, e979:3081:7218:4c98:fd19:5777:309a:957b",
                "format": "ipv6",
                "type": "string"
              },
              "type": "array"
            },
            "mac_address": {
              "description": "MAC address (with or without colons)",
              "example": "00:00:00:00:00:00, 100000000000, 20:00:00:00:00:00",
              "maxLength": 59,
              "pattern": "^([A-Fa-f0-9]{2}[:-]){5}[A-Fa-f0-9]{2}$|^([A-Fa-f0-9]{4}[.]){2}[A-Fa-f0-9]{4}$|^[A-Fa-f0-9]{12}$|^([A-Fa-f0-9]{2}[:-]){19}[A-Fa-f0-9]{2}$|^[A-Fa-f0-9]{40}$",
              "type": "string"
            },
            "mtu": {
              "description": "MTU (Maximum transmission unit)",
              "format": "int32",
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer"
            },
            "name": {
              "description": "Name of interface",
              "example": "eth0, eth1, eth2",
              "maxLength": 50,
              "minLength": 1,
              "type": "string"
            },
            "state": {
              "description": "Interface state (UP, DOWN, UNKNOWN)",
              "example": "UP, DOWN, UNKNOWN",
              "maxLength": 25,
              "type": "string"
            },
            "type": {
              "description": "Interface type (ether, loopback)",
              "example": "ether, infiniband, loopback",
              "maxLength": 18,
              "type": "string"
            }
          },
          "type": "object"
        },
        "SystemProfileOperatingSystemOut": {
          "properties": {
            "count": {
              "$ref": "#/components/schemas/Count"
            },
            "results": {
              "description": "The list of operating_system values on the account",
              "items": {
                "properties": {
                  "count": {
                    "type": "integer"
                  },
                  "value": {
                    "properties": {
                      "major": {
                        "nullable": true,
                        "type": "integer"
                      },
                      "minor": {
                        "nullable": true,
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "total": {
              "$ref": "#/components/schemas/Total"
            }
          }
        },
        "SystemProfileSapSystemOut": {
          "properties": {
            "count": {
              "$ref": "#/components/schemas/Count"
            },
            "results": {
              "description": "The list of sap_system values on the account",
              "items": {
                "properties": {
                  "count": {
                    "type": "integer"
                  },
                  "value": {
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "boolean"
                      }
                    ]
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "total": {
              "$ref": "#/components/schemas/Total"
            }
          },
          "type": "object"
        },
        "SystemProfileYumRepo": {
          "description": "Representation of one yum repository",
          "properties": {
            "base_url": {
              "example": "abc, dfg, pop",
              "format": "uri",
              "maxLength": 2048,
              "type": "string"
            },
            "enabled": {
              "type": "boolean"
            },
            "gpgcheck": {
              "type": "boolean"
            },
            "id": {
              "example": "abc, dfg, pop",
              "maxLength": 256,
              "type": "string"
            },
            "mirrorlist": {
              "description": "URL of a mirrorlist for the repository",
              "example": "https://rhui.redhat.com/pulp/mirror/content/dist/rhel8/rhui/$releasever/$basearch/baseos/os",
              "format": "uri",
              "maxLength": 2048,
              "type": "string"
            },
            "name": {
              "example": "abc, dfg, pop",
              "maxLength": 1024,
              "type": "string"
            }
          },
          "type": "object"
        },
        "TagCountOut": {
          "allOf": [
            {
              "$ref": "#/components/schemas/PaginationOut"
            },
            {
              "properties": {
                "results": {
                  "additionalProperties": {
                    "type": "integer"
                  },
                  "description": "The list of tags on the systems",
                  "type": "object"
                }
              },
              "type": "object"
            }
          ]
        },
        "TagsOut": {
          "allOf": [
            {
              "$ref": "#/components/schemas/PaginationOut"
            },
            {
              "properties": {
                "results": {
                  "additionalProperties": {
                    "items": {
                      "$ref": "#/components/schemas/StructuredTag"
                    },
                    "type": "array"
                  },
                  "description": "The list of tags on the systems",
                  "type": "object"
                }
              },
              "type": "object"
            }
          ]
        },
        "TimeStamp": {
          "example": "2020-02-10T08:07:03.354307+00:00",
          "format": "date-time",
          "type": "string"
        },
        "Total": {
          "description": "Total number of items",
          "type": "integer"
        },
        "UnleashToggleOut": {
          "properties": {
            "flag_value": {
              "description": "The value of the feature flag toggle",
              "type": "boolean"
            },
            "using_fallback_value": {
              "description": "Whether the fallback value was used, if the Unleash server could not be accessed",
              "type": "boolean"
            }
          },
          "title": "Unleash Toggle Out"
        }
      },
      "securitySchemes": {
        "Authorization": {
          "in": "header",
          "name": "Authorization",
          "type": "apiKey"
        },
        "BearerAuth": {
          "scheme": "bearer",
          "type": "http",
          "x-bearerInfoFunc": "app.auth.bearer_token_handler"
        }
      }
    },
    "info": {
      "description": "REST interface for the Insights Platform Host Inventory application.",
      "title": "Insights Host Inventory REST Interface",
      "version": "1.0.0"
    },
    "openapi": "3.0.0",
    "paths": {
      "/account/staleness": {
        "delete": {
          "description": "Delete an account staleness <br /><br /> Required permissions: staleness:staleness:write",
          "operationId": "api.staleness.delete_staleness",
          "responses": {
            "204": {
              "description": "Successfully deleted account staleness."
            },
            "400": {
              "description": "Invalid request."
            },
            "404": {
              "description": "Account Staleness not found."
            }
          },
          "security": [
            {
              "ApiKeyAuth": []
            },
            {
              "BearerAuth": []
            }
          ],
          "summary": "Delete an account staleness",
          "tags": [
            "accounts_staleness"
          ]
        },
        "get": {
          "description": "Read the entire list of all accounts staleness available. Required permissions: staleness:staleness:read",
          "operationId": "api.staleness.get_staleness",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/StalenessOutput"
                  }
                }
              },
              "description": "Successfully read the staleness account."
            },
            "400": {
              "description": "Invalid request."
            }
          },
          "security": [
            {
              "ApiKeyAuth": []
            },
            {
              "BearerAuth": []
            }
          ],
          "summary": "Read the entire list of account staleness",
          "tags": [
            "accounts_staleness"
          ]
        },
        "patch": {
          "description": "Update account staleness record. Required permissions: staleness:staleness:write",
          "operationId": "api.staleness.update_staleness",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StalenessIn"
                }
              }
            },
            "description": "Data required to update a record for a account staleness.",
            "required": true
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/StalenessOutput"
                  }
                }
              },
              "description": "Successfully account staleness updated."
            },
            "400": {
              "description": "Invalid request."
            },
            "404": {
              "description": "Staleness record not found."
            }
          },
          "security": [
            {
              "ApiKeyAuth": []
            },
            {
              "BearerAuth": []
            }
          ],
          "summary": "Update account staleness record",
          "tags": [
            "accounts_staleness"
          ]
        },
        "post": {
          "description": "Create account staleness record. Required permissions: staleness:staleness:write",
          "operationId": "api.staleness.create_staleness",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StalenessIn"
                }
              }
            },
            "description": "Data required to create a record for a account staleness.",
            "required": true
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/StalenessOutput"
                  }
                }
              },
              "description": "Successfully account staleness created."
            },
            "400": {
              "description": "Invalid request."
            }
          },
          "security": [
            {
              "ApiKeyAuth": []
            },
            {
              "BearerAuth": []
            }
          ],
          "summary": "Create account staleness record",
          "tags": [
            "accounts_staleness"
          ]
        }
      },
      "/account/staleness/defaults": {
        "get": {
          "description": "Read the entire list of all accounts staleness available. Required permissions: staleness:staleness:read",
          "operationId": "api.staleness.get_default_staleness",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/StalenessOutput"
                  }
                }
              },
              "description": "Successfully read the staleness account."
            },
            "400": {
              "description": "Invalid request."
            }
          },
          "security": [
            {
              "ApiKeyAuth": []
            },
            {
              "BearerAuth": []
            }
          ],
          "summary": "Read the entire list of account staleness",
          "tags": [
            "accounts_staleness"
          ]
        }
      },
      "/groups": {
        "get": {
          "description": "Read the entire list of all groups available to the account. <br /><br /> Required permissions: inventory:groups:read",
          "operationId": "api.group.get_group_list",
          "parameters": [
            {
              "$ref": "#/components/parameters/groupName"
            },
            {
              "$ref": "#/components/parameters/perPageParam"
            },
            {
              "$ref": "#/components/parameters/pageParam"
            },
            {
              "$ref": "#/components/parameters/groupOrderByParam"
            },
            {
              "$ref": "#/components/parameters/groupOrderHowParam"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GroupQueryOutput"
                  }
                }
              },
              "description": "Successfully read the groups list."
            },
            "400": {
              "description": "Groups not found."
            }
          },
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "summary": "Read the entire list of groups",
          "tags": [
            "groups"
          ]
        },
        "post": {
          "description": "Creates a new group containing the hosts associated with the host IDs provided. <br /><br /> Required permissions: inventory:groups:write",
          "operationId": "api.group.create_group",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupIn"
                }
              }
            },
            "description": "Data required to create a record for a group.",
            "required": true
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GroupOutWithHostCount"
                  }
                }
              },
              "description": "Successfully created new Group."
            },
            "400": {
              "description": "Invalid request."
            },
            "403": {
              "description": "Forbidden - Invalid RBAC permission."
            }
          },
          "security": [
            {
              "ApiKeyAuth": []
            },
            {
              "BearerAuth": []
            }
          ],
          "summary": "Create a new group matching the provided name and list of hosts IDs",
          "tags": [
            "groups"
          ]
        }
      },
      "/groups/hosts/{host_id_list}": {
        "delete": {
          "description": "Delete a list of hosts from the groups they are in. <br /><br /> Required permissions: inventory:groups:write",
          "operationId": "api.group.delete_hosts_from_different_groups",
          "parameters": [
            {
              "$ref": "#/components/parameters/hostIdList"
            }
          ],
          "responses": {
            "204": {
              "description": "The hosts were successfully removed from their groups."
            },
            "400": {
              "description": "Invalid request."
            },
            "404": {
              "description": "The provided hosts are ungrouped."
            }
          },
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "summary": "Delete a list of hosts from the groups they are in",
          "tags": [
            "groups"
          ]
        }
      },
      "/groups/{group_id_list}": {
        "delete": {
          "description": "Delete a list of groups. <br /><br /> Required permissions: inventory:groups:write",
          "operationId": "api.group.delete_groups",
          "parameters": [
            {
              "$ref": "#/components/parameters/groupIdList"
            }
          ],
          "responses": {
            "204": {
              "description": "The groups were successfully deleted."
            },
            "400": {
              "description": "Invalid request."
            }
          },
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "summary": "Delete a list of groups",
          "tags": [
            "groups"
          ]
        },
        "get": {
          "description": "Find one or more groups by their IDs. <br /><br /> Required permissions: inventory:groups:read",
          "operationId": "api.group.get_groups_by_id",
          "parameters": [
            {
              "$ref": "#/components/parameters/groupIdList"
            },
            {
              "$ref": "#/components/parameters/perPageParam"
            },
            {
              "$ref": "#/components/parameters/pageParam"
            },
            {
              "$ref": "#/components/parameters/groupOrderByParam"
            },
            {
              "$ref": "#/components/parameters/groupOrderHowParam"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GroupQueryOutput"
                  }
                }
              },
              "description": "Successfully searched for groups."
            },
            "400": {
              "description": "Invalid request."
            },
            "404": {
              "description": "Groups not found."
            }
          },
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "summary": "Find groups by their IDs",
          "tags": [
            "groups"
          ]
        }
      },
      "/groups/{group_id}": {
        "patch": {
          "description": "Merge group information. <br /><br /> Required permissions: inventory:groups:write",
          "operationId": "api.group.patch_group_by_id",
          "parameters": [
            {
              "$ref": "#/components/parameters/groupId"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupIn"
                }
              }
            },
            "description": "A dictionary with new information to merge with the original group.",
            "required": true
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GroupOutWithHostCount"
                  }
                }
              },
              "description": "Group information successfully or already previously merged."
            },
            "400": {
              "description": "Invalid request."
            },
            "404": {
              "description": "Group not found."
            }
          },
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "summary": "Merge group information",
          "tags": [
            "groups"
          ]
        }
      },
      "/groups/{group_id}/hosts": {
        "post": {
          "description": "Adds the host list in the request body to the provided group. <br /><br /> Required permissions: inventory:groups:write",
          "operationId": "api.host_group.add_host_list_to_group",
          "parameters": [
            {
              "$ref": "#/components/parameters/groupId"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostIds"
                }
              }
            },
            "description": "A list of hosts IDs to associate with the provided group.",
            "required": true
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GroupOutWithHostCount"
                  }
                }
              },
              "description": "Hosts successfully or already previously associated with group."
            },
            "400": {
              "description": "Invalid request."
            },
            "404": {
              "description": "Group not found."
            }
          },
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "summary": "Add host IDs to the provided group",
          "tags": [
            "groups"
          ]
        }
      },
      "/groups/{group_id}/hosts/{host_id_list}": {
        "delete": {
          "description": "Delete one or more hosts from a group. <br /><br /> Required permissions: inventory:groups:write",
          "operationId": "api.host_group.delete_hosts_from_group",
          "parameters": [
            {
              "$ref": "#/components/parameters/groupId"
            },
            {
              "$ref": "#/components/parameters/hostIdList"
            }
          ],
          "responses": {
            "204": {
              "description": "Successfully deleted hosts."
            },
            "400": {
              "description": "Invalid request."
            }
          },
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "summary": "Delete one or more hosts from a group",
          "tags": [
            "groups"
          ]
        }
      },
      "/host_exists": {
        "get": {
          "description": "Find one host by insights_id, if it exists. <br /><br /> Required permissions: inventory:hosts:read",
          "operationId": "api.host.get_host_exists",
          "parameters": [
            {
              "$ref": "#/components/parameters/insightsId"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HostIdOut"
                  }
                }
              },
              "description": "Found a matching host."
            },
            "400": {
              "description": "Invalid request."
            },
            "404": {
              "description": "Host not found."
            },
            "409": {
              "description": "Multiple matching hosts detected."
            }
          },
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "summary": "Find one host by insights_id, if it exists",
          "tags": [
            "hosts"
          ]
        }
      },
      "/hosts": {
        "delete": {
          "description": "Delete the entire list of hosts filtered by the given parameters. <br /><br /> Required permissions: inventory:hosts:write",
          "operationId": "api.host.delete_hosts_by_filter",
          "parameters": [
            {
              "$ref": "#/components/parameters/displayName"
            },
            {
              "$ref": "#/components/parameters/fqdn"
            },
            {
              "$ref": "#/components/parameters/hostnameOrId"
            },
            {
              "$ref": "#/components/parameters/insightsId"
            },
            {
              "$ref": "#/components/parameters/providerId"
            },
            {
              "$ref": "#/components/parameters/providerType"
            },
            {
              "$ref": "#/components/parameters/updatedStart"
            },
            {
              "$ref": "#/components/parameters/updatedEnd"
            },
            {
              "$ref": "#/components/parameters/groupNameListParam"
            },
            {
              "$ref": "#/components/parameters/registered_with"
            },
            {
              "$ref": "#/components/parameters/stalenessNoDefaultsParam"
            },
            {
              "$ref": "#/components/parameters/tagsParam"
            },
            {
              "$ref": "#/components/parameters/filter_param"
            }
          ],
          "responses": {
            "202": {
              "description": "Request for deletion of filtered hosts has been accepted."
            },
            "400": {
              "description": "Invalid request."
            }
          },
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "summary": "Delete the entire list of hosts filtered by the given parameters",
          "tags": [
            "hosts"
          ]
        },
        "get": {
          "description": "Read the entire list of all hosts available to the account. <br /><br /> Required permissions: inventory:hosts:read",
          "operationId": "api.host.get_host_list",
          "parameters": [
            {
              "$ref": "#/components/parameters/displayName"
            },
            {
              "$ref": "#/components/parameters/fqdn"
            },
            {
              "$ref": "#/components/parameters/hostnameOrId"
            },
            {
              "$ref": "#/components/parameters/insightsId"
            },
            {
              "$ref": "#/components/parameters/providerId"
            },
            {
              "$ref": "#/components/parameters/providerType"
            },
            {
              "$ref": "#/components/parameters/updatedStart"
            },
            {
              "$ref": "#/components/parameters/updatedEnd"
            },
            {
              "$ref": "#/components/parameters/groupNameListParam"
            },
            {
              "$ref": "#/components/parameters/branchId"
            },
            {
              "$ref": "#/components/parameters/perPageParam"
            },
            {
              "$ref": "#/components/parameters/pageParam"
            },
            {
              "$ref": "#/components/parameters/hostOrderByParam"
            },
            {
              "$ref": "#/components/parameters/hostOrderHowParam"
            },
            {
              "$ref": "#/components/parameters/stalenessParam"
            },
            {
              "$ref": "#/components/parameters/tagsParam"
            },
            {
              "$ref": "#/components/parameters/registered_with"
            },
            {
              "$ref": "#/components/parameters/filter_param"
            },
            {
              "$ref": "#/components/parameters/fields_param"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HostQueryOutput"
                  }
                }
              },
              "description": "Successfully read the hosts list."
            }
          },
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "summary": "Read the entire list of hosts",
          "tags": [
            "hosts"
          ]
        }
      },
      "/hosts/all": {
        "delete": {
          "description": "Delete all hosts on the account.  The request must include \"confirm_delete_all=true\". <br /><br /> Required permissions: inventory:hosts:write",
          "operationId": "api.host.delete_all_hosts",
          "parameters": [
            {
              "$ref": "#/components/parameters/confirmDeleteAll"
            }
          ],
          "responses": {
            "202": {
              "description": "Request for deleting all hosts has been accepted."
            },
            "400": {
              "description": "Invalid request."
            }
          },
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "summary": "Delete all hosts on the account",
          "tags": [
            "hosts"
          ]
        }
      },
      "/hosts/checkin": {
        "post": {
          "description": "Finds a host and updates its staleness timestamps. It uses the supplied canonical facts to determine which host to update. By default, the staleness timestamp is set to 1 hour from when the request is received; however, this can be overridden by supplying the interval. <br /><br /> Required permissions: inventory:hosts:write",
          "operationId": "api.host.host_checkin",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCheckIn"
                }
              }
            },
            "description": "Data required to create a check-in record for a host.",
            "required": true
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HostOut"
                  }
                }
              },
              "description": "Successfully checked in Host."
            },
            "404": {
              "description": "Not Found."
            }
          },
          "security": [
            {
              "ApiKeyAuth": []
            },
            {
              "BearerAuth": []
            }
          ],
          "summary": "Update staleness timestamps for a host matching the provided facts",
          "tags": [
            "hosts"
          ]
        }
      },
      "/hosts/{host_id_list}": {
        "delete": {
          "description": "Delete hosts by IDs <br /><br /> Required permissions: inventory:hosts:write",
          "operationId": "api.host.delete_host_by_id",
          "parameters": [
            {
              "$ref": "#/components/parameters/hostIdList"
            },
            {
              "$ref": "#/components/parameters/branchId"
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully deleted hosts."
            },
            "400": {
              "description": "Invalid request."
            },
            "404": {
              "description": "Host not found."
            }
          },
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "summary": "Delete hosts by IDs",
          "tags": [
            "hosts"
          ]
        },
        "get": {
          "description": "Find one or more hosts by their ID. <br /><br /> Required permissions: inventory:hosts:read",
          "operationId": "api.host.get_host_by_id",
          "parameters": [
            {
              "$ref": "#/components/parameters/hostIdList"
            },
            {
              "$ref": "#/components/parameters/branchId"
            },
            {
              "$ref": "#/components/parameters/perPageParam"
            },
            {
              "$ref": "#/components/parameters/pageParam"
            },
            {
              "$ref": "#/components/parameters/hostOrderByParam"
            },
            {
              "$ref": "#/components/parameters/hostOrderHowParam"
            },
            {
              "$ref": "#/components/parameters/fields_param"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HostQueryOutput"
                  }
                }
              },
              "description": "Successfully searched for hosts."
            },
            "400": {
              "description": "Invalid request."
            },
            "404": {
              "description": "Host not found."
            }
          },
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "summary": "Find hosts by their IDs",
          "tags": [
            "hosts"
          ]
        },
        "patch": {
          "description": "Update hosts <br /><br /> Required permissions: inventory:hosts:write",
          "operationId": "api.host.patch_host_by_id",
          "parameters": [
            {
              "$ref": "#/components/parameters/hostIdList"
            },
            {
              "$ref": "#/components/parameters/branchId"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchHostIn"
                }
              }
            },
            "description": "A group of fields to be updated on the hosts",
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successfully updated the hosts."
            },
            "400": {
              "description": "Invalid request."
            },
            "404": {
              "description": "Host not found."
            }
          },
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "summary": "Update hosts",
          "tags": [
            "hosts"
          ]
        }
      },
      "/hosts/{host_id_list}/facts/{namespace}": {
        "patch": {
          "description": "Merge one or multiple hosts facts under a namespace. <br /><br /> Required permissions: inventory:hosts:write",
          "operationId": "api.host.merge_facts",
          "parameters": [
            {
              "$ref": "#/components/parameters/hostIdList"
            },
            {
              "$ref": "#/components/parameters/factsNamespace"
            },
            {
              "$ref": "#/components/parameters/branchId"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Facts"
                }
              }
            },
            "description": "A dictionary with the new facts to merge with the original ones.",
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successfully merged facts."
            },
            "400": {
              "description": "Invalid request."
            },
            "404": {
              "description": "Host or namespace not found."
            }
          },
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "summary": "Merge facts under a namespace",
          "tags": [
            "hosts"
          ]
        },
        "put": {
          "description": "Replace facts under a namespace <br /><br /> Required permissions: inventory:hosts:write",
          "operationId": "api.host.replace_facts",
          "parameters": [
            {
              "$ref": "#/components/parameters/hostIdList"
            },
            {
              "$ref": "#/components/parameters/factsNamespace"
            },
            {
              "$ref": "#/components/parameters/branchId"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Facts"
                }
              }
            },
            "description": "A dictionary with the new facts to replace the original ones.",
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successfully replaced facts."
            },
            "400": {
              "description": "Invalid request."
            },
            "404": {
              "description": "Host or namespace not found."
            }
          },
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "summary": "Replace facts under a namespace",
          "tags": [
            "hosts"
          ]
        }
      },
      "/hosts/{host_id_list}/system_profile": {
        "get": {
          "description": "Find one or more hosts by their ID and return the id and system profile <br /><br /> Required permissions: inventory:hosts:read",
          "operationId": "api.host.get_host_system_profile_by_id",
          "parameters": [
            {
              "$ref": "#/components/parameters/hostIdList"
            },
            {
              "$ref": "#/components/parameters/perPageParam"
            },
            {
              "$ref": "#/components/parameters/pageParam"
            },
            {
              "$ref": "#/components/parameters/hostOrderByParam"
            },
            {
              "$ref": "#/components/parameters/hostOrderHowParam"
            },
            {
              "$ref": "#/components/parameters/branchId"
            },
            {
              "$ref": "#/components/parameters/fields_param"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SystemProfileByHostOut"
                  }
                }
              },
              "description": "Successfully searched for hosts."
            },
            "400": {
              "description": "Invalid request."
            },
            "404": {
              "description": "Host not found."
            }
          },
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "summary": "Return one or more hosts system profile",
          "tags": [
            "hosts"
          ]
        }
      },
      "/hosts/{host_id_list}/tags": {
        "get": {
          "description": "Get the tags on a host <br /><br /> Required permissions: inventory:hosts:read",
          "operationId": "api.host.get_host_tags",
          "parameters": [
            {
              "$ref": "#/components/parameters/hostIdList"
            },
            {
              "$ref": "#/components/parameters/perPageParam"
            },
            {
              "$ref": "#/components/parameters/pageParam"
            },
            {
              "$ref": "#/components/parameters/hostOrderByParam"
            },
            {
              "$ref": "#/components/parameters/hostOrderHowParam"
            },
            {
              "$ref": "#/components/parameters/searchParam"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TagsOut"
                  }
                }
              },
              "description": "Successfully found tags."
            },
            "400": {
              "description": "Invalid request."
            }
          },
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "summary": "Get the tags on a host",
          "tags": [
            "hosts"
          ]
        }
      },
      "/hosts/{host_id_list}/tags/count": {
        "get": {
          "description": "Get the number of tags on a host or hosts <br /><br /> Required permissions: inventory:hosts:read",
          "operationId": "api.host.get_host_tag_count",
          "parameters": [
            {
              "$ref": "#/components/parameters/hostIdList"
            },
            {
              "$ref": "#/components/parameters/perPageParam"
            },
            {
              "$ref": "#/components/parameters/pageParam"
            },
            {
              "$ref": "#/components/parameters/hostOrderByParam"
            },
            {
              "$ref": "#/components/parameters/hostOrderHowParam"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TagCountOut"
                  }
                }
              },
              "description": "Successfully found tag count."
            },
            "400": {
              "description": "Invalid request."
            }
          },
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "summary": "Get the number of tags on a host or hosts",
          "tags": [
            "hosts"
          ]
        }
      },
      "/resource-types": {
        "get": {
          "description": "Returns the list of available RBAC resource types. <br /><br /> Required permissions: rbac:*:*",
          "operationId": "api.resource_type.get_resource_type_list",
          "parameters": [
            {
              "$ref": "#/components/parameters/resourceTypesPerPageParam"
            },
            {
              "$ref": "#/components/parameters/pageParam"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ResourceTypesQueryOutput"
                  }
                }
              },
              "description": "Successfully read the resource types list."
            },
            "400": {
              "description": "Resource types not found."
            }
          },
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "summary": "Get the list of resource types",
          "tags": [
            "resource-types"
          ]
        }
      },
      "/resource-types/inventory-groups": {
        "get": {
          "description": "Returns the list of groups in the current account. <br /><br /> Required permissions: rbac:*:*",
          "operationId": "api.resource_type.get_resource_type_groups_list",
          "parameters": [
            {
              "$ref": "#/components/parameters/groupName"
            },
            {
              "$ref": "#/components/parameters/resourceTypesPerPageParam"
            },
            {
              "$ref": "#/components/parameters/pageParam"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ResourceTypesGroupsQueryOutput"
                  }
                }
              },
              "description": "Successfully read the resource-types groups list."
            },
            "400": {
              "description": "Groups not found."
            }
          },
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "summary": "Get the list of inventory groups in resource-types format",
          "tags": [
            "resource-types"
          ]
        }
      },
      "/system_profile/operating_system": {
        "get": {
          "description": "Required permissions: inventory:hosts:read",
          "operationId": "api.system_profile.get_operating_system",
          "parameters": [
            {
              "$ref": "#/components/parameters/tagsParam"
            },
            {
              "$ref": "#/components/parameters/perPageParam"
            },
            {
              "$ref": "#/components/parameters/pageParam"
            },
            {
              "$ref": "#/components/parameters/stalenessParam"
            },
            {
              "$ref": "#/components/parameters/registered_with"
            },
            {
              "$ref": "#/components/parameters/filter_param"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SystemProfileOperatingSystemOut"
                  }
                }
              },
              "description": "operating system versions and counts on the account"
            },
            "400": {
              "description": "Invalid request."
            },
            "404": {
              "$ref": "#/components/responses/PageOutOfBounds"
            }
          },
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "summary": "get all operating system versions and counts on the account",
          "tags": [
            "system_profile"
          ]
        }
      },
      "/system_profile/sap_sids": {
        "get": {
          "description": "Required permissions: inventory:hosts:read",
          "operationId": "api.system_profile.get_sap_sids",
          "parameters": [
            {
              "$ref": "#/components/parameters/searchParam"
            },
            {
              "$ref": "#/components/parameters/tagsParam"
            },
            {
              "$ref": "#/components/parameters/perPageParam"
            },
            {
              "$ref": "#/components/parameters/pageParam"
            },
            {
              "$ref": "#/components/parameters/stalenessParam"
            },
            {
              "$ref": "#/components/parameters/registered_with"
            },
            {
              "$ref": "#/components/parameters/filter_param"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SystemProfileSapSystemOut"
                  }
                }
              },
              "description": "sap_system values and counts for the account"
            },
            "400": {
              "description": "Invalid request."
            },
            "404": {
              "$ref": "#/components/responses/PageOutOfBounds"
            }
          },
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "summary": "get all sap sids values and counts on the account",
          "tags": [
            "system_profile"
          ]
        }
      },
      "/system_profile/sap_system": {
        "get": {
          "description": "Required permissions: inventory:hosts:read",
          "operationId": "api.system_profile.get_sap_system",
          "parameters": [
            {
              "$ref": "#/components/parameters/tagsParam"
            },
            {
              "$ref": "#/components/parameters/perPageParam"
            },
            {
              "$ref": "#/components/parameters/pageParam"
            },
            {
              "$ref": "#/components/parameters/stalenessParam"
            },
            {
              "$ref": "#/components/parameters/registered_with"
            },
            {
              "$ref": "#/components/parameters/filter_param"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SystemProfileSapSystemOut"
                  }
                }
              },
              "description": "sap_system values and counts for the account"
            },
            "400": {
              "description": "Invalid request."
            },
            "404": {
              "$ref": "#/components/responses/PageOutOfBounds"
            }
          },
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "summary": "get all sap system values and counts on the account",
          "tags": [
            "system_profile"
          ]
        }
      },
      "/system_profile/validate_schema": {
        "post": {
          "description": "Validates System Profile data from recent Kafka messages against a given spec, and compares it with the current one. Only HBI Admins can access this endpoint.",
          "operationId": "api.system_profile.validate_schema",
          "parameters": [
            {
              "description": "The fork of the inventory-schemas repo to use",
              "in": "query",
              "name": "repo_fork",
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The branch of the inventory-schemas repo to use",
              "in": "query",
              "name": "repo_branch",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "How many days worth of data to validate",
              "in": "query",
              "name": "days",
              "schema": {
                "minimum": 1,
                "type": "integer"
              }
            },
            {
              "description": "Stops polling when this number of messages has been collected",
              "in": "query",
              "name": "max_messages",
              "schema": {
                "default": 10000,
                "minimum": 1,
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Host validation results"
            },
            "403": {
              "description": "Forbidden"
            }
          },
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "summary": "validate system profile schema",
          "tags": [
            "system_profile"
          ]
        }
      },
      "/tags": {
        "get": {
          "description": "Required permissions: inventory:hosts:read",
          "operationId": "api.tag.get_tags",
          "parameters": [
            {
              "$ref": "#/components/parameters/tagsParam"
            },
            {
              "$ref": "#/components/parameters/tagsOrderBy"
            },
            {
              "$ref": "#/components/parameters/tagsOrderHow"
            },
            {
              "$ref": "#/components/parameters/perPageParam"
            },
            {
              "$ref": "#/components/parameters/pageParam"
            },
            {
              "$ref": "#/components/parameters/stalenessParam"
            },
            {
              "$ref": "#/components/parameters/searchParam"
            },
            {
              "$ref": "#/components/parameters/displayName"
            },
            {
              "$ref": "#/components/parameters/fqdn"
            },
            {
              "$ref": "#/components/parameters/hostnameOrId"
            },
            {
              "$ref": "#/components/parameters/insightsId"
            },
            {
              "$ref": "#/components/parameters/providerId"
            },
            {
              "$ref": "#/components/parameters/providerType"
            },
            {
              "$ref": "#/components/parameters/updatedStart"
            },
            {
              "$ref": "#/components/parameters/updatedEnd"
            },
            {
              "$ref": "#/components/parameters/groupNameListParam"
            },
            {
              "$ref": "#/components/parameters/registered_with"
            },
            {
              "$ref": "#/components/parameters/filter_param"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ActiveTags"
                  }
                }
              },
              "description": "Tags"
            },
            "400": {
              "description": "Invalid request."
            },
            "404": {
              "$ref": "#/components/responses/PageOutOfBounds"
            }
          },
          "security": [
            {
              "ApiKeyAuth": []
            }
          ],
          "summary": "Get the active host tags for a given account",
          "tags": [
            "tags"
          ]
        }
      }
    }
  }
}