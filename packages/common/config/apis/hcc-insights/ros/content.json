{
  "extras": {},
  "openapi": {
    "components": {
      "parameters": {
        "filterOSParam": {
          "description": "Filter system with the given RHEL OS version. Eg, 8.4",
          "in": "query",
          "name": "os",
          "required": false,
          "schema": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "filterParam": {
          "description": "Filter system with the given display name ",
          "in": "query",
          "name": "display_name",
          "required": false,
          "schema": {
            "type": "string"
          }
        },
        "filterStateParam": {
          "description": "Filter system with the given state",
          "in": "query",
          "name": "state",
          "required": false,
          "schema": {
            "items": {
              "enum": [
                "Idling",
                "Oversized",
                "Undersized",
                "Optimized",
                "Under pressure",
                "Waiting for data"
              ],
              "type": "string"
            },
            "type": "array"
          }
        },
        "limitParam": {
          "description": "Number of items to return",
          "in": "query",
          "name": "limit",
          "required": false,
          "schema": {
            "default": 10,
            "type": "integer"
          }
        },
        "offsetParam": {
          "description": "Number of items to skip before starting to collect the result set",
          "in": "query",
          "name": "offset",
          "required": false,
          "schema": {
            "default": 0,
            "type": "integer"
          }
        },
        "orderByParam": {
          "description": "Ordering field name, defaults to report_date",
          "in": "query",
          "name": "order_by",
          "required": false,
          "schema": {
            "default": "report_date",
            "enum": [
              "display_name",
              "cpu",
              "memory",
              "max_io",
              "number_of_suggestions",
              "state",
              "os",
              "report_date"
            ],
            "type": "string"
          }
        },
        "orderHowParam": {
          "description": "Direction of the ordering, defaults to DESC",
          "in": "query",
          "name": "order_how",
          "required": false,
          "schema": {
            "default": "DESC",
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string"
          }
        }
      },
      "schemas": {
        "ExecutiveReportItem": {
          "properties": {
            "conditions": {
              "properties": {
                "cpu": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "oversized": {
                      "type": "integer"
                    },
                    "percentage": {
                      "type": "number"
                    },
                    "under_pressure": {
                      "type": "integer"
                    },
                    "undersized": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "instance_types_highlights": {
                  "properties": {
                    "current": {
                      "properties": {
                        "count": {
                          "type": "integer"
                        },
                        "desc": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "historical": {
                      "properties": {
                        "count": {
                          "type": "integer"
                        },
                        "desc": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "suggested": {
                      "properties": {
                        "count": {
                          "type": "integer"
                        },
                        "desc": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "io": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "oversized": {
                      "type": "integer"
                    },
                    "percentage": {
                      "type": "number"
                    },
                    "under_pressure": {
                      "type": "integer"
                    },
                    "undersized": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "memory": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "oversized": {
                      "type": "integer"
                    },
                    "percentage": {
                      "type": "number"
                    },
                    "under_pressure": {
                      "type": "integer"
                    },
                    "undersized": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "meta": {
                  "properties": {
                    "conditions_count": {
                      "type": "integer"
                    },
                    "non_optimized_count": {
                      "type": "integer"
                    },
                    "non_psi_count": {
                      "type": "integer"
                    },
                    "psi_enabled_count": {
                      "type": "integer"
                    },
                    "stale_count": {
                      "type": "integer"
                    },
                    "total_count": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "systems_per_state": {
              "properties": {
                "idling": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "percentage": {
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "oversized": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "percentage": {
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "under_pressure": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "percentage": {
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "undersized": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "percentage": {
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "waiting_for_data": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "percentage": {
                      "type": "number"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "IsServiceConfigured": {
          "properties": {
            "code": {
              "type": "string"
            },
            "count": {
              "type": "integer"
            },
            "success": {
              "type": "boolean"
            },
            "systems_stats": {
              "properties": {
                "waiting_for_data": {
                  "type": "integer"
                },
                "with_suggestions": {
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "Links": {
          "properties": {
            "first": {
              "type": "string"
            },
            "last": {
              "type": "string"
            },
            "next": {
              "type": "string"
            },
            "previous": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "ListMeta": {
          "properties": {
            "count": {
              "type": "integer"
            },
            "limit": {
              "type": "integer"
            },
            "offset": {
              "type": "integer"
            }
          },
          "type": "object"
        },
        "Message": {
          "properties": {
            "message": {
              "description": "Message text",
              "type": "string"
            }
          },
          "type": "object"
        },
        "PerformanceHistory": {
          "properties": {
            "data": {
              "items": {
                "$ref": "#/components/schemas/PerformanceItem"
              },
              "type": "array"
            },
            "inventory_id": {
              "type": "string"
            },
            "links": {
              "$ref": "#/components/schemas/Links"
            },
            "meta": {
              "$ref": "#/components/schemas/ListMeta"
            }
          },
          "type": "object"
        },
        "PerformanceItem": {
          "properties": {
            "cpu": {
              "type": "integer"
            },
            "io_all": {
              "type": "object"
            },
            "max_io": {
              "type": "number"
            },
            "memory": {
              "type": "integer"
            },
            "report_date": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "Rating": {
          "properties": {
            "inventory_id": {
              "type": "string"
            },
            "rating": {
              "enum": [
                -1,
                0,
                1
              ],
              "type": "integer"
            }
          },
          "type": "object"
        },
        "Status": {
          "properties": {
            "status": {
              "type": "string"
            }
          },
          "required": [
            "status"
          ]
        },
        "SuggestionsItem": {
          "properties": {
            "condition": {
              "type": "string"
            },
            "current_instance": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "detected_issues": {
              "type": "string"
            },
            "reason": {
              "type": "string"
            },
            "resolution": {
              "type": "string"
            },
            "rule_id": {
              "type": "string"
            },
            "suggested_instances": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "SuggestionsList": {
          "properties": {
            "data": {
              "items": {
                "$ref": "#/components/schemas/SuggestionsItem"
              },
              "type": "array"
            },
            "inventory_id": {
              "type": "string"
            },
            "meta": {
              "properties": {
                "count": {
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "SystemDetails": {
          "properties": {
            "cloud_provider": {
              "type": "string"
            },
            "display_name": {
              "type": "string"
            },
            "fqdn": {
              "type": "string"
            },
            "idling_time": {
              "type": "number"
            },
            "instance_type": {
              "type": "string"
            },
            "inventory_id": {
              "type": "string"
            },
            "number_of_suggestions": {
              "type": "integer"
            },
            "os": {
              "type": "string"
            },
            "performance_utilization": {
              "properties": {
                "cpu": {
                  "type": "integer"
                },
                "io_all": {
                  "type": "object"
                },
                "max_io": {
                  "type": "number"
                },
                "memory": {
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "rating": {
              "enum": [
                -1,
                0,
                1
              ],
              "type": "integer"
            },
            "report_date": {
              "type": "string"
            },
            "state": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "SystemItem": {
          "properties": {
            "cloud_provider": {
              "type": "string"
            },
            "display_name": {
              "type": "string"
            },
            "fqdn": {
              "type": "string"
            },
            "idling_time": {
              "type": "number"
            },
            "instance_type": {
              "type": "string"
            },
            "inventory_id": {
              "type": "string"
            },
            "number_of_suggestions": {
              "type": "integer"
            },
            "org_id": {
              "type": "string"
            },
            "os": {
              "type": "string"
            },
            "performance_utilization": {
              "properties": {
                "cpu": {
                  "type": "integer"
                },
                "io_all": {
                  "type": "object"
                },
                "max_io": {
                  "type": "number"
                },
                "memory": {
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "report_date": {
              "type": "string"
            },
            "state": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "Systems": {
          "properties": {
            "data": {
              "items": {
                "$ref": "#/components/schemas/SystemItem"
              },
              "type": "array"
            },
            "links": {
              "$ref": "#/components/schemas/Links"
            },
            "meta": {
              "$ref": "#/components/schemas/ListMeta"
            }
          },
          "type": "object"
        }
      },
      "securitySchemes": {
        "RhIdentity": {
          "description": "Base64-encoded JSON identity header provided by 3Scale. Contains an account number of the user issuing the request. Format of the JSON{'identity': {'account_number': '12345678'}}",
          "in": "header",
          "name": "x-rh-identity",
          "type": "apiKey"
        }
      }
    },
    "info": {
      "contact": {},
      "description": "Flask Backend API for Resource Optimization Service",
      "license": {
        "name": "GPLv3",
        "url": "https://www.gnu.org/licenses/gpl-3.0.en.html"
      },
      "title": "Ros-backend API",
      "version": "v1"
    },
    "openapi": "3.0.1",
    "paths": {
      "/executive_report": {
        "get": {
          "description": "Executive report for systems",
          "operationId": "getExecutiveReportForSystems",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ExecutiveReportItem"
                  }
                }
              },
              "description": "OK"
            }
          },
          "summary": "Executive report for systems"
        }
      },
      "/is_configured": {
        "get": {
          "description": "Check whether service is configured.",
          "operationId": "getServiceConfigurationInfo",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/IsServiceConfigured"
                  }
                }
              },
              "description": "OK"
            }
          },
          "summary": "Check ROS configured"
        }
      },
      "/rating": {
        "post": {
          "description": "submit suggestion rating",
          "operationId": "addSuggestionRatingToSystem",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rating"
                }
              }
            }
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Rating"
                  }
                }
              },
              "description": "Updated an existing rating submitted by same user"
            },
            "201": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Rating"
                  }
                }
              },
              "description": "Created"
            },
            "400": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Message"
                  }
                }
              },
              "description": "Bad request"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Message"
                  }
                }
              },
              "description": "Forbidden"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Message"
                  }
                }
              },
              "description": "Not found"
            },
            "422": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Message"
                  }
                }
              },
              "description": "Invalid choice of input for rating"
            }
          },
          "summary": "submit suggestion rating"
        }
      },
      "/status": {
        "get": {
          "description": "A small JSON indicating the application is deployed. This serves as both the liveness and readiness call.",
          "operationId": "getStatus",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Status"
                  }
                }
              },
              "description": "OK"
            }
          },
          "summary": "Health check liveness call"
        }
      },
      "/systems": {
        "get": {
          "description": "Lists all systems from cloud having performance profile",
          "operationId": "getSystems",
          "parameters": [
            {
              "$ref": "#/components/parameters/limitParam"
            },
            {
              "$ref": "#/components/parameters/offsetParam"
            },
            {
              "$ref": "#/components/parameters/orderByParam"
            },
            {
              "$ref": "#/components/parameters/orderHowParam"
            },
            {
              "$ref": "#/components/parameters/filterParam"
            },
            {
              "$ref": "#/components/parameters/filterStateParam"
            },
            {
              "$ref": "#/components/parameters/filterOSParam"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Systems"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "RhIdentity": []
            }
          ],
          "summary": "Lists all systems from cloud having performance profile"
        }
      },
      "/systems/{inventory_id}": {
        "get": {
          "description": "Show the system details by given inventory id",
          "operationId": "getSystemDetails",
          "parameters": [
            {
              "description": "Inventory ID",
              "in": "path",
              "name": "inventory_id",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SystemDetails"
                  }
                }
              },
              "description": "OK"
            }
          },
          "summary": "Show the system details by given inventory id"
        }
      },
      "/systems/{inventory_id}/history": {
        "get": {
          "description": "Show the system's performance history by given inventory id",
          "operationId": "getPerformanceHistoryForSystem",
          "parameters": [
            {
              "description": "Inventory ID",
              "in": "path",
              "name": "inventory_id",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PerformanceHistory"
                  }
                }
              },
              "description": "OK"
            }
          },
          "summary": "Show the system's performance history by given inventory id"
        }
      },
      "/systems/{inventory_id}/suggestions": {
        "get": {
          "description": "Show the list of suggestions by given inventory id",
          "operationId": "getSuggestionsForSystem",
          "parameters": [
            {
              "description": "Inventory ID",
              "in": "path",
              "name": "inventory_id",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "Filter system with the given description",
              "in": "query",
              "name": "description",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SuggestionsList"
                  }
                }
              },
              "description": "OK"
            }
          },
          "summary": "Show the list of suggestions by given inventory id"
        }
      }
    }
  }
}