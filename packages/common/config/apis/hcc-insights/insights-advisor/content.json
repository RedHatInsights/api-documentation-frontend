{
  "extras": {},
  "openapi": {
    "components": {
      "schemas": {
        "Kcs": {
          "description": "Pairings of C.R.C rule URL and its KCS solution number (node_id)",
          "properties": {
            "node_id": {
              "description": "KCS solution number",
              "type": "string"
            },
            "rule_url": {
              "description": "Rule URL on C.R.C.",
              "format": "uri",
              "type": "string"
            }
          },
          "required": [
            "node_id",
            "rule_url"
          ],
          "type": "object"
        },
        "RuleCategory": {
          "properties": {
            "id": {
              "readOnly": true,
              "type": "integer"
            },
            "name": {
              "maxLength": 20,
              "type": "string"
            }
          },
          "required": [
            "id",
            "name"
          ],
          "type": "object"
        },
        "SystemType": {
          "description": "RHN-based system types classified by role and product code.",
          "properties": {
            "id": {
              "readOnly": true,
              "type": "integer"
            },
            "product_code": {
              "maxLength": 10,
              "type": "string"
            },
            "role": {
              "maxLength": 15,
              "type": "string"
            }
          },
          "required": [
            "id",
            "product_code",
            "role"
          ],
          "type": "object"
        }
      }
    },
    "info": {
      "description": "The API of the Advisor project in Insights",
      "title": "Insights Advisor API",
      "version": "1.0.0"
    },
    "openapi": "3.0.3",
    "paths": {
      "/api/insights/v1/kcs/": {
        "get": {
          "description": "Looks for all active rules with KCS solutions\n\nReturns a list of dicts of the C.R.C rule URL and its KCS solution number",
          "operationId": "kcs_list",
          "parameters": [
            {
              "description": "Display the rule urls for the given list of comma separated KCS solution node_ids",
              "in": "query",
              "name": "node_ids",
              "schema": {
                "items": {
                  "format": "regex",
                  "pattern": "\\d+",
                  "type": "string"
                },
                "type": "array"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "items": {
                      "$ref": "#/components/schemas/Kcs"
                    },
                    "type": "array"
                  }
                }
              },
              "description": ""
            }
          },
          "tags": [
            "kcs"
          ]
        }
      },
      "/api/insights/v1/kcs/{node_id}/": {
        "get": {
          "description": "Gets active rule(s) for a particular KCS solution (node_id)\n\nReturns a list of C.R.C rule url(s) for that KCS solution",
          "operationId": "kcs_retrieve",
          "parameters": [
            {
              "in": "path",
              "name": "node_id",
              "required": true,
              "schema": {
                "description": "KCS solution number",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "items": {
                      "description": "Rule URL on C.R.C.",
                      "format": "uri",
                      "type": "string"
                    },
                    "type": "array"
                  }
                }
              },
              "description": ""
            }
          },
          "tags": [
            "kcs"
          ]
        }
      },
      "/api/insights/v1/rulecategory/": {
        "get": {
          "description": "Rules are divided into categories, the usual being Availability,\nStability, Security and Performance.\n\nCategories are listed in decreasing order of importance.",
          "operationId": "rulecategory_list",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "items": {
                      "$ref": "#/components/schemas/RuleCategory"
                    },
                    "type": "array"
                  }
                }
              },
              "description": ""
            }
          },
          "tags": [
            "rulecategory"
          ]
        }
      },
      "/api/insights/v1/rulecategory/{id}/": {
        "get": {
          "description": "Rules are divided into categories, the usual being Availability,\nStability, Security and Performance.\n\nCategories are listed in decreasing order of importance.",
          "operationId": "rulecategory_retrieve",
          "parameters": [
            {
              "description": "A unique integer value identifying this rule category.",
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/RuleCategory"
                  }
                }
              },
              "description": ""
            }
          },
          "tags": [
            "rulecategory"
          ]
        }
      },
      "/api/insights/v1/status/": {
        "get": {
          "description": "Provide a simple list of URLs contained here.\n\nA list of statistics views.",
          "operationId": "status_retrieve",
          "responses": {
            "200": {
              "description": "No response body"
            }
          },
          "tags": [
            "status"
          ]
        }
      },
      "/api/insights/v1/status/live/": {
        "get": {
          "description": "Is the Advisor API live and serving requests?\n\nThis returns a dictionary with properties defining the status of the\ncomponents Advisor relies on.\n\nAt the moment this is the same as the Readiness check (see `/ready/`).\nIn the future it may include other checks if we need to, but the\nproperties of `/ready/` will always be included.",
          "operationId": "status_live_retrieve",
          "responses": {
            "200": {
              "description": "No response body"
            }
          },
          "tags": [
            "status"
          ]
        }
      },
      "/api/insights/v1/status/ready/": {
        "get": {
          "description": "Is the Advisor API ready to serve requests?\n\nThis returns a dictionary with properties defining the status of the\ncomponents Advisor relies on.\n\n* 'django' should always be True.  If Django isn't ready, you can't\n  get this information :-)\n* 'database' is True when a database access returns successfully with\n  valid information.\n* 'rbac' is True when we can make a request to the RBAC API and get\n  a valid response.\n* 'advisor' is True if all of the above are True.",
          "operationId": "status_ready_retrieve",
          "responses": {
            "200": {
              "description": "No response body"
            }
          },
          "tags": [
            "status"
          ]
        }
      },
      "/api/insights/v1/systemtype/": {
        "get": {
          "description": "List all system types by role and product code",
          "operationId": "systemtype_list",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "items": {
                      "$ref": "#/components/schemas/SystemType"
                    },
                    "type": "array"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "List all system types",
          "tags": [
            "systemtype"
          ]
        }
      },
      "/api/insights/v1/systemtype/{id}/": {
        "get": {
          "description": "Retrieve details of a single system type",
          "operationId": "systemtype_retrieve",
          "parameters": [
            {
              "description": "A unique integer value identifying this system type.",
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SystemType"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Retrieve a system type",
          "tags": [
            "systemtype"
          ]
        }
      }
    },
    "servers": [
      {
        "description": "The API of the Advisor project in Insights",
        "url": "https://console.redhat.com/"
      },
      {
        "description": "The API of the Advisor project in Insights",
        "url": "https://cloud.redhat.com/"
      }
    ]
  }
}