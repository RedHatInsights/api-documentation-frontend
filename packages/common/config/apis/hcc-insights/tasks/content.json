{
  "extras": {},
  "openapi": {
    "components": {
      "schemas": {
        "ExecuteTask": {
          "description": "Execute a task on a given set of hosts.\n\nCreates an ExecutedTask object and one or more Job objects, one for each\nrecognised host.",
          "properties": {
            "hosts": {
              "items": {
                "format": "uuid",
                "type": "string"
              },
              "type": "array"
            },
            "name": {
              "type": "string"
            },
            "parameters": {
              "items": {
                "$ref": "#/components/schemas/ExecutedTaskParameter"
              },
              "type": "array"
            },
            "task": {
              "pattern": "^[-a-zA-Z0-9_]+$",
              "type": "string"
            }
          },
          "required": [
            "hosts",
            "task"
          ],
          "type": "object"
        },
        "ExecutedTask": {
          "properties": {
            "alerts_count": {
              "type": "integer"
            },
            "end_time": {
              "format": "date-time",
              "nullable": true,
              "type": "string"
            },
            "id": {
              "readOnly": true,
              "type": "integer"
            },
            "initiated_by": {
              "description": "username",
              "maxLength": 80,
              "type": "string"
            },
            "name": {
              "maxLength": 200,
              "type": "string"
            },
            "start_time": {
              "format": "date-time",
              "type": "string"
            },
            "status": {
              "type": "string"
            },
            "systems_count": {
              "type": "integer"
            },
            "task_description": {
              "type": "string"
            },
            "task_slug": {
              "pattern": "^[-a-zA-Z0-9_]+$",
              "type": "string"
            },
            "task_title": {
              "type": "string"
            },
            "task_url": {
              "format": "uri",
              "readOnly": true,
              "type": "string"
            }
          },
          "required": [
            "alerts_count",
            "id",
            "initiated_by",
            "name",
            "start_time",
            "status",
            "systems_count",
            "task_description",
            "task_slug",
            "task_title",
            "task_url"
          ],
          "type": "object"
        },
        "ExecutedTaskOne": {
          "properties": {
            "end_time": {
              "format": "date-time",
              "nullable": true,
              "type": "string"
            },
            "id": {
              "readOnly": true,
              "type": "integer"
            },
            "initiated_by": {
              "description": "username",
              "maxLength": 80,
              "type": "string"
            },
            "jobs": {
              "items": {
                "$ref": "#/components/schemas/JobTask"
              },
              "type": "array"
            },
            "name": {
              "maxLength": 200,
              "type": "string"
            },
            "parameters": {
              "items": {
                "$ref": "#/components/schemas/ExecutedTaskParameter"
              },
              "type": "array"
            },
            "start_time": {
              "format": "date-time",
              "type": "string"
            },
            "status": {
              "type": "string"
            },
            "systems_count": {
              "type": "integer"
            },
            "task_description": {
              "type": "string"
            },
            "task_slug": {
              "pattern": "^[-a-zA-Z0-9_]+$",
              "type": "string"
            },
            "task_title": {
              "type": "string"
            }
          },
          "required": [
            "id",
            "initiated_by",
            "jobs",
            "name",
            "parameters",
            "start_time",
            "status",
            "systems_count",
            "task_description",
            "task_slug",
            "task_title"
          ],
          "type": "object"
        },
        "ExecutedTaskParameter": {
          "properties": {
            "default": {
              "readOnly": true,
              "type": "string"
            },
            "description": {
              "readOnly": true,
              "type": "string"
            },
            "id": {
              "readOnly": true,
              "type": "integer"
            },
            "key": {
              "type": "string"
            },
            "required": {
              "readOnly": true,
              "type": "boolean"
            },
            "value": {
              "type": "string"
            }
          },
          "required": [
            "default",
            "description",
            "id",
            "key",
            "required",
            "value"
          ],
          "type": "object"
        },
        "Host": {
          "properties": {
            "connection_type": {
              "type": "string"
            },
            "culled_timestamp": {
              "format": "date-time",
              "type": "string"
            },
            "display_name": {
              "maxLength": 200,
              "type": "string"
            },
            "id": {
              "format": "uuid",
              "type": "string"
            },
            "os_version": {
              "type": "string"
            },
            "stale_timestamp": {
              "format": "date-time",
              "type": "string"
            },
            "stale_warning_timestamp": {
              "format": "date-time",
              "type": "string"
            },
            "tags": {
              "items": {
                "additionalProperties": {},
                "type": "object"
              },
              "type": "array"
            },
            "updated": {
              "format": "date-time",
              "type": "string"
            }
          },
          "required": [
            "connection_type",
            "culled_timestamp",
            "display_name",
            "id",
            "os_version",
            "stale_timestamp",
            "stale_warning_timestamp",
            "tags",
            "updated"
          ],
          "type": "object"
        },
        "Job": {
          "properties": {
            "connection_type": {
              "type": "string"
            },
            "display_name": {
              "type": "string"
            },
            "executed_task": {
              "type": "integer"
            },
            "results": {
              "additionalProperties": {},
              "type": "object"
            },
            "status": {
              "type": "string"
            },
            "system": {
              "format": "uuid",
              "type": "string"
            },
            "updated_on": {
              "format": "date-time",
              "type": "string"
            }
          },
          "required": [
            "connection_type",
            "display_name",
            "executed_task",
            "results",
            "status",
            "system",
            "updated_on"
          ],
          "type": "object"
        },
        "JobTask": {
          "description": "The jobs for a particular executed task",
          "properties": {
            "display_name": {
              "type": "string"
            },
            "results": {
              "additionalProperties": {},
              "type": "object"
            },
            "status": {
              "type": "string"
            },
            "system_id": {
              "format": "uuid",
              "type": "string"
            },
            "updated_on": {
              "format": "date-time",
              "type": "string"
            }
          },
          "required": [
            "display_name",
            "results",
            "status",
            "system_id",
            "updated_on"
          ],
          "type": "object"
        },
        "PaginatedExecutedTaskList": {
          "properties": {
            "data": {
              "items": {
                "$ref": "#/components/schemas/ExecutedTask"
              },
              "type": "array"
            },
            "links": {
              "properties": {
                "first": {
                  "format": "uri",
                  "nullable": true,
                  "type": "string"
                },
                "last": {
                  "format": "uri",
                  "nullable": true,
                  "type": "string"
                },
                "next": {
                  "format": "uri",
                  "nullable": true,
                  "type": "string"
                },
                "previous": {
                  "format": "uri",
                  "nullable": true,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "meta": {
              "properties": {
                "count": {
                  "example": 169,
                  "type": "integer"
                }
              },
              "required": [
                "count"
              ],
              "type": "object"
            }
          },
          "type": "object"
        },
        "PaginatedHostList": {
          "properties": {
            "data": {
              "items": {
                "$ref": "#/components/schemas/Host"
              },
              "type": "array"
            },
            "links": {
              "properties": {
                "first": {
                  "format": "uri",
                  "nullable": true,
                  "type": "string"
                },
                "last": {
                  "format": "uri",
                  "nullable": true,
                  "type": "string"
                },
                "next": {
                  "format": "uri",
                  "nullable": true,
                  "type": "string"
                },
                "previous": {
                  "format": "uri",
                  "nullable": true,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "meta": {
              "properties": {
                "count": {
                  "example": 169,
                  "type": "integer"
                }
              },
              "required": [
                "count"
              ],
              "type": "object"
            }
          },
          "type": "object"
        },
        "PaginatedJobList": {
          "properties": {
            "data": {
              "items": {
                "$ref": "#/components/schemas/Job"
              },
              "type": "array"
            },
            "links": {
              "properties": {
                "first": {
                  "format": "uri",
                  "nullable": true,
                  "type": "string"
                },
                "last": {
                  "format": "uri",
                  "nullable": true,
                  "type": "string"
                },
                "next": {
                  "format": "uri",
                  "nullable": true,
                  "type": "string"
                },
                "previous": {
                  "format": "uri",
                  "nullable": true,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "meta": {
              "properties": {
                "count": {
                  "example": 169,
                  "type": "integer"
                }
              },
              "required": [
                "count"
              ],
              "type": "object"
            }
          },
          "type": "object"
        },
        "PaginatedTaskList": {
          "properties": {
            "data": {
              "items": {
                "$ref": "#/components/schemas/Task"
              },
              "type": "array"
            },
            "links": {
              "properties": {
                "first": {
                  "format": "uri",
                  "nullable": true,
                  "type": "string"
                },
                "last": {
                  "format": "uri",
                  "nullable": true,
                  "type": "string"
                },
                "next": {
                  "format": "uri",
                  "nullable": true,
                  "type": "string"
                },
                "previous": {
                  "format": "uri",
                  "nullable": true,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "meta": {
              "properties": {
                "count": {
                  "example": 169,
                  "type": "integer"
                }
              },
              "required": [
                "count"
              ],
              "type": "object"
            }
          },
          "type": "object"
        },
        "Task": {
          "properties": {
            "description": {
              "type": "string"
            },
            "filter_message": {
              "maxLength": 200,
              "nullable": true,
              "type": "string"
            },
            "parameters": {
              "items": {
                "$ref": "#/components/schemas/TaskParameter"
              },
              "type": "array"
            },
            "publish_date": {
              "format": "date-time",
              "type": "string"
            },
            "slug": {
              "maxLength": 50,
              "pattern": "^[-a-zA-Z0-9_]+$",
              "type": "string"
            },
            "title": {
              "maxLength": 200,
              "type": "string"
            },
            "type": {
              "type": "string"
            }
          },
          "required": [
            "description",
            "parameters",
            "publish_date",
            "slug",
            "title",
            "type"
          ],
          "type": "object"
        },
        "TaskParameter": {
          "properties": {
            "default": {
              "maxLength": 250,
              "nullable": true,
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "key": {
              "maxLength": 40,
              "type": "string"
            },
            "required": {
              "type": "boolean"
            }
          },
          "required": [
            "description",
            "key"
          ],
          "type": "object"
        }
      },
      "securitySchemes": {
        "Authorization": {
          "in": "header",
          "name": "Authorization",
          "type": "apiKey"
        }
      }
    },
    "info": {
      "description": "The API for managing and issuing Red Hat generated tasks on your infrastructure",
      "title": "Insights Tasks API",
      "version": "1.0.0"
    },
    "openapi": "3.0.3",
    "paths": {
      "/api/tasks/v1/executed_task": {
        "get": {
          "description": "View a list of executed tasks, or a single executed task",
          "operationId": "executed_task_list",
          "parameters": [
            {
              "description": "Number of results to return per page.",
              "in": "query",
              "name": "limit",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "description": "The initial index from which to return the results.",
              "in": "query",
              "name": "offset",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "in": "query",
              "name": "sort",
              "schema": {
                "default": "start_time",
                "enum": [
                  "-end_time",
                  "-name",
                  "-start_time",
                  "-status",
                  "-systems_count",
                  "-title",
                  "end_time",
                  "name",
                  "start_time",
                  "status",
                  "systems_count",
                  "title"
                ],
                "type": "string"
              }
            },
            {
              "in": "query",
              "name": "status",
              "schema": {
                "items": {
                  "enum": [
                    "Cancelled",
                    "Completed",
                    "Running"
                  ],
                  "type": "string"
                },
                "type": "array"
              },
              "style": "form"
            },
            {
              "in": "query",
              "name": "text",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PaginatedExecutedTaskList"
                  }
                }
              },
              "description": ""
            }
          },
          "security": [
            {
              "x-rh-identity": []
            }
          ],
          "tags": [
            "executed_task"
          ]
        },
        "post": {
          "description": "Execute a task on one or more hosts.\n\nThis takes a task, a list of one or more hosts, and any parameters\nthe task may define, and creates a new executed task linked to a job\nfor each host.  The jobs are then scheduled on those hosts by the\ndispatch mechanism defined by the task.",
          "operationId": "executed_task_create",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExecuteTask"
                }
              },
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/components/schemas/ExecuteTask"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/ExecuteTask"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ExecutedTaskOne"
                  }
                }
              },
              "description": ""
            }
          },
          "security": [
            {
              "x-rh-identity": []
            }
          ],
          "tags": [
            "executed_task"
          ]
        }
      },
      "/api/tasks/v1/executed_task/{id}": {
        "delete": {
          "description": "Delete an existing execut(ing,ed) task.  If the task is still\nexecuting (i.e. it is not yet cancelled or completed) then also\ncancel all running jobs.  This also deletes the data for all of the\nexecuted task's jobs.",
          "operationId": "executed_task_destroy",
          "parameters": [
            {
              "description": "A unique integer value identifying this executed task.",
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No response body"
            }
          },
          "security": [
            {
              "x-rh-identity": []
            }
          ],
          "tags": [
            "executed_task"
          ]
        },
        "get": {
          "description": "Retrieve a single executed task, along with its list of jobs and the\nsystems they represent.",
          "operationId": "executed_task_retrieve",
          "parameters": [
            {
              "description": "A unique integer value identifying this executed task.",
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ExecutedTaskOne"
                  }
                }
              },
              "description": ""
            }
          },
          "security": [
            {
              "x-rh-identity": []
            }
          ],
          "tags": [
            "executed_task"
          ]
        }
      },
      "/api/tasks/v1/executed_task/{id}/cancel": {
        "post": {
          "description": "Cancel an existing executed task, by ID.\n\nThis sends a signal to the Playbook Dispatcher to cancel all the jobs\nin this executed task.  It updates the state of the executed task to\nbe CANCELLED.  Jobs in this task will be updated as we receive\nmessages back from the Playbook Dispatcher.",
          "operationId": "executed_task_cancel_create",
          "parameters": [
            {
              "description": "A unique integer value identifying this executed task.",
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExecutedTask"
                }
              },
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/components/schemas/ExecutedTask"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/ExecutedTask"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ExecutedTask"
                  }
                }
              },
              "description": ""
            }
          },
          "security": [
            {
              "x-rh-identity": []
            }
          ],
          "tags": [
            "executed_task"
          ]
        }
      },
      "/api/tasks/v1/executed_task/{id}/jobs": {
        "get": {
          "description": "List the jobs associated with the given executed task.",
          "operationId": "executed_task_jobs_list",
          "parameters": [
            {
              "description": "Display systems with this text in their display_name",
              "in": "query",
              "name": "display_name",
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "List of Inventory host group names",
              "in": "query",
              "name": "groups",
              "schema": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "style": "form"
            },
            {
              "description": "A unique integer value identifying this executed task.",
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "integer"
              }
            },
            {
              "description": "Number of results to return per page.",
              "in": "query",
              "name": "limit",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "description": "The initial index from which to return the results.",
              "in": "query",
              "name": "offset",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "description": "Display only systems with these OS versions",
              "in": "query",
              "name": "os_version",
              "schema": {
                "items": {
                  "enum": [
                    "6.0",
                    "6.1",
                    "6.10",
                    "6.2",
                    "6.3",
                    "6.4",
                    "6.5",
                    "6.6",
                    "6.7",
                    "6.8",
                    "6.9",
                    "7.0",
                    "7.1",
                    "7.10",
                    "7.2",
                    "7.3",
                    "7.4",
                    "7.5",
                    "7.6",
                    "7.7",
                    "7.8",
                    "7.9",
                    "8.0",
                    "8.1",
                    "8.10",
                    "8.2",
                    "8.3",
                    "8.4",
                    "8.5",
                    "8.6",
                    "8.7",
                    "8.8",
                    "8.9",
                    "9.0",
                    "9.1",
                    "9.2",
                    "9.3",
                    "9.4"
                  ],
                  "type": "string"
                },
                "type": "array"
              },
              "style": "form"
            },
            {
              "description": "Sort systems by this field",
              "in": "query",
              "name": "sort",
              "schema": {
                "default": "display_name",
                "enum": [
                  "-display_name",
                  "-last_seen",
                  "-os_version",
                  "-status",
                  "display_name",
                  "last_seen",
                  "os_version",
                  "status"
                ],
                "type": "string"
              }
            },
            {
              "in": "query",
              "name": "status",
              "schema": {
                "items": {
                  "enum": [
                    "Cancelled",
                    "Failure",
                    "Running",
                    "Success",
                    "Timeout"
                  ],
                  "type": "string"
                },
                "type": "array"
              },
              "style": "form"
            },
            {
              "description": "Tags have a namespace, key and value in the form namespace/key=value",
              "in": "query",
              "name": "tags",
              "schema": {
                "items": {
                  "format": "regex",
                  "pattern": "^[^/=]+/[^/=]+=[^/=]+$",
                  "type": "string"
                },
                "type": "array"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PaginatedJobList"
                  }
                }
              },
              "description": ""
            }
          },
          "security": [
            {
              "x-rh-identity": []
            }
          ],
          "tags": [
            "executed_task"
          ]
        }
      },
      "/api/tasks/v1/system": {
        "get": {
          "description": "List the systems that can execute tasks, or the task-related details for\na single system.",
          "operationId": "system_list",
          "parameters": [
            {
              "description": "Display systems with this text in their display_name",
              "in": "query",
              "name": "display_name",
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "Are there systems which contain these SAP SIDs?",
              "in": "query",
              "name": "filter[system_profile][sap_sids][contains]",
              "schema": {
                "items": {
                  "format": "regex",
                  "pattern": "^[A-Z]..$",
                  "type": "string"
                },
                "type": "array"
              },
              "style": "form"
            },
            {
              "description": "Is this a SAP system?",
              "in": "query",
              "name": "filter[system_profile][sap_system]",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "description": "List of Inventory host group names",
              "in": "query",
              "name": "groups",
              "schema": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "style": "form"
            },
            {
              "description": "Number of results to return per page.",
              "in": "query",
              "name": "limit",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "description": "The initial index from which to return the results.",
              "in": "query",
              "name": "offset",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "description": "Filter on both operating system name and version. A pipe separates the values. For Example: RHEL|7.9",
              "in": "query",
              "name": "operating_system",
              "schema": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "style": "form"
            },
            {
              "description": "Filter on these (short) operating system names",
              "in": "query",
              "name": "os_name",
              "schema": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "style": "form"
            },
            {
              "description": "Display only systems with these OS versions",
              "in": "query",
              "name": "os_version",
              "schema": {
                "items": {
                  "enum": [
                    "6.0",
                    "6.1",
                    "6.10",
                    "6.2",
                    "6.3",
                    "6.4",
                    "6.5",
                    "6.6",
                    "6.7",
                    "6.8",
                    "6.9",
                    "7.0",
                    "7.1",
                    "7.10",
                    "7.2",
                    "7.3",
                    "7.4",
                    "7.5",
                    "7.6",
                    "7.7",
                    "7.8",
                    "7.9",
                    "8.0",
                    "8.1",
                    "8.10",
                    "8.2",
                    "8.3",
                    "8.4",
                    "8.5",
                    "8.6",
                    "8.7",
                    "8.8",
                    "8.9",
                    "9.0",
                    "9.1",
                    "9.2",
                    "9.3",
                    "9.4"
                  ],
                  "type": "string"
                },
                "type": "array"
              },
              "style": "form"
            },
            {
              "description": "Sort systems by this field",
              "in": "query",
              "name": "sort",
              "schema": {
                "default": "display_name",
                "enum": [
                  "-display_name",
                  "-group_name",
                  "-last_seen",
                  "-os_name",
                  "-os_version",
                  "display_name",
                  "group_name",
                  "last_seen",
                  "os_name",
                  "os_version"
                ],
                "type": "string"
              }
            },
            {
              "description": "Tags have a namespace, key and value in the form namespace/key=value",
              "in": "query",
              "name": "tags",
              "schema": {
                "items": {
                  "format": "regex",
                  "pattern": "^[^/=]+/[^/=]+=[^/=]+$",
                  "type": "string"
                },
                "type": "array"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PaginatedHostList"
                  }
                }
              },
              "description": ""
            }
          },
          "security": [
            {
              "x-rh-identity": []
            }
          ],
          "tags": [
            "system"
          ]
        }
      },
      "/api/tasks/v1/system/{id}": {
        "get": {
          "description": "List the systems that can execute tasks, or the task-related details for\na single system.",
          "operationId": "system_retrieve",
          "parameters": [
            {
              "description": "A UUID string identifying this host.",
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "format": "uuid",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Host"
                  }
                }
              },
              "description": ""
            }
          },
          "security": [
            {
              "x-rh-identity": []
            }
          ],
          "tags": [
            "system"
          ]
        }
      },
      "/api/tasks/v1/task": {
        "get": {
          "description": "View a list of tasks, or a single task",
          "operationId": "task_list",
          "parameters": [
            {
              "description": "Number of results to return per page.",
              "in": "query",
              "name": "limit",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "description": "The initial index from which to return the results.",
              "in": "query",
              "name": "offset",
              "required": false,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PaginatedTaskList"
                  }
                }
              },
              "description": ""
            }
          },
          "security": [
            {
              "x-rh-identity": []
            }
          ],
          "tags": [
            "task"
          ]
        }
      },
      "/api/tasks/v1/task/{slug}": {
        "get": {
          "description": "View a list of tasks, or a single task",
          "operationId": "task_retrieve",
          "parameters": [
            {
              "in": "path",
              "name": "slug",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Task"
                  }
                }
              },
              "description": ""
            }
          },
          "security": [
            {
              "x-rh-identity": []
            }
          ],
          "tags": [
            "task"
          ]
        }
      },
      "/api/tasks/v1/task/{slug}/playbook": {
        "get": {
          "description": "Return the playbook for this task.\n\nPlaybook generally do not change per task.",
          "operationId": "task_playbook_retrieve",
          "parameters": [
            {
              "in": "query",
              "name": "format",
              "schema": {
                "enum": [
                  "json",
                  "yaml"
                ],
                "type": "string"
              }
            },
            {
              "in": "path",
              "name": "slug",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Task"
                  }
                },
                "application/yaml": {
                  "schema": {
                    "$ref": "#/components/schemas/Task"
                  }
                }
              },
              "description": ""
            }
          },
          "security": [
            {
              "x-rh-identity": []
            }
          ],
          "tags": [
            "task"
          ]
        }
      },
      "/api/tasks/v1/task/{slug}/systems": {
        "get": {
          "description": "List all systems, with an extra 'requirements' field that is a list\nof reasons why the system cannot run this task.  If that list is\nempty, the system can run this task; otherwise the reasons should be\ndisplayed.",
          "operationId": "task_systems_retrieve",
          "parameters": [
            {
              "in": "query",
              "name": "all_systems",
              "schema": {
                "default": false,
                "type": "boolean"
              }
            },
            {
              "description": "Display systems with this text in their display_name",
              "in": "query",
              "name": "display_name",
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "Are there systems which contain these SAP SIDs?",
              "in": "query",
              "name": "filter[system_profile][sap_sids][contains]",
              "schema": {
                "items": {
                  "format": "regex",
                  "pattern": "^[A-Z]..$",
                  "type": "string"
                },
                "type": "array"
              },
              "style": "form"
            },
            {
              "description": "Is this a SAP system?",
              "in": "query",
              "name": "filter[system_profile][sap_system]",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "description": "List of Inventory host group names",
              "in": "query",
              "name": "groups",
              "schema": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "style": "form"
            },
            {
              "description": "Filter on both operating system name and version. A pipe separates the values. For Example: RHEL|7.9",
              "in": "query",
              "name": "operating_system",
              "schema": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "style": "form"
            },
            {
              "description": "Filter on these (short) operating system names",
              "in": "query",
              "name": "os_name",
              "schema": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "style": "form"
            },
            {
              "description": "Display only systems with these OS versions",
              "in": "query",
              "name": "os_version",
              "schema": {
                "items": {
                  "enum": [
                    "6.0",
                    "6.1",
                    "6.10",
                    "6.2",
                    "6.3",
                    "6.4",
                    "6.5",
                    "6.6",
                    "6.7",
                    "6.8",
                    "6.9",
                    "7.0",
                    "7.1",
                    "7.10",
                    "7.2",
                    "7.3",
                    "7.4",
                    "7.5",
                    "7.6",
                    "7.7",
                    "7.8",
                    "7.9",
                    "8.0",
                    "8.1",
                    "8.10",
                    "8.2",
                    "8.3",
                    "8.4",
                    "8.5",
                    "8.6",
                    "8.7",
                    "8.8",
                    "8.9",
                    "9.0",
                    "9.1",
                    "9.2",
                    "9.3",
                    "9.4"
                  ],
                  "type": "string"
                },
                "type": "array"
              },
              "style": "form"
            },
            {
              "in": "path",
              "name": "slug",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "Sort systems by this field",
              "in": "query",
              "name": "sort",
              "schema": {
                "default": "display_name",
                "enum": [
                  "-display_name",
                  "-group_name",
                  "-last_seen",
                  "-os_name",
                  "-os_version",
                  "display_name",
                  "group_name",
                  "last_seen",
                  "os_name",
                  "os_version"
                ],
                "type": "string"
              }
            },
            {
              "description": "Tags have a namespace, key and value in the form namespace/key=value",
              "in": "query",
              "name": "tags",
              "schema": {
                "items": {
                  "format": "regex",
                  "pattern": "^[^/=]+/[^/=]+=[^/=]+$",
                  "type": "string"
                },
                "type": "array"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Task"
                  }
                }
              },
              "description": ""
            }
          },
          "security": [
            {
              "x-rh-identity": []
            }
          ],
          "tags": [
            "task"
          ]
        }
      }
    },
    "servers": [
      {
        "description": "The API of the Advisor project in Insights",
        "url": "https://console.redhat.com/"
      }
    ]
  }
}