{
  "extras": {},
  "openapi": {
    "components": {
      "schemas": {
        "Account": {
          "description": "Account model",
          "properties": {
            "accountAlias": {
              "description": "accountAlias",
              "type": "string"
            },
            "accountId": {
              "description": "accountId",
              "type": "string"
            },
            "accountKey": {
              "description": "accountKey",
              "type": "string"
            },
            "accountMembers": {
              "description": "accountMembers",
              "items": {
                "$ref": "#/components/schemas/AccountMember"
              },
              "type": "array"
            },
            "accountNumber": {
              "description": "accountNumber",
              "type": "string"
            },
            "accountNumberLink": {
              "description": "accountNumberLink",
              "type": "string"
            },
            "accountStatus": {
              "description": "accountStatus",
              "type": "string"
            },
            "additionalEnhancedEntitlementCount": {
              "description": "additionalEnhancedEntitlementCount",
              "format": "double",
              "type": "number"
            },
            "businessHoursId": {
              "description": "businessHoursId",
              "type": "string"
            },
            "cannotAddAttachments": {
              "default": false,
              "description": "cannotAddAttachments",
              "type": "boolean"
            },
            "caseCount": {
              "description": "caseCount",
              "format": "double",
              "type": "number"
            },
            "csm": {
              "description": "csm",
              "type": "string"
            },
            "csmUser": {
              "$ref": "#/components/schemas/User"
            },
            "csmUserId": {
              "description": "csmUserId",
              "type": "string"
            },
            "csmUserName": {
              "description": "csmUserName",
              "type": "string"
            },
            "csmUserSSOName": {
              "description": "csmUserSSOName",
              "type": "string"
            },
            "customerSegment": {
              "description": "customerSegment",
              "format": "double",
              "type": "number"
            },
            "description": {
              "description": "description",
              "type": "string"
            },
            "enhancedDelivery": {
              "default": false,
              "description": "enhancedDelivery",
              "type": "boolean"
            },
            "escalateToHomeGeoWith1StTouch": {
              "default": false,
              "description": "escalateToHomeGeoWith1StTouch",
              "type": "boolean",
              "xml": {
                "name": "escalateToHomeGeoWith1stTouch"
              }
            },
            "escalateToHomeGeoWithoutFirstTouch": {
              "default": false,
              "description": "escalateToHomeGeoWithoutFirstTouch",
              "type": "boolean"
            },
            "escalationsInLast30Days": {
              "description": "escalationsInLast30Days",
              "format": "double",
              "type": "number"
            },
            "escalationsInLast60Days": {
              "description": "escalationsInLast60Days",
              "format": "double",
              "type": "number"
            },
            "expectsQuickInitialResponse": {
              "default": false,
              "description": "expectsQuickInitialResponse",
              "type": "boolean"
            },
            "gcsActiveUserCount": {
              "description": "gcsActiveUserCount",
              "format": "double",
              "type": "number"
            },
            "gcsDescription": {
              "description": "gcsDescription",
              "type": "string"
            },
            "gcsEngagementStartDate": {
              "description": "gcsEngagementStartDate",
              "format": "date-time",
              "type": "string"
            },
            "gcsHealth": {
              "description": "gcsHealth",
              "format": "double",
              "type": "number"
            },
            "gcsHealthExplanation": {
              "description": "gcsHealthExplanation",
              "type": "string"
            },
            "gcsHighTouchModel": {
              "description": "gcsHighTouchModel",
              "type": "string"
            },
            "gcsLocalization": {
              "description": "gcsLocalization",
              "type": "string"
            },
            "gcsMasterRenewalDate": {
              "description": "gcsMasterRenewalDate",
              "format": "date-time",
              "type": "string"
            },
            "gcsOnboardingStatus": {
              "description": "gcsOnboardingStatus",
              "type": "string"
            },
            "gcsOptOutReason": {
              "description": "gcsOptOutReason",
              "type": "string"
            },
            "gcsSSICenter": {
              "description": "gcsSSICenter",
              "type": "string"
            },
            "gcsStatus": {
              "description": "gcsStatus",
              "type": "string"
            },
            "gcsWelcomedDate": {
              "description": "gcsWelcomedDate",
              "format": "date-time",
              "type": "string"
            },
            "gscsmSegment": {
              "description": "gscsmSegment",
              "type": "string"
            },
            "hardwarePartner": {
              "default": false,
              "description": "hardwarePartner",
              "type": "boolean"
            },
            "hasAvailableEnhancedSLA": {
              "default": false,
              "description": "hasAvailableEnhancedSLA",
              "type": "boolean"
            },
            "hasChat": {
              "default": false,
              "description": "hasChat",
              "type": "boolean"
            },
            "hasConfirmedStatesideSupport": {
              "default": false,
              "description": "hasConfirmedStatesideSupport",
              "type": "boolean"
            },
            "hasEnhancedSLA": {
              "default": false,
              "description": "hasEnhancedSLA",
              "type": "boolean"
            },
            "hasGoldenTicket": {
              "default": false,
              "description": "hasGoldenTicket",
              "type": "boolean"
            },
            "hasGroupACLs": {
              "default": false,
              "description": "hasGroupACLs",
              "type": "boolean"
            },
            "hasPreferredSecureSupportAccount": {
              "default": false,
              "description": "hasPreferredSecureSupportAccount",
              "type": "boolean"
            },
            "holdSupport": {
              "default": false,
              "description": "holdSupport",
              "type": "boolean"
            },
            "identifyingAddressCountry": {
              "description": "identifyingAddressCountry",
              "type": "string"
            },
            "identifyingAddressSuperRegion": {
              "description": "identifyingAddressSuperRegion",
              "type": "string"
            },
            "informManagement": {
              "default": false,
              "description": "informManagement",
              "type": "boolean"
            },
            "isActive": {
              "default": false,
              "description": "isActive",
              "type": "boolean"
            },
            "isInternal": {
              "default": false,
              "description": "isInternal",
              "type": "boolean"
            },
            "isPartner": {
              "default": false,
              "description": "isPartner",
              "type": "boolean"
            },
            "name": {
              "description": "name",
              "type": "string"
            },
            "npsScore": {
              "description": "npsScore",
              "format": "double",
              "type": "number"
            },
            "owner": {
              "$ref": "#/components/schemas/User"
            },
            "ownerId": {
              "description": "ownerId",
              "type": "string"
            },
            "parent": {
              "$ref": "#/components/schemas/Account"
            },
            "parentId": {
              "description": "parentId",
              "type": "string"
            },
            "remainingEnhancedEntitlementCases": {
              "description": "remainingEnhancedEntitlementCases",
              "format": "double",
              "type": "number"
            },
            "remoteSessionTermsAcked": {
              "default": false,
              "description": "remoteSessionTermsAcked",
              "type": "boolean"
            },
            "requireCGroupOnCreate": {
              "default": false,
              "description": "requireCGroupOnCreate",
              "type": "boolean"
            },
            "responseTime": {
              "description": "responseTime",
              "format": "double",
              "type": "number"
            },
            "restrictAttachmentDownloads": {
              "default": false,
              "description": "restrictAttachmentDownloads",
              "type": "boolean"
            },
            "salesSegment": {
              "description": "salesSegment",
              "type": "string"
            },
            "secureSupport": {
              "default": false,
              "description": "secureSupport",
              "type": "boolean"
            },
            "securedEnvironment": {
              "default": false,
              "description": "securedEnvironment",
              "type": "boolean"
            },
            "specialHandlingRequired": {
              "default": false,
              "description": "specialHandlingRequired",
              "type": "boolean"
            },
            "strategic": {
              "default": false,
              "description": "strategic",
              "type": "boolean"
            },
            "subTerritory": {
              "description": "subTerritory",
              "type": "string"
            },
            "subscriptionAbuse": {
              "default": false,
              "description": "subscriptionAbuse",
              "type": "boolean"
            },
            "superRegion": {
              "description": "superRegion",
              "type": "string"
            },
            "supportPartner": {
              "default": false,
              "description": "supportPartner",
              "type": "boolean"
            },
            "tactical": {
              "default": false,
              "description": "tactical",
              "type": "boolean"
            },
            "totalNumberOfEscalations": {
              "description": "totalNumberOfEscalations",
              "format": "double",
              "type": "number"
            },
            "watchlist": {
              "default": false,
              "description": "watchlist",
              "type": "boolean"
            }
          },
          "title": "Account",
          "type": "object"
        },
        "AccountMember": {
          "description": "Account member model",
          "properties": {
            "account": {
              "$ref": "#/components/schemas/Account"
            },
            "createdBy": {
              "$ref": "#/components/schemas/User"
            },
            "createdById": {
              "description": "createdById",
              "type": "string"
            },
            "createdDate": {
              "description": "createdDate",
              "format": "date-time",
              "type": "string"
            },
            "id": {
              "description": "id",
              "type": "string"
            },
            "isAddToCaseTeam": {
              "default": false,
              "description": "isAddToCaseTeam",
              "type": "boolean"
            },
            "isDeleted": {
              "default": false,
              "description": "isDeleted",
              "type": "boolean"
            },
            "isEmailOnUpdates": {
              "default": false,
              "description": "isEmailOnUpdates",
              "type": "boolean"
            },
            "isNotifyOfNewCases": {
              "default": false,
              "description": "isNotifyOfNewCases",
              "type": "boolean"
            },
            "lastModifiedBy": {
              "$ref": "#/components/schemas/User"
            },
            "lastModifiedById": {
              "description": "lastModifiedById",
              "type": "string"
            },
            "lastModifiedDate": {
              "description": "lastModifiedDate",
              "format": "date-time",
              "type": "string"
            },
            "member": {
              "$ref": "#/components/schemas/User"
            },
            "minimumSeverity": {
              "description": "minimumSeverity",
              "type": "string"
            },
            "name": {
              "description": "name",
              "type": "string"
            },
            "ownerId": {
              "description": "ownerId",
              "type": "string"
            },
            "role": {
              "description": "role",
              "type": "string"
            },
            "tamCaseStatus": {
              "description": "tamCaseStatus",
              "type": "string"
            },
            "tamEntitlement": {
              "$ref": "#/components/schemas/Entitlement"
            }
          },
          "title": "AccountMember",
          "type": "object"
        },
        "BugzillaBug": {
          "description": "Bugzilla bug model",
          "properties": {
            "assignedTo": {
              "description": "assignedTo",
              "type": "string"
            },
            "blocks": {
              "description": "blocks",
              "type": "string"
            },
            "blocks2": {
              "description": "blocks2",
              "type": "string"
            },
            "bugzillaKeywords": {
              "description": "bugzillaKeywords",
              "type": "string"
            },
            "bugzillaLink": {
              "description": "bugzillaLink",
              "type": "string"
            },
            "bugzillaNumber": {
              "description": "bugzillaNumber",
              "type": "string"
            },
            "bugzillaURL": {
              "description": "bugzillaURL",
              "type": "string"
            },
            "caseNumber": {
              "description": "caseNumber",
              "type": "string"
            },
            "component": {
              "description": "component",
              "type": "string"
            },
            "createdBy": {
              "$ref": "#/components/schemas/User"
            },
            "createdById": {
              "description": "createdById",
              "type": "string"
            },
            "createdDate": {
              "description": "createdDate",
              "format": "date-time",
              "type": "string"
            },
            "depends": {
              "description": "depends",
              "type": "string"
            },
            "dependsOn": {
              "description": "dependsOn",
              "type": "string"
            },
            "description": {
              "description": "description",
              "type": "string"
            },
            "dupeOf": {
              "description": "dupeOf",
              "type": "string"
            },
            "groups": {
              "description": "groups",
              "type": "string"
            },
            "id": {
              "description": "id",
              "type": "string"
            },
            "isOpen": {
              "default": false,
              "description": "isOpen",
              "type": "boolean"
            },
            "isPrivate": {
              "default": false,
              "description": "isPrivate",
              "type": "boolean"
            },
            "lastModifiedBy": {
              "$ref": "#/components/schemas/User"
            },
            "lastModifiedById": {
              "description": "lastModifiedById",
              "type": "string"
            },
            "lastModifiedDate": {
              "description": "lastModifiedDate",
              "format": "date-time",
              "type": "string"
            },
            "linkedAt": {
              "description": "linkedAt",
              "format": "date-time",
              "type": "string"
            },
            "name": {
              "description": "name",
              "type": "string"
            },
            "platform": {
              "description": "platform",
              "type": "string"
            },
            "priority": {
              "description": "priority",
              "type": "string"
            },
            "product": {
              "description": "product",
              "type": "string"
            },
            "resolution": {
              "description": "resolution",
              "type": "string"
            },
            "severity": {
              "description": "severity",
              "type": "string"
            },
            "status": {
              "description": "status",
              "type": "string"
            },
            "summary": {
              "description": "summary",
              "type": "string"
            },
            "version": {
              "description": "version",
              "type": "string"
            }
          },
          "title": "BugzillaBug",
          "type": "object"
        },
        "BusinessHours": {
          "description": "Business hours model",
          "properties": {
            "createdById": {
              "description": "createdById",
              "type": "string"
            },
            "createdDate": {
              "description": "createdDate",
              "format": "date-time",
              "type": "string"
            },
            "fridayEndTime": {
              "description": "fridayEndTime",
              "type": "string"
            },
            "fridayStartTime": {
              "description": "fridayStartTime",
              "type": "string"
            },
            "id": {
              "description": "id",
              "type": "string"
            },
            "isActive": {
              "default": false,
              "description": "isActive",
              "type": "boolean"
            },
            "isDefault": {
              "default": false,
              "description": "isDefault",
              "type": "boolean"
            },
            "lastModifiedById": {
              "description": "lastModifiedById",
              "type": "string"
            },
            "lastModifiedDate": {
              "description": "lastModifiedDate",
              "format": "date-time",
              "type": "string"
            },
            "mondayEndTime": {
              "description": "mondayEndTime",
              "example": "18:00:00.000Z",
              "type": "string"
            },
            "mondayStartTime": {
              "description": "mondayStartTime",
              "type": "string"
            },
            "name": {
              "description": "name",
              "type": "string"
            },
            "saturdayEndTime": {
              "description": "saturdayEndTime",
              "type": "string"
            },
            "saturdayStartTime": {
              "description": "saturdayStartTime",
              "type": "string"
            },
            "sundayEndTime": {
              "description": "sundayEndTime",
              "type": "string"
            },
            "sundayStartTime": {
              "description": "sundayStartTime",
              "type": "string"
            },
            "systemModstamp": {
              "description": "systemModstamp",
              "format": "date-time",
              "type": "string"
            },
            "thursdayEndTime": {
              "description": "thursdayEndTime",
              "type": "string"
            },
            "thursdayStartTime": {
              "description": "thursdayStartTime",
              "type": "string"
            },
            "timeZoneSidKey": {
              "description": "timeZoneSidKey",
              "type": "string"
            },
            "tuesdayEndTime": {
              "description": "tuesdayEndTime",
              "type": "string"
            },
            "tuesdayStartTime": {
              "description": "tuesdayStartTime",
              "type": "string"
            },
            "wednesdayEndTime": {
              "description": "wednesdayEndTime",
              "type": "string"
            },
            "wednesdayStartTime": {
              "description": "wednesdayStartTime",
              "type": "string"
            }
          },
          "title": "BusinessHours",
          "type": "object"
        },
        "Case": {
          "description": "Case model",
          "properties": {
            "accountNumberRef": {
              "description": "accountNumberRef",
              "type": "string"
            },
            "actionPlan": {
              "description": "actionPlan",
              "type": "string"
            },
            "alternateId": {
              "description": "alternateId",
              "type": "string"
            },
            "apiTags": {
              "description": "apiTags",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "bugzillas": {
              "description": "bugzillas",
              "items": {
                "$ref": "#/components/schemas/BugzillaBug"
              },
              "type": "array"
            },
            "bugzillasHldr": {
              "$ref": "#/components/schemas/HBugzillas"
            },
            "caseLanguage": {
              "description": "caseLanguage",
              "type": "string"
            },
            "caseNumber": {
              "description": "caseNumber",
              "type": "string"
            },
            "caseResourceLinks": {
              "description": "caseResourceLinks",
              "items": {
                "$ref": "#/components/schemas/CaseResourceLink"
              },
              "type": "array"
            },
            "caseResourceLinksHldr": {
              "$ref": "#/components/schemas/HCaseResourceLinks"
            },
            "caseType": {
              "description": "caseType",
              "type": "string"
            },
            "cep": {
              "default": false,
              "description": "cep",
              "type": "boolean"
            },
            "chats": {
              "description": "Chat transcripts.",
              "items": {
                "$ref": "#/components/schemas/CaseChat"
              },
              "type": "array"
            },
            "comments": {
              "description": "comments",
              "items": {
                "$ref": "#/components/schemas/CaseComment"
              },
              "type": "array"
            },
            "contactInfo24x7": {
              "description": "contactInfo24X7",
              "type": "string"
            },
            "contactIsPartner": {
              "default": false,
              "description": "contactIsPartner",
              "type": "boolean"
            },
            "contactName": {
              "description": "contactName",
              "type": "string"
            },
            "contactSSOName": {
              "description": "contactSSOName",
              "type": "string"
            },
            "createdById": {
              "description": "createdById",
              "type": "string"
            },
            "createdDate": {
              "description": "createdDate",
              "format": "date-time",
              "type": "string"
            },
            "customerEscalation": {
              "default": false,
              "description": "customerEscalation",
              "type": "boolean"
            },
            "description": {
              "description": "description",
              "type": "string"
            },
            "emailAddress": {
              "description": "emailAddress",
              "type": "string"
            },
            "enhancedSLA": {
              "default": false,
              "description": "enhancedSLA",
              "type": "boolean"
            },
            "entitlementSla": {
              "description": "entitlementSla",
              "type": "string"
            },
            "environment": {
              "description": "environment",
              "type": "string"
            },
            "firstCaseInactivityWarningSentAt": {
              "description": "firstCaseInactivityWarningSentAt",
              "format": "date-time",
              "type": "string"
            },
            "fts": {
              "default": false,
              "description": "fts",
              "type": "boolean"
            },
            "groupName": {
              "description": "groupName",
              "type": "string"
            },
            "groupNumber": {
              "description": "groupNumber",
              "type": "string"
            },
            "hostname": {
              "description": "hostname",
              "type": "string"
            },
            "id": {
              "description": "id",
              "type": "string"
            },
            "isClosed": {
              "default": false,
              "description": "isClosed",
              "type": "boolean"
            },
            "isStrategicAccount": {
              "default": false,
              "description": "isStrategicAccount",
              "type": "boolean"
            },
            "issue": {
              "description": "issue",
              "type": "string"
            },
            "lastClosedAt": {
              "description": "lastClosedAt",
              "format": "date-time",
              "type": "string"
            },
            "lastModifiedById": {
              "description": "lastModifiedById",
              "type": "string"
            },
            "lastModifiedDate": {
              "description": "lastModifiedDate",
              "format": "date-time",
              "type": "string"
            },
            "name": {
              "description": "name",
              "type": "string"
            },
            "noClusterIdReason": {
              "description": "noClusterIdReason",
              "type": "string"
            },
            "noClusterIdReasonExplanation": {
              "description": "noClusterIdReasonExplanation",
              "type": "string"
            },
            "notes": {
              "description": "Unique ID used when creating a case (used predominantly by solution engine)",
              "type": "string"
            },
            "notificationAddressEmails": {
              "description": "notificationAddressEmails",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "notifiedUsers": {
              "description": "notifiedUsers",
              "items": {
                "$ref": "#/components/schemas/NotifiedUser"
              },
              "type": "array"
            },
            "openshiftClusterID": {
              "description": "openshiftClusterID",
              "type": "string"
            },
            "openshiftClusterVersion": {
              "description": "openshiftClusterVersion",
              "type": "string"
            },
            "origin": {
              "description": "origin",
              "type": "string"
            },
            "originatingSystem": {
              "description": "originatingSystem",
              "type": "string"
            },
            "ownerId": {
              "description": "ownerId",
              "type": "string"
            },
            "periodicityOfIssue": {
              "description": "periodicityOfIssue",
              "type": "string"
            },
            "phone": {
              "description": "phone",
              "type": "string"
            },
            "product": {
              "description": "product",
              "type": "string"
            },
            "recordTypeName": {
              "description": "recordTypeName",
              "type": "string"
            },
            "remoteSessionTermsAcked": {
              "default": false,
              "description": "remoteSessionTermsAcked",
              "type": "boolean"
            },
            "resolutionDescription": {
              "description": "resolutionDescription",
              "type": "string"
            },
            "sbrGroups": {
              "description": "sbrGroups",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "seSessionId": {
              "description": "Unique ID used when creating a case (used predominantly by solution engine)",
              "type": "string"
            },
            "secondCaseInactivityWarningSentAt": {
              "description": "secondCaseInactivityWarningSentAt",
              "format": "date-time",
              "type": "string"
            },
            "severity": {
              "description": "severity",
              "type": "string"
            },
            "status": {
              "description": "status",
              "type": "string"
            },
            "summary": {
              "description": "summary",
              "type": "string"
            },
            "timeFramesAndUrgency": {
              "description": "timeFramesAndUrgency",
              "type": "string"
            },
            "uri": {
              "description": "RESTful URI for this case resource.  ",
              "type": "string"
            },
            "userAgent": {
              "description": "userAgent",
              "type": "string"
            },
            "version": {
              "description": "version",
              "type": "string"
            }
          },
          "required": [
            "description",
            "product",
            "summary",
            "version"
          ],
          "title": "Case",
          "type": "object"
        },
        "CaseAttachment": {
          "description": "Case Attachment Model",
          "properties": {
            "accountNumber": {
              "description": "accountNumber",
              "type": "string"
            },
            "caseNumber": {
              "description": "caseNumber",
              "type": "string"
            },
            "checksum": {
              "description": "checksum",
              "type": "string"
            },
            "createdBy": {
              "description": "createdBy",
              "type": "string"
            },
            "createdDate": {
              "description": "createdDate",
              "format": "date-time",
              "type": "string"
            },
            "description": {
              "description": "description",
              "type": "string"
            },
            "downloadRestricted": {
              "default": false,
              "description": "downloadRestricted",
              "type": "boolean"
            },
            "fileName": {
              "description": "fileName",
              "type": "string"
            },
            "fileType": {
              "description": "fileType",
              "type": "string"
            },
            "id": {
              "description": "id",
              "type": "string"
            },
            "isArchived": {
              "default": false,
              "description": "isArchived",
              "type": "boolean"
            },
            "isDeprecated": {
              "default": false,
              "description": "isDeprecated",
              "type": "boolean"
            },
            "isPrivate": {
              "default": false,
              "description": "isPrivate",
              "type": "boolean"
            },
            "lastModifiedDate": {
              "description": "lastModifiedDate",
              "format": "date-time",
              "type": "string"
            },
            "link": {
              "description": "link",
              "type": "string"
            },
            "modifiedBy": {
              "description": "modifiedBy",
              "type": "string"
            },
            "size": {
              "description": "size",
              "format": "int64",
              "type": "integer"
            },
            "sizeKB": {
              "description": "sizeKB",
              "format": "double",
              "type": "number"
            },
            "uuid": {
              "description": "uuid",
              "type": "string"
            }
          },
          "type": "object"
        },
        "CaseChat": {
          "description": "Case chat model",
          "properties": {
            "agentName": {
              "description": "The chat agent name.",
              "type": "string"
            },
            "body": {
              "description": "The chat transcript.",
              "type": "string"
            },
            "caseNumber": {
              "description": "caseNumber",
              "type": "string"
            },
            "endTime": {
              "description": "The chat end time.",
              "format": "date-time",
              "type": "string"
            },
            "endedBy": {
              "description": "The user who ends the chat.",
              "type": "string"
            },
            "id": {
              "description": "The chat Id.",
              "type": "string"
            },
            "requestTime": {
              "description": "The chat request time.",
              "format": "date-time",
              "type": "string"
            },
            "startTime": {
              "description": "The chat start time.",
              "format": "date-time",
              "type": "string"
            },
            "visitorName": {
              "description": "The chat visitor name.",
              "type": "string"
            }
          },
          "title": "CaseChat",
          "type": "object"
        },
        "CaseComment": {
          "description": "Case comment model",
          "properties": {
            "caseNumber": {
              "description": "caseNumber",
              "type": "string"
            },
            "commentBody": {
              "description": "commentBody",
              "type": "string"
            },
            "contentType": {
              "description": "contentType",
              "type": "string"
            },
            "createdBy": {
              "description": "createdBy",
              "type": "string"
            },
            "createdByType": {
              "description": "createdByType",
              "type": "string"
            },
            "createdDate": {
              "description": "createdDate",
              "format": "date-time",
              "type": "string"
            },
            "doNotChangeStatus": {
              "default": false,
              "description": "doNotChangeStatus",
              "type": "boolean"
            },
            "id": {
              "description": "id",
              "type": "string"
            },
            "isDraft": {
              "default": false,
              "description": "isDraft",
              "type": "boolean"
            },
            "lastModifiedById": {
              "description": "lastModifiedById",
              "type": "string"
            },
            "lastModifiedDate": {
              "description": "lastModifiedDate",
              "format": "date-time",
              "type": "string"
            },
            "publishedDate": {
              "description": "publishedDate",
              "format": "date-time",
              "type": "string"
            }
          },
          "required": [
            "id"
          ],
          "title": "CaseComment",
          "type": "object"
        },
        "CaseExtNotifiedUsersType": {
          "description": "Case notified users type model",
          "properties": {
            "user": {
              "description": "user",
              "items": {
                "$ref": "#/components/schemas/NotifiedUserWithSso"
              },
              "type": "array"
            }
          },
          "title": "NotifiedUser",
          "type": "object"
        },
        "CaseFilter": {
          "description": "Case filter model",
          "properties": {
            "accountNumber": {
              "description": "accountNumber",
              "type": "string"
            },
            "accountNumbers": {
              "description": "accountNumbers",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "associateSSOName": {
              "description": "associateSSOName",
              "type": "string"
            },
            "caseNumbers": {
              "description": "caseNumbers",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "commentIds": {
              "description": "commentIds",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "contributor": {
              "default": false,
              "description": "contributor",
              "type": "boolean"
            },
            "createdBySSOName": {
              "description": "createdBySSOName",
              "type": "string"
            },
            "endDate": {
              "description": "endDate",
              "format": "date-time",
              "type": "string"
            },
            "ftsRole": {
              "default": false,
              "description": "ftsRole",
              "type": "boolean"
            },
            "groupNumber": {
              "description": "groupNumber",
              "type": "string"
            },
            "groupNumbers": {
              "description": "groupNumbers",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "id": {
              "description": "id",
              "type": "string"
            },
            "includeAllCustomerCases": {
              "default": false,
              "description": "includeAllCustomerCases",
              "type": "boolean"
            },
            "includeClosed": {
              "default": false,
              "description": "includeClosed",
              "type": "boolean"
            },
            "includePrivate": {
              "default": false,
              "description": "includePrivate",
              "type": "boolean"
            },
            "includeSecureSupport": {
              "default": false,
              "description": "includeSecureSupport",
              "type": "boolean"
            },
            "internalStatuses": {
              "description": "internalStatuses",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "isLocked": {
              "default": false,
              "description": "isLocked",
              "type": "boolean"
            },
            "keyword": {
              "description": "keyword",
              "type": "string"
            },
            "maxDateOpened": {
              "description": "maxDateOpened",
              "format": "date-time",
              "type": "string"
            },
            "maxResults": {
              "description": "maxResults",
              "format": "int32",
              "type": "integer"
            },
            "maxSBT": {
              "description": "maxSBT",
              "format": "int32",
              "type": "integer"
            },
            "minDateOpened": {
              "description": "minDateOpened",
              "format": "date-time",
              "type": "string"
            },
            "minSBT": {
              "description": "minSBT",
              "format": "int32",
              "type": "integer"
            },
            "offset": {
              "description": "offset",
              "format": "int32",
              "type": "integer"
            },
            "only24X7": {
              "default": false,
              "description": "only24X7",
              "type": "boolean"
            },
            "only24X7HandoverReady": {
              "default": false,
              "description": "only24X7HandoverReady",
              "type": "boolean"
            },
            "onlyEscalated": {
              "default": false,
              "description": "onlyEscalated",
              "type": "boolean"
            },
            "onlyUngrouped": {
              "default": false,
              "description": "onlyUngrouped",
              "type": "boolean"
            },
            "owner": {
              "default": false,
              "description": "owner",
              "type": "boolean"
            },
            "ownerSSOName": {
              "description": "ownerSSOName",
              "type": "string"
            },
            "product": {
              "description": "product",
              "type": "string"
            },
            "products": {
              "description": "products",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "recordType": {
              "description": "recordType",
              "type": "string"
            },
            "reducedInformation": {
              "default": false,
              "description": "reducedInformation",
              "type": "boolean"
            },
            "resourceType": {
              "description": "resourceType",
              "type": "string"
            },
            "sbrs": {
              "description": "sbrs",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "severities": {
              "description": "severities",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "severity": {
              "description": "severity",
              "type": "string"
            },
            "sortField": {
              "description": "sortField",
              "type": "string"
            },
            "sortOrder": {
              "description": "sortOrder",
              "type": "string"
            },
            "startDate": {
              "description": "startDate",
              "format": "date-time",
              "type": "string"
            },
            "status": {
              "description": "status",
              "type": "string"
            },
            "statuses": {
              "description": "statuses",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "translator": {
              "default": false,
              "description": "translator",
              "type": "boolean"
            },
            "type": {
              "description": "type",
              "type": "string"
            },
            "uri": {
              "description": "uri",
              "type": "string"
            },
            "versions": {
              "description": "versions",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "view": {
              "description": "view",
              "type": "string"
            },
            "viewUri": {
              "description": "viewUri",
              "type": "string"
            }
          },
          "required": [
            "maxResults"
          ],
          "title": "CaseFilter",
          "type": "object"
        },
        "CaseLocation": {
          "description": "Case location model",
          "properties": {
            "locations": {
              "description": "locations",
              "items": {
                "type": "string"
              },
              "type": "array",
              "xml": {
                "name": "location"
              }
            }
          },
          "title": "CaseLocation",
          "type": "object"
        },
        "CaseResourceLink": {
          "description": "Case resource link model",
          "properties": {
            "algorithmScore": {
              "description": "algorithmScore",
              "format": "double",
              "type": "number"
            },
            "analysisAlgorithm": {
              "description": "analysisAlgorithm",
              "type": "string"
            },
            "analysisAlgorithmVersion": {
              "description": "analysisAlgorithmVersion",
              "type": "string"
            },
            "analysisCategory": {
              "description": "analysisCategory",
              "type": "string"
            },
            "analysisService": {
              "description": "analysisService",
              "type": "string"
            },
            "analysisServiceVersion": {
              "description": "analysisServiceVersion",
              "type": "string"
            },
            "bucket": {
              "description": "bucket",
              "type": "string"
            },
            "caseComment": {
              "description": "caseComment",
              "type": "string"
            },
            "caseNumber": {
              "description": "caseNumber",
              "type": "string"
            },
            "caseURI": {
              "description": "caseURI",
              "type": "string"
            },
            "client": {
              "description": "client",
              "type": "string"
            },
            "clientVersion": {
              "description": "clientVersion",
              "type": "string"
            },
            "createdBy": {
              "$ref": "#/components/schemas/User"
            },
            "createdById": {
              "description": "createdById",
              "type": "string"
            },
            "createdDate": {
              "description": "createdDate",
              "format": "date-time",
              "type": "string"
            },
            "display": {
              "description": "display",
              "type": "string"
            },
            "externalCaseURI": {
              "description": "externalCaseURI",
              "type": "string"
            },
            "firstSuggestedDate": {
              "description": "firstSuggestedDate",
              "type": "string"
            },
            "isExact": {
              "default": false,
              "description": "isExact",
              "type": "boolean"
            },
            "keywords": {
              "description": "keywords",
              "type": "string"
            },
            "lastModifiedBy": {
              "$ref": "#/components/schemas/User"
            },
            "lastModifiedById": {
              "description": "lastModifiedById",
              "type": "string"
            },
            "lastModifiedDate": {
              "description": "lastModifiedDate",
              "format": "date-time",
              "type": "string"
            },
            "lastSetIsExactAt": {
              "description": "lastSetIsExactAt",
              "type": "string"
            },
            "lastSetIsExactBySSOUsername": {
              "description": "lastSetIsExactBySSOUsername",
              "type": "string"
            },
            "lastSuggestedDate": {
              "description": "lastSuggestedDate",
              "type": "string"
            },
            "linked": {
              "default": false,
              "description": "linked",
              "type": "boolean"
            },
            "linkedAt": {
              "description": "linkedAt",
              "format": "date-time",
              "type": "string"
            },
            "linkedBy": {
              "description": "linkedBy",
              "type": "string"
            },
            "linkedByR": {
              "$ref": "#/components/schemas/User"
            },
            "luceneScore": {
              "description": "luceneScore",
              "type": "string"
            },
            "maturityLevel": {
              "description": "maturityLevel",
              "type": "string"
            },
            "message": {
              "description": "message",
              "type": "string"
            },
            "note": {
              "description": "note",
              "type": "string"
            },
            "origin": {
              "description": "origin",
              "type": "string"
            },
            "pinnedAt": {
              "description": "pinnedAt",
              "type": "string"
            },
            "pinnedBy": {
              "description": "pinnedBy",
              "type": "string"
            },
            "resource": {
              "description": "resource",
              "type": "string"
            },
            "resourceId": {
              "description": "resourceId",
              "type": "string"
            },
            "resourceType": {
              "description": "resourceType",
              "type": "string"
            },
            "resourceTypeLabel": {
              "description": "resourceTypeLabel",
              "type": "string"
            },
            "resourceURI": {
              "description": "resourceURI",
              "type": "string"
            },
            "resourceViewURI": {
              "description": "resourceViewURI",
              "type": "string"
            },
            "returnCode": {
              "description": "returnCode",
              "type": "string"
            },
            "scoringAlgorithmVersion": {
              "description": "scoringAlgorithmVersion",
              "type": "string"
            },
            "suggestedCount": {
              "description": "suggestedCount",
              "type": "string"
            },
            "suggestionRelevanceScore": {
              "description": "suggestionRelevanceScore",
              "type": "string"
            },
            "title": {
              "description": "title",
              "type": "string"
            },
            "tracebackUrl": {
              "description": "tracebackUrl",
              "type": "string"
            },
            "type": {
              "description": "type",
              "type": "string"
            },
            "warnings": {
              "description": "warnings",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "required": [
            "algorithmScore"
          ],
          "title": "CaseResourceLink",
          "type": "object"
        },
        "CasesFilterResponse": {
          "description": "Case filter response model",
          "properties": {
            "cases": {
              "items": {
                "$ref": "#/components/schemas/Case"
              },
              "type": "array"
            },
            "totalCount": {
              "format": "int32",
              "type": "integer"
            }
          },
          "title": "CaseFilterResponse",
          "type": "object"
        },
        "Contact": {
          "description": "Contact model",
          "properties": {
            "access": {
              "default": false,
              "type": "boolean"
            },
            "canAccessAllAccounts": {
              "default": false,
              "type": "boolean"
            },
            "canAddAttachments": {
              "default": false,
              "type": "boolean"
            },
            "email": {
              "type": "string"
            },
            "firstName": {
              "type": "string"
            },
            "hasChat": {
              "default": false,
              "type": "boolean"
            },
            "hasUser": {
              "default": false,
              "type": "boolean"
            },
            "isDefault": {
              "default": false,
              "type": "boolean"
            },
            "isEntitled": {
              "default": false,
              "type": "boolean"
            },
            "isInternal": {
              "default": false,
              "type": "boolean"
            },
            "isOrgAdmin": {
              "default": false,
              "type": "boolean"
            },
            "lastName": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "normalizedTZ": {
              "type": "string"
            },
            "phone": {
              "type": "string"
            },
            "secureSupportTech": {
              "default": false,
              "type": "boolean"
            },
            "ssoUsername": {
              "type": "string"
            },
            "timezone": {
              "type": "string"
            },
            "write": {
              "default": false,
              "type": "boolean"
            }
          },
          "title": "Contact",
          "type": "object"
        },
        "Entitlement": {
          "description": "Entitlement model",
          "properties": {
            "account": {
              "$ref": "#/components/schemas/Account"
            },
            "accountId": {
              "description": "accountId",
              "type": "string"
            },
            "assetId": {
              "description": "assetId",
              "type": "string"
            },
            "businessHoursId": {
              "description": "businessHoursId",
              "type": "string"
            },
            "businessUnit": {
              "description": "businessUnit",
              "type": "string"
            },
            "casesPerEntitlement": {
              "description": "casesPerEntitlement",
              "type": "integer"
            },
            "contractLineItemId": {
              "description": "contractLineItemId",
              "type": "string"
            },
            "contractLineItemSubscriptionProductNum": {
              "description": "contractLineItemSubscriptionProductNum",
              "type": "string"
            },
            "coordinates": {
              "description": "coordinates",
              "type": "string"
            },
            "createdBy": {
              "$ref": "#/components/schemas/User"
            },
            "createdById": {
              "description": "createdById",
              "type": "string"
            },
            "createdDate": {
              "description": "createdDate",
              "format": "date-time",
              "type": "string"
            },
            "endDate": {
              "description": "endDate",
              "format": "date-time",
              "type": "string"
            },
            "entitlementProcessRule": {
              "description": "entitlementProcessRule",
              "type": "string"
            },
            "externalAccountNumber": {
              "description": "externalAccountNumber",
              "type": "string"
            },
            "externalContractId": {
              "description": "externalContractId",
              "type": "string"
            },
            "externalContractLineItemId": {
              "description": "externalContractLineItemId",
              "type": "string"
            },
            "externalEntitlementId": {
              "description": "externalEntitlementId",
              "type": "string"
            },
            "externalProductCode": {
              "description": "externalProductCode",
              "type": "string"
            },
            "id": {
              "description": "id",
              "type": "string"
            },
            "installBaseNumber": {
              "description": "installBaseNumber",
              "type": "string"
            },
            "isActive": {
              "description": "isActive",
              "format": "double",
              "type": "number"
            },
            "isAssociatedWithNoEngineeringProducts": {
              "default": false,
              "description": "isAssociatedWithNoEngineeringProducts",
              "type": "boolean"
            },
            "isConsiderSupported": {
              "default": false,
              "description": "isConsiderSupported",
              "type": "boolean"
            },
            "isDeleted": {
              "default": false,
              "description": "isDeleted",
              "type": "boolean"
            },
            "isL3": {
              "default": false,
              "description": "isL3",
              "type": "boolean"
            },
            "isLayered": {
              "default": false,
              "description": "isLayered",
              "type": "boolean"
            },
            "isManuallySelectedEntitlementProcess": {
              "default": false,
              "description": "isManuallySelectedEntitlementProcess",
              "type": "boolean"
            },
            "isPerIncident": {
              "default": false,
              "description": "isPerIncident",
              "type": "boolean"
            },
            "isTAMEntitlement": {
              "default": false,
              "description": "isTAMEntitlement",
              "type": "boolean"
            },
            "lastModifiedBy": {
              "$ref": "#/components/schemas/User"
            },
            "lastModifiedById": {
              "description": "lastModifiedById",
              "type": "string"
            },
            "lastModifiedDate": {
              "description": "lastModifiedDate",
              "format": "date-time",
              "type": "string"
            },
            "lastReferencedDate": {
              "description": "lastReferencedDate",
              "format": "date-time",
              "type": "string"
            },
            "lastViewedDate": {
              "default": false,
              "description": "lastViewedDate",
              "type": "boolean"
            },
            "levelTypeConcat": {
              "description": "levelTypeConcat",
              "type": "string"
            },
            "name": {
              "description": "name",
              "type": "string"
            },
            "oracleStatus": {
              "description": "oracleStatus",
              "type": "string"
            },
            "quantity": {
              "description": "quantity",
              "format": "double",
              "type": "number"
            },
            "remainingCases": {
              "description": "remainingCases",
              "type": "integer"
            },
            "serviceContractId": {
              "description": "serviceContractId",
              "type": "string"
            },
            "serviceLevel": {
              "description": "serviceLevel",
              "type": "string"
            },
            "serviceLevelLabel": {
              "description": "serviceLevelLabel",
              "type": "string"
            },
            "serviceType": {
              "description": "serviceType",
              "type": "string"
            },
            "serviceValue": {
              "description": "serviceValue",
              "format": "double",
              "type": "number"
            },
            "slaProcessId": {
              "description": "slaProcessId",
              "type": "string"
            },
            "startDate": {
              "description": "startDate",
              "format": "date-time",
              "type": "string"
            },
            "status": {
              "description": "status",
              "type": "string"
            },
            "statusAndStartDate": {
              "description": "statusAndStartDate",
              "format": "double",
              "type": "number"
            },
            "subscriptionNumber": {
              "description": "subscriptionNumber",
              "type": "string"
            },
            "subscriptionProductNumber": {
              "description": "subscriptionProductNumber",
              "type": "string"
            },
            "supportLevel": {
              "description": "supportLevel",
              "type": "string"
            },
            "type": {
              "description": "type",
              "type": "string"
            }
          },
          "title": "Entitlement",
          "type": "object"
        },
        "ErrorRep": {
          "description": "Error model",
          "properties": {
            "detailMessage": {
              "type": "string"
            },
            "internalErrorCode": {
              "type": "string"
            },
            "message": {
              "type": "string"
            },
            "recommendations": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "title": "ErrorRep",
          "type": "object"
        },
        "ExternalTracker": {
          "description": "External tracker model",
          "properties": {
            "caseId": {
              "description": "caseId",
              "type": "string"
            },
            "closedAt": {
              "description": "closedAt",
              "format": "date-time",
              "type": "string"
            },
            "collaborationComment": {
              "$ref": "#/components/schemas/CaseComment"
            },
            "collaborationCommentId": {
              "description": "collaborationCommentId",
              "type": "string"
            },
            "createdAt": {
              "description": "createdAt",
              "format": "date-time",
              "type": "string"
            },
            "createdBy": {
              "$ref": "#/components/schemas/User"
            },
            "createdById": {
              "description": "createdById",
              "type": "string"
            },
            "createdDate": {
              "description": "createdDate",
              "format": "date-time",
              "type": "string"
            },
            "deletedAt": {
              "description": "deletedAt",
              "format": "date-time",
              "type": "string"
            },
            "deletedByName": {
              "description": "deletedByName",
              "type": "string"
            },
            "description": {
              "description": "description",
              "type": "string"
            },
            "eligibilityKeyValue": {
              "description": "eligibilityKeyValue",
              "type": "string"
            },
            "establishedBy": {
              "description": "establishedBy",
              "type": "string"
            },
            "establishedByUser": {
              "$ref": "#/components/schemas/User"
            },
            "establishedByUserId": {
              "description": "establishedByUserId",
              "type": "string"
            },
            "hasBeenPushed": {
              "default": false,
              "description": "hasBeenPushed",
              "type": "boolean"
            },
            "hasBeenPushedSuccessfully": {
              "default": false,
              "description": "hasBeenPushedSuccessfully",
              "type": "boolean"
            },
            "id": {
              "description": "id",
              "type": "string"
            },
            "identifier": {
              "description": "identifier",
              "type": "string"
            },
            "lastActivityDate": {
              "description": "lastActivityDate",
              "format": "date-time",
              "type": "string"
            },
            "lastModifiedBy": {
              "$ref": "#/components/schemas/User"
            },
            "lastModifiedById": {
              "description": "lastModifiedById",
              "type": "string"
            },
            "lastModifiedDate": {
              "description": "lastModifiedDate",
              "format": "date-time",
              "type": "string"
            },
            "lastPushRequest": {
              "description": "lastPushRequest",
              "format": "date-time",
              "type": "string"
            },
            "lastReferencedDate": {
              "description": "lastReferencedDate",
              "format": "date-time",
              "type": "string"
            },
            "lastViewedDate": {
              "description": "lastViewedDate",
              "format": "date-time",
              "type": "string"
            },
            "liveID": {
              "description": "liveID",
              "type": "string"
            },
            "name": {
              "description": "name",
              "type": "string"
            },
            "overrideEntitlementCheck": {
              "default": false,
              "description": "overrideEntitlementCheck",
              "type": "boolean"
            },
            "productID": {
              "description": "productID",
              "type": "string"
            },
            "productName": {
              "description": "productName",
              "type": "string"
            },
            "rejected": {
              "default": false,
              "description": "rejected",
              "type": "boolean"
            },
            "rejectedAt": {
              "description": "rejectedAt",
              "format": "date-time",
              "type": "string"
            },
            "rejectedMessage": {
              "description": "rejectedMessage",
              "type": "string"
            },
            "resourceKey": {
              "description": "resourceKey",
              "type": "string"
            },
            "resourceURL": {
              "description": "resourceURL",
              "type": "string"
            },
            "severity": {
              "description": "severity",
              "type": "string"
            },
            "solveCallingCountry": {
              "description": "solveCallingCountry",
              "type": "string"
            },
            "status": {
              "description": "status",
              "type": "string"
            },
            "supportTopicID": {
              "description": "supportTopicID",
              "type": "string"
            },
            "supportTopicName": {
              "description": "supportTopicName",
              "type": "string"
            },
            "system": {
              "description": "system",
              "type": "string"
            },
            "systemInstance": {
              "description": "systemInstance",
              "type": "string"
            },
            "ticketReference": {
              "description": "ticketReference",
              "type": "string"
            },
            "title": {
              "description": "title",
              "type": "string"
            },
            "visibilityLevel": {
              "description": "visibilityLevel",
              "type": "string"
            }
          },
          "title": "ExternalTracker",
          "type": "object"
        },
        "ExternalTrackerUpdate": {
          "description": "External tracker update model",
          "properties": {
            "body": {
              "description": "body",
              "type": "string"
            },
            "caseId": {
              "description": "caseId",
              "type": "string"
            },
            "createdBy": {
              "$ref": "#/components/schemas/User"
            },
            "createdById": {
              "description": "createdById",
              "type": "string"
            },
            "createdDate": {
              "description": "createdDate",
              "format": "date-time",
              "type": "string"
            },
            "externalIdentifier": {
              "description": "externalIdentifier",
              "type": "string"
            },
            "externalTracker": {
              "$ref": "#/components/schemas/ExternalTracker"
            },
            "externalTrackerId": {
              "description": "externalTrackerId",
              "type": "string"
            },
            "id": {
              "description": "id",
              "type": "string"
            },
            "identifier": {
              "description": "identifier",
              "type": "string"
            },
            "lastActivityDate": {
              "description": "lastActivityDate",
              "format": "date-time",
              "type": "string"
            },
            "lastModifiedBy": {
              "$ref": "#/components/schemas/User"
            },
            "lastModifiedById": {
              "description": "lastModifiedById",
              "type": "string"
            },
            "lastModifiedDate": {
              "description": "lastModifiedDate",
              "format": "date-time",
              "type": "string"
            },
            "name": {
              "description": "name",
              "type": "string"
            },
            "originatingSystem": {
              "description": "originatingSystem",
              "type": "string"
            },
            "originatingSystemInstance": {
              "description": "originatingSystemInstance",
              "type": "string"
            },
            "originatingSystemLastUpdatedAt": {
              "description": "originatingSystemLastUpdatedAt",
              "format": "date-time",
              "type": "string"
            },
            "partnerCookie": {
              "description": "partnerCookie",
              "type": "string"
            },
            "type": {
              "description": "type",
              "type": "string"
            },
            "updateBy": {
              "description": "updateBy",
              "type": "string"
            },
            "updateReference": {
              "description": "updateReference",
              "type": "string"
            },
            "visibility": {
              "description": "visibility",
              "type": "string"
            }
          },
          "title": "ExternalTrackerUpdate",
          "type": "object"
        },
        "HBugzillas": {
          "description": "List of bugzillas",
          "properties": {
            "bugzillas": {
              "description": "bugzillas",
              "items": {
                "$ref": "#/components/schemas/BugzillaBug"
              },
              "type": "array",
              "xml": {
                "name": "bugzilla"
              }
            }
          },
          "title": "HBugzillas",
          "type": "object"
        },
        "HCaseResourceLinks": {
          "description": "List of case resources",
          "properties": {
            "caseResourceLinks": {
              "description": "caseResourceLinks",
              "items": {
                "$ref": "#/components/schemas/CaseResourceLink"
              },
              "type": "array"
            }
          },
          "title": "HCaseResourceLinks",
          "type": "object"
        },
        "NotifiedUser": {
          "description": "Notified user model",
          "properties": {
            "ssoUsername": {
              "description": "ssoUsername",
              "type": "string"
            },
            "title": {
              "description": "title",
              "type": "string"
            },
            "type": {
              "description": "type",
              "type": "string"
            }
          },
          "title": "NotifiedUser",
          "type": "object"
        },
        "NotifiedUserWithSso": {
          "description": "Notified user sso username",
          "properties": {
            "ssoUsername": {
              "description": "ssoUsername",
              "type": "string"
            },
            "title": {
              "description": "title",
              "type": "string"
            },
            "type": {
              "description": "type",
              "type": "string"
            }
          },
          "required": [
            "ssoUsername"
          ],
          "title": "NotifiedUserWithSso",
          "type": "object"
        },
        "Recommendation": {
          "description": "Recommendation model",
          "properties": {
            "description": {
              "type": "string"
            },
            "product": {
              "type": "string"
            },
            "summary": {
              "type": "string"
            },
            "version": {
              "type": "string"
            }
          },
          "title": "Recommendation",
          "type": "object"
        },
        "SftpAttachment": {
          "description": "Sftp Attachment",
          "properties": {
            "attachmentId": {
              "type": "string"
            },
            "caseNumber": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "error": {
              "type": "string"
            },
            "fileName": {
              "type": "string"
            },
            "isPrivate": {
              "default": false,
              "type": "boolean"
            },
            "status": {
              "type": "string"
            },
            "uploadReqBy": {
              "type": "string"
            },
            "uploadedReqAt": {
              "format": "date-time",
              "type": "string"
            }
          },
          "type": "object"
        },
        "SftpAttachmentStatusRep": {
          "description": "Sftp Attachment Status Response",
          "properties": {
            "sftpAttachments": {
              "items": {
                "$ref": "#/components/schemas/SftpAttachment"
              },
              "type": "array"
            },
            "totalItems": {
              "format": "int32",
              "type": "integer"
            }
          },
          "type": "object"
        },
        "SftpAttachmentStatusRequest": {
          "description": "Sftp Attachment Status Request",
          "properties": {
            "fileName": {
              "description": "file name",
              "example": "testFile.txt",
              "type": "string"
            },
            "username": {
              "description": "Username of the user who uploaded files",
              "example": "rhn-support-xxx",
              "type": "string"
            }
          },
          "type": "object"
        },
        "SftpLoginCredentialsRep": {
          "description": "Sftp Login Credentials Request",
          "properties": {
            "expiryDate": {
              "type": "string"
            },
            "token": {
              "type": "string"
            },
            "username": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "SftpTokenRequest": {
          "description": "Sftp Token Request",
          "properties": {
            "expiryInDays": {
              "description": "expiryInDays",
              "example": 60,
              "format": "int32",
              "maximum": 90,
              "minimum": 1,
              "type": "integer"
            },
            "isAnonymous": {
              "default": false,
              "description": "isAnonymous",
              "example": true,
              "type": "boolean"
            },
            "isOneTime": {
              "default": false,
              "description": "isOneTime",
              "example": true,
              "type": "boolean"
            }
          },
          "required": [
            "expiryInDays"
          ],
          "type": "object"
        },
        "SolrCaseSearchRequest": {
          "description": "Solr case search request model",
          "properties": {
            "clientName": {
              "type": "string"
            },
            "expression": {
              "type": "string"
            },
            "partnerSearch": {
              "type": "boolean"
            },
            "q": {
              "type": "string"
            },
            "rows": {
              "format": "int64",
              "type": "integer"
            },
            "start": {
              "format": "int64",
              "type": "integer"
            }
          },
          "required": [
            "q"
          ],
          "type": "object",
          "x-className": {
            "format": "com.redhat.integration.model.solr.SolrCaseSearchRequest",
            "type": "string"
          }
        },
        "SolrSearchRequest": {
          "description": "Solr search request model",
          "properties": {
            "clientName": {
              "type": "string"
            },
            "expression": {
              "type": "string"
            },
            "q": {
              "type": "string"
            },
            "rows": {
              "format": "int64",
              "type": "integer"
            },
            "start": {
              "format": "int64",
              "type": "integer"
            }
          },
          "required": [
            "q"
          ],
          "type": "object",
          "x-className": {
            "format": "com.redhat.integration.model.solr.SolrSearchRequest",
            "type": "string"
          }
        },
        "UpdateCaseRequest": {
          "description": "Update Case Request model",
          "properties": {
            "accountNumberRef": {
              "description": "accountNumberRef",
              "type": "string"
            },
            "alternateId": {
              "description": "alternateId",
              "type": "string"
            },
            "caseLanguage": {
              "description": "caseLanguage",
              "type": "string"
            },
            "caseType": {
              "description": "caseType",
              "type": "string"
            },
            "cep": {
              "default": false,
              "description": "cep",
              "type": "boolean"
            },
            "contactInfo24x7": {
              "description": "contactInfo24X7",
              "type": "string"
            },
            "contactSSOName": {
              "description": "contactSSOName",
              "type": "string"
            },
            "customerEscalation": {
              "default": false,
              "description": "customerEscalation",
              "type": "boolean"
            },
            "description": {
              "description": "description",
              "type": "string"
            },
            "emailAddress": {
              "description": "emailAddress",
              "type": "string"
            },
            "enhancedSLA": {
              "default": false,
              "description": "enhancedSLA",
              "type": "boolean"
            },
            "entitlementSla": {
              "description": "entitlementSla",
              "type": "string"
            },
            "environment": {
              "description": "environment",
              "type": "string"
            },
            "fts": {
              "default": false,
              "description": "fts",
              "type": "boolean"
            },
            "groupNumber": {
              "description": "groupNumber",
              "type": "string"
            },
            "hostname": {
              "description": "hostname",
              "type": "string"
            },
            "issue": {
              "description": "issue",
              "type": "string"
            },
            "name": {
              "description": "name",
              "type": "string"
            },
            "noClusterIdReason": {
              "description": "noClusterIdReason",
              "type": "string"
            },
            "noClusterIdReasonExplanation": {
              "description": "noClusterIdReasonExplanation",
              "type": "string"
            },
            "notes": {
              "description": "Unique ID used when creating a case (used predominantly by solution engine)",
              "type": "string"
            },
            "openshiftClusterID": {
              "description": "openshiftClusterID",
              "type": "string"
            },
            "openshiftClusterVersion": {
              "description": "openshiftClusterVersion",
              "type": "string"
            },
            "periodicityOfIssue": {
              "description": "periodicityOfIssue",
              "type": "string"
            },
            "phone": {
              "description": "phone",
              "type": "string"
            },
            "product": {
              "description": "product",
              "type": "string"
            },
            "reopenedReason": {
              "description": "contactInfo24X7",
              "type": "string"
            },
            "severity": {
              "description": "severity",
              "type": "string"
            },
            "status": {
              "description": "status",
              "type": "string"
            },
            "summary": {
              "description": "summary",
              "type": "string"
            },
            "timeFramesAndUrgency": {
              "description": "timeFramesAndUrgency",
              "type": "string"
            },
            "version": {
              "description": "version",
              "type": "string"
            }
          },
          "title": "UpdateCaseRequest",
          "type": "object"
        },
        "User": {
          "description": "User model",
          "properties": {
            "aboutMe": {
              "description": "aboutMe",
              "type": "string"
            },
            "account": {
              "$ref": "#/components/schemas/Account"
            },
            "accountId": {
              "description": "accountId",
              "type": "string"
            },
            "accountNumber": {
              "description": "accountNumber",
              "type": "string"
            },
            "alias": {
              "description": "alias",
              "type": "string"
            },
            "bomgarUsername": {
              "description": "bomgarUsername",
              "type": "string"
            },
            "callCenterId": {
              "description": "callCenterId",
              "type": "string"
            },
            "canWorkNightShift": {
              "default": false,
              "description": "canWorkNightShift",
              "type": "boolean"
            },
            "city": {
              "description": "city",
              "type": "string"
            },
            "contact": {
              "$ref": "#/components/schemas/Contact"
            },
            "contactId": {
              "description": "contactId",
              "type": "string"
            },
            "contactNumber": {
              "description": "contactNumber",
              "type": "string"
            },
            "contactNumberRef": {
              "description": "contactNumberRef",
              "type": "string"
            },
            "country": {
              "description": "country",
              "type": "string"
            },
            "countryCustom": {
              "description": "countryCustom",
              "type": "string"
            },
            "department": {
              "description": "department",
              "type": "string"
            },
            "email": {
              "description": "email",
              "type": "string"
            },
            "explicitKerberosName": {
              "description": "explicitKerberosName",
              "type": "string"
            },
            "fifthLevelManagerUsername": {
              "description": "fifthLevelManagerUsername",
              "type": "string"
            },
            "firstName": {
              "description": "firstName",
              "type": "string"
            },
            "firstNameCustom": {
              "description": "firstNameCustom",
              "type": "string"
            },
            "fourthLevelManagerUsername": {
              "description": "fourthLevelManagerUsername",
              "type": "string"
            },
            "fullName": {
              "description": "fullName",
              "type": "string"
            },
            "fullTitle": {
              "description": "fullTitle",
              "type": "string"
            },
            "genesysUsername": {
              "description": "genesysUsername",
              "type": "string"
            },
            "gssCostcenterName": {
              "description": "gssCostcenterName",
              "type": "string"
            },
            "id": {
              "description": "id",
              "type": "string"
            },
            "inGSS": {
              "description": "inGSS",
              "type": "string"
            },
            "ircNick": {
              "description": "ircNick",
              "type": "string"
            },
            "isActive": {
              "default": false,
              "description": "isActive",
              "type": "boolean"
            },
            "isManager": {
              "default": false,
              "description": "isManager",
              "type": "boolean"
            },
            "itarUser": {
              "default": false,
              "description": "itarUser",
              "type": "boolean"
            },
            "kerberosName": {
              "description": "kerberosName",
              "type": "string"
            },
            "lastName": {
              "description": "lastName",
              "type": "string"
            },
            "lastNameCustom": {
              "description": "lastNameCustom",
              "type": "string"
            },
            "manager": {
              "$ref": "#/components/schemas/User"
            },
            "managerId": {
              "description": "managerId",
              "type": "string"
            },
            "managerSID": {
              "description": "managerSID",
              "type": "string"
            },
            "mobilePhone": {
              "description": "mobilePhone",
              "type": "string"
            },
            "name": {
              "description": "name",
              "type": "string"
            },
            "officeLocation": {
              "description": "officeLocation",
              "type": "string"
            },
            "outOfOffice": {
              "default": false,
              "description": "outOfOffice",
              "type": "boolean"
            },
            "outOfOfficeChangedBy": {
              "description": "outOfOfficeChangedBy",
              "type": "string"
            },
            "outOfOfficeChangedOn": {
              "description": "outOfOfficeChangedOn",
              "format": "date-time",
              "type": "string"
            },
            "outOfOfficeEnd": {
              "description": "outOfOfficeEnd",
              "format": "date-time",
              "type": "string"
            },
            "outOfOfficeStart": {
              "description": "outOfOfficeStart",
              "format": "date-time",
              "type": "string"
            },
            "phone": {
              "description": "phone",
              "type": "string"
            },
            "redhatComEmailAddress": {
              "description": "redhatComEmailAddress",
              "type": "string"
            },
            "region": {
              "description": "region",
              "type": "string"
            },
            "rhatLocation": {
              "description": "rhatLocation",
              "type": "string"
            },
            "secondLevelManagerUsername": {
              "description": "secondLevelManagerUsername",
              "type": "string"
            },
            "sixthLevelManagerUsername": {
              "description": "sixthLevelManagerUsername",
              "type": "string"
            },
            "ssoUsername": {
              "description": "ssoUsername",
              "type": "string"
            },
            "superRegion": {
              "description": "superRegion",
              "type": "string"
            },
            "thirdLevelManagerUsername": {
              "description": "thirdLevelManagerUsername",
              "type": "string"
            },
            "timeZone": {
              "description": "timeZone",
              "type": "string"
            },
            "title": {
              "description": "title",
              "type": "string"
            },
            "userName": {
              "description": "userName",
              "type": "string"
            },
            "userRoleId": {
              "description": "userRoleId",
              "type": "string"
            },
            "virtualOffice": {
              "description": "virtualOffice",
              "type": "string"
            }
          },
          "title": "User",
          "type": "object"
        }
      },
      "securitySchemes": {
        "Bearer": {
          "in": "header",
          "name": "Authorization",
          "type": "apiKey"
        }
      }
    },
    "info": {
      "contact": {
        "email": "hydra-dev@redhat.com",
        "name": "Hydra Team"
      },
      "description": "Swagger documentation for external users",
      "title": "Support Services",
      "version": "v1",
      "x-audience": "Partner & Customer"
    },
    "openapi": "3.0.1",
    "paths": {
      "/cases/{caseNumber}/attachments/": {
        "get": {
          "parameters": [
            {
              "description": "flag to include deleted attachments in the response",
              "in": "query",
              "name": "includeDeleted",
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "Sorting Field Name like id, lastModifiedDate,createDate,sizeKB except size",
              "in": "query",
              "name": "sortingField",
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "Sort by desc/asc",
              "in": "query",
              "name": "sortBy",
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "path",
              "name": "caseNumber",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "items": {
                      "$ref": "#/components/schemas/CaseAttachment"
                    },
                    "type": "array"
                  }
                }
              },
              "description": "The case attachments metadata"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Account mismatch."
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Internal Server Error"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Get all attachment metadata",
          "tags": [
            "case attachments"
          ]
        },
        "post": {
          "parameters": [
            {
              "description": "Case number",
              "in": "path",
              "name": "caseNumber",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "items": {
                      "$ref": "#/components/schemas/CaseAttachment"
                    },
                    "type": "array"
                  }
                }
              },
              "description": "The case attachments metadata"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Account mismatch."
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Internal Server Error"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Upload a case attachment",
          "tags": [
            "case attachments"
          ]
        }
      },
      "/cases/{caseNumber}/attachments/status": {
        "get": {
          "parameters": [
            {
              "in": "path",
              "name": "caseNumber",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {},
              "description": "Upload request status of all attachments"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Account mismatch."
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Internal Server Error"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Upload request status of all attachments for a given case number",
          "tags": [
            "case attachments"
          ]
        }
      },
      "/cases/{caseNumber}/attachments/{attachmentId}": {
        "delete": {
          "parameters": [
            {
              "in": "path",
              "name": "caseNumber",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "path",
              "name": "attachmentId",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "content": {},
              "description": "Attachment deleted successfully"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Account mismatch."
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Attachment Id not found"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Internal Server Error"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Delete attachment metadata",
          "tags": [
            "case attachments"
          ]
        },
        "head": {
          "parameters": [
            {
              "description": "Case number",
              "in": "path",
              "name": "caseNumber",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "attachment Id",
              "in": "path",
              "name": "attachmentId",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Account mismatch."
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Attachment Id not found"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Internal Server Error"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Check case attachment metadata exist or not",
          "tags": [
            "case attachments"
          ]
        }
      },
      "/cases/{caseNumber}/attachments/{attachmentId}/status": {
        "get": {
          "parameters": [
            {
              "in": "path",
              "name": "caseNumber",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "path",
              "name": "attachmentId",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Account mismatch."
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Attachment Id not found"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Internal Server Error"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Upload request status",
          "tags": [
            "case attachments"
          ]
        }
      },
      "/search/cases": {
        "get": {
          "description": "Retrieves the list of cases from Solr based on the input request",
          "operationId": "getSolrCasesSearchResult",
          "parameters": [
            {
              "description": "Solr query",
              "in": "query",
              "name": "q",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "If you want to include partners accounts as well",
              "in": "query",
              "name": "partnerSearch",
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {},
              "description": "Solr Response"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Unable to fetch cases from solr"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Search cases based on Search Criteria",
          "tags": [
            "search"
          ]
        }
      },
      "/search/kcs": {
        "get": {
          "description": "Retrieves the list of documents from Solr based on the input request",
          "operationId": "getKcsSearchResults",
          "parameters": [
            {
              "description": "Solr query",
              "in": "query",
              "name": "q",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {},
              "description": "Solr Response"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Unable to fetch kcs data"
            }
          },
          "summary": "Search based on Search Criteria",
          "tags": [
            "search"
          ]
        }
      },
      "/search/recommendations": {
        "get": {
          "description": "Retrieves the list of recommendations from Solr based on the input request",
          "operationId": "getRecommendations",
          "parameters": [
            {
              "description": "Input query",
              "in": "query",
              "name": "q",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {},
              "description": "Recommendation Response"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Unable to fetch recommendations"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Fetches Recommendation based on Search Criteria",
          "tags": [
            "search"
          ]
        },
        "post": {
          "description": "Add a recommendation to the case as specified by the case number in the path.",
          "operationId": "createRecommendations",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Recommendation"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "content": {},
              "description": "Recommendation Response"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Unable to create recommendations"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Create Recommendations",
          "tags": [
            "search"
          ],
          "x-codegen-request-body-name": "body"
        }
      },
      "/search/v2/cases": {
        "post": {
          "description": "Retrieves the list of cases from Solr based on the input request",
          "operationId": "getSolrCasesSearchV2Result",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SolrCaseSearchRequest"
                }
              }
            },
            "description": "cases search details",
            "required": true
          },
          "responses": {
            "200": {
              "content": {},
              "description": "Solr Response"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Unable to fetch cases from solr"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Search cases based on Search Criteria",
          "tags": [
            "search"
          ],
          "x-codegen-request-body-name": "body"
        }
      },
      "/search/v2/kcs": {
        "post": {
          "description": "Retrieves the list of documents from Solr based on the input request",
          "operationId": "getSolrV2SearchResult",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SolrSearchRequest"
                }
              }
            },
            "description": "Kcs search details",
            "required": true
          },
          "responses": {
            "200": {
              "content": {},
              "description": "Solr Response"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Unable to fetch kcs data"
            }
          },
          "summary": "Search based on Search Criteria",
          "tags": [
            "search"
          ],
          "x-codegen-request-body-name": "body"
        }
      },
      "/v1/accounts/current": {
        "get": {
          "description": "Returns the default account for the calling user.",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Account"
                  }
                }
              },
              "description": "The returned account"
            },
            "400": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Invalid request"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Invalid permissions"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Internal server error"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Find account by calling User",
          "tags": [
            "Account"
          ]
        }
      },
      "/v1/accounts/customer/{partnerAccountNumber}": {
        "get": {
          "description": "Retrieve the customer accounts for the account specified in the path.",
          "parameters": [
            {
              "description": "Partner Account Number",
              "in": "path",
              "name": "partnerAccountNumber",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "items": {
                      "$ref": "#/components/schemas/Account"
                    },
                    "type": "array"
                  }
                }
              },
              "description": "List of Customer Accounts for Partner"
            },
            "400": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Invalid request"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Invalid permissions"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Invalid partner account number"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Internal server error"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "List Customer Accounts for Partner",
          "tags": [
            "Account"
          ]
        }
      },
      "/v1/accounts/partner/{customerAccountNumber}": {
        "get": {
          "description": "Retrieve the partner accounts  for the account specified in the path.",
          "parameters": [
            {
              "description": "Customer Account Number",
              "in": "path",
              "name": "customerAccountNumber",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "items": {
                      "$ref": "#/components/schemas/Account"
                    },
                    "type": "array"
                  }
                }
              },
              "description": "List of Partner Accounts for Customer"
            },
            "400": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Invalid request"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Invalid permissions"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Invalid customer account number"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Internal server error"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "List Partner Accounts for Customer",
          "tags": [
            "Account"
          ]
        }
      },
      "/v1/accounts/{accountNumber}": {
        "get": {
          "description": "Returns the account specified in the path.",
          "parameters": [
            {
              "description": "account number",
              "in": "path",
              "name": "accountNumber",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Account"
                  }
                }
              },
              "description": "The returned account"
            },
            "400": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Invalid request"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Invalid permissions"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Invalid account number"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Internal server error"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Find account by number",
          "tags": [
            "Account"
          ]
        }
      },
      "/v1/accounts/{accountNumber}/casegroups/{groupNumber}/users": {
        "get": {
          "description": "Retrieve the users on the account and group specified in the path.",
          "parameters": [
            {
              "description": "Account Number",
              "in": "path",
              "name": "accountNumber",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "Group Number",
              "in": "path",
              "name": "groupNumber",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "items": {
                      "$ref": "#/components/schemas/User"
                    },
                    "type": "array"
                  }
                }
              },
              "description": "List of users"
            },
            "400": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Invalid request"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Invalid permissions"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Invalid account number or case group number"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Internal server error"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Retrieve list of users for given case group",
          "tags": [
            "Account"
          ]
        }
      },
      "/v1/accounts/{accountNumber}/contacts": {
        "get": {
          "description": "Retrieve the users associated with the account specified in the path.",
          "parameters": [
            {
              "description": "account number",
              "in": "path",
              "name": "accountNumber",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "items": {
                      "$ref": "#/components/schemas/Contact"
                    },
                    "type": "array"
                  }
                }
              },
              "description": "The returned contacts"
            },
            "400": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Invalid request"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Invalid permissions"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Invalid account number"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Internal server error"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Find contacts for an account",
          "tags": [
            "Account"
          ]
        }
      },
      "/v1/businesshours": {
        "get": {
          "description": "Retrieves the list of business hours based on specified timezone.",
          "operationId": "getBusinessHours",
          "parameters": [
            {
              "description": "Timezone",
              "in": "query",
              "name": "timezone",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BusinessHours"
                  }
                }
              },
              "description": "All the business hours"
            },
            "400": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Invalid Mandatory Parameter:timezone"
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Unable to authenticate user"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Invalid Permissions"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "No content found for requested timezone"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Get Business Hours",
          "tags": [
            "business hours"
          ]
        }
      },
      "/v1/cases": {
        "post": {
          "description": "Create a case with the information posted in the content.",
          "operationId": "createCase",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Case"
                }
              }
            },
            "description": "case details",
            "required": true
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CaseLocation"
                  }
                }
              },
              "description": "The location URI for the created case"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Account mismatch."
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Internal Server Error"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Create new case",
          "tags": [
            "case"
          ],
          "x-codegen-request-body-name": "body"
        }
      },
      "/v1/cases/filter": {
        "post": {
          "description": "Retrieve the cases specified by the filter object passed as the content of the request.",
          "operationId": "getCases",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CaseFilter"
                }
              }
            },
            "description": "case filters",
            "required": true
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CasesFilterResponse"
                  }
                }
              },
              "description": "Cases founds are:"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Account mismatch."
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Internal Server Error"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Get Cases by filters",
          "tags": [
            "case"
          ],
          "x-codegen-request-body-name": "body"
        }
      },
      "/v1/cases/{caseNumber}": {
        "get": {
          "description": "Retrieve the case based on the case number supplied in the path.",
          "operationId": "getCase",
          "parameters": [
            {
              "description": "case number",
              "in": "path",
              "name": "caseNumber",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Case"
                  }
                }
              },
              "description": "The case that was found"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Account mismatch."
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Case not found"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Internal Server Error"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Get Case By Case Number",
          "tags": [
            "case"
          ]
        },
        "put": {
          "description": "Update the case specified in the path with the content of the request.",
          "operationId": "updateCase",
          "parameters": [
            {
              "description": "Case Number",
              "in": "path",
              "name": "caseNumber",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateCaseRequest"
                }
              }
            },
            "description": "case details",
            "required": true
          },
          "responses": {
            "200": {
              "content": {},
              "description": "The case that was updated"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Account mismatch."
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Case not found"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Internal Server Error"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Update case",
          "tags": [
            "case"
          ],
          "x-codegen-request-body-name": "body"
        }
      },
      "/v1/cases/{caseNumber}/comments": {
        "get": {
          "description": "Retrieve the comments on the case number specified in the path.",
          "operationId": "getCaseComments",
          "parameters": [
            {
              "description": "Case Number",
              "in": "path",
              "name": "caseNumber",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "Start Date",
              "in": "query",
              "name": "startDate",
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "End Date",
              "in": "query",
              "name": "endDate",
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "Sort Field",
              "in": "query",
              "name": "sortField",
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "Sort Order",
              "in": "query",
              "name": "sortOrder",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "items": {
                      "$ref": "#/components/schemas/CaseComment"
                    },
                    "type": "array"
                  }
                }
              },
              "description": "The required case that was found"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Account mismatch."
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Case not found"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Internal Server Error"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Get Comments on case",
          "tags": [
            "case"
          ]
        },
        "post": {
          "description": "Add a comment to the case specified in the path with the content of the request.",
          "operationId": "createCaseComment",
          "parameters": [
            {
              "description": "caseNumber",
              "in": "path",
              "name": "caseNumber",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CaseComment"
                }
              }
            },
            "description": "comment body",
            "required": true
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CaseComment"
                  }
                }
              },
              "description": "The case that was found"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Account mismatch."
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Case not found"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Internal Server Error"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Create Comment on case",
          "tags": [
            "case"
          ],
          "x-codegen-request-body-name": "body"
        }
      },
      "/v1/cases/{caseNumber}/comments/{commentId}": {
        "get": {
          "description": "Retrieve the content specified by the case number and comment id in the path.",
          "operationId": "getCaseCommentById",
          "parameters": [
            {
              "description": "Case Number",
              "in": "path",
              "name": "caseNumber",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "Comment Id",
              "in": "path",
              "name": "commentId",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CaseComment"
                  }
                }
              },
              "description": "Case comment"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Account mismatch."
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Case or Comment not found"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Internal Server Error"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Get case comment by comment id",
          "tags": [
            "case"
          ]
        }
      },
      "/v1/cases/{caseNumber}/externaltrackerupdates": {
        "get": {
          "description": "Retrieve the externalUpdates on the case number specified in the path.",
          "operationId": "getExternalTrackerUpdates",
          "parameters": [
            {
              "description": "Case Number",
              "in": "path",
              "name": "caseNumber",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "Start Date",
              "in": "query",
              "name": "startDate",
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "End Date",
              "in": "query",
              "name": "endDate",
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "Sort Field",
              "in": "query",
              "name": "sortField",
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "Sort Order",
              "in": "query",
              "name": "sortOrder",
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "Originating system",
              "in": "query",
              "name": "originatingSystem",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ExternalTrackerUpdate"
                  }
                }
              },
              "description": "Retrieve the externalUpdates on the case number specified in the path."
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Account mismatch."
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "No ExternalTrackerUpdates found"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Internal Server Error"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "List the externalUpdates on the specified case",
          "tags": [
            "case"
          ]
        }
      },
      "/v1/cases/{caseNumber}/notifiedusers": {
        "post": {
          "description": "Add notified users to the case specified by the case number in the path.",
          "operationId": "addNotifiedUsers",
          "parameters": [
            {
              "description": "CaseNumber",
              "in": "path",
              "name": "caseNumber",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CaseExtNotifiedUsersType"
                }
              }
            },
            "description": "Notified users to add",
            "required": true
          },
          "responses": {
            "201": {
              "content": {},
              "description": "The notified user was added"
            },
            "403": {
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Account mismatch."
            },
            "500": {
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Internal Server Error"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Add notified users to case",
          "tags": [
            "case"
          ],
          "x-codegen-request-body-name": "body"
        }
      },
      "/v1/cases/{caseNumber}/notifiedusers/{delUsername}": {
        "delete": {
          "description": "Remove the user specified by the ssoUsername parameter from the case.",
          "operationId": "removeNotifiedUsers",
          "parameters": [
            {
              "description": "CaseNumber",
              "in": "path",
              "name": "caseNumber",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "Case notified user to delete",
              "in": "path",
              "name": "delUsername",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {},
              "description": "Notified user was deleted"
            },
            "403": {
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Account mismatch."
            },
            "500": {
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Internal Server Error"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Delete notified user from case",
          "tags": [
            "case"
          ]
        }
      },
      "/v1/sftp/attachments/": {
        "get": {
          "parameters": [
            {
              "description": "Absolute Path for which you want to list files",
              "in": "query",
              "name": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "Recursively lists all files if true. Allowed only for internal users",
              "in": "query",
              "name": "includeAll",
              "schema": {
                "default": false,
                "type": "boolean"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "items": {
                      "format": "java.lang.String",
                      "type": "string"
                    },
                    "type": "array"
                  }
                }
              },
              "description": "List of Attachments"
            },
            "204": {
              "content": {},
              "description": "No attachments found"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Forbidden"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Internal Server Error"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "List Sftp Attachments",
          "tags": [
            "sftp"
          ]
        }
      },
      "/v1/sftp/attachments/status": {
        "post": {
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SftpAttachmentStatusRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SftpAttachmentStatusRep"
                  }
                }
              },
              "description": "Attachment Status"
            },
            "400": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Invalid Request"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Forbidden"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Internal Server Error"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Get status for SFTP Attachment uploaded by user",
          "tags": [
            "sftp"
          ],
          "x-codegen-request-body-name": "body"
        }
      },
      "/v1/sftp/token/": {
        "put": {
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SftpTokenRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SftpLoginCredentialsRep"
                  }
                }
              },
              "description": "Updated token"
            },
            "400": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Invalid Request"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Internal Server Error"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Update token for SFTP User",
          "tags": [
            "sftp"
          ],
          "x-codegen-request-body-name": "body"
        }
      },
      "/v1/sftp/token/reset": {
        "get": {
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SftpLoginCredentialsRep"
                  }
                }
              },
              "description": "New token"
            },
            "400": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Invalid Request"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Internal Server Error"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Reset token for SFTP User",
          "tags": [
            "sftp"
          ]
        }
      },
      "/v1/sftp/token/upload/temporary": {
        "get": {
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SftpLoginCredentialsRep"
                  }
                }
              },
              "description": "User token"
            },
            "400": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Invalid Request"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Internal Server Error"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Create upload only SFTP Token for one time use",
          "tags": [
            "sftp"
          ]
        }
      },
      "/v2/sftp/token/": {
        "post": {
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SftpTokenRequest"
                }
              }
            },
            "description": "body",
            "required": false
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SftpLoginCredentialsRep"
                  }
                }
              },
              "description": "User token"
            },
            "400": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Invalid Request"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorRep"
                  }
                }
              },
              "description": "Internal Server Error"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Create token for SFTP User",
          "tags": [
            "sftp"
          ],
          "x-codegen-request-body-name": "body"
        }
      }
    },
    "servers": [
      {
        "url": "https://api.access.redhat.com/support"
      }
    ],
    "tags": [
      {
        "description": "Case APIs",
        "name": "case"
      },
      {
        "description": "Search APIs",
        "name": "search"
      },
      {
        "description": "Business Hours APIs",
        "name": "business hours"
      },
      {
        "description": "Account APIs",
        "name": "Account"
      },
      {
        "description": "Case Attachments APIs",
        "name": "case attachments"
      },
      {
        "description": "Red Hat Secure FTP APIs",
        "name": "sftp"
      }
    ]
  }
}