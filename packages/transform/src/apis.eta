// Auto generated file, do not modify directly.
// See api-documentation-frontend/transform for more info on how to generate this file.

import {OpenAPIV3} from "openapi-types";

import {APIConfiguration, APIContent, APILabel} from "../types";

export const apiLabelsMap: Record<string, Readonly<APILabel>> = {
  <% it.tags.forEach(tag => { %>
  '<%= tag.id %>': {
      id: '<%= tag.id %>',
      name: '<%= tag.name %>',
      type: '<%= tag.type %>',
      devRedHatTaxonomy: <%~ E.includeFile('dev-redhat-taxonomy', tag['dev-rh:taxonomy']) %>,
  },
  <% }) %>
}

export const apiLabels = Object.values(apiLabelsMap) as ReadonlyArray<Readonly<APILabel>>;

export const apiConfigurations: ReadonlyArray<Readonly<APIConfiguration>> = [
    <% it.api.forEach(function(api){ %>
      {
        id: '<%= api.app.id %>',
        displayName: '<%= api.app.name %>',
        description: '<%= api.app.description %>',
        icon: '<%~ E.includeFile('icon', {icon: api.app.icon}) %>',
        apiPath: './apis/<%=api.path.join('/')%>/openapi.json',
        getApiContent: () => import('./apis/<%=api.path.join('/')%>/content.json') as unknown as Promise<APIContent>,
        tags: [
            <% api.app.tags.forEach(function(tag){ %>
                apiLabelsMap['<%= tag %>'],
            <% }) %>
        ]
      },
    <% }) %>
];
